

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Nov  3 09:54:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataBANK1
    23  000194                     __pidataBANK1:
    24                           	opt stack 0
    25                           
    26                           ;initializer for main@F19153
    27  000194  53                 	db	83
    28  000195  6C                 	db	108
    29  000196  61                 	db	97
    30  000197  76                 	db	118
    31  000198  65                 	db	101
    32  000199  20                 	db	32
    33  00019A  31                 	db	49
    34  00019B  20                 	db	32
    35  00019C  52                 	db	82
    36  00019D  65                 	db	101
    37  00019E  61                 	db	97
    38  00019F  64                 	db	100
    39  0001A0  79                 	db	121
    40  0001A1  20                 	db	32
    41  0001A2  0A                 	db	10
    42  0001A3  20                 	db	32
    43  0001A4  0D                 	db	13
    44  0001A5  00                 	db	0
    45  0001A6  00                 	db	0
    46  0001A7  00                 	db	0
    47  0001A8  00                 	db	0
    48  0001A9  00                 	db	0
    49  0001AA  00                 	db	0
    50  0001AB  00                 	db	0
    51  0001AC  00                 	db	0
    52  0001AD  00                 	db	0
    53  0001AE  00                 	db	0
    54  0001AF  00                 	db	0
    55  0001B0  00                 	db	0
    56  0001B1  00                 	db	0
    57  0001B2  00                 	db	0
    58  0001B3  00                 	db	0
    59  0001B4  00                 	db	0
    60  0001B5  00                 	db	0
    61  0001B6  00                 	db	0
    62  0001B7  00                 	db	0
    63  0001B8  00                 	db	0
    64  0001B9  00                 	db	0
    65  0001BA  00                 	db	0
    66  0001BB  00                 	db	0
    67  0001BC  00                 	db	0
    68  0001BD  00                 	db	0
    69  0001BE  00                 	db	0
    70  0001BF  00                 	db	0
    71  0001C0  00                 	db	0
    72  0001C1  00                 	db	0
    73  0001C2  00                 	db	0
    74  0001C3  00                 	db	0
    75  0001C4  00                 	db	0
    76  0001C5  00                 	db	0
    77  0001C6  00                 	db	0
    78  0001C7  00                 	db	0
    79  0001C8  00                 	db	0
    80  0001C9  00                 	db	0
    81  0001CA  00                 	db	0
    82  0001CB  00                 	db	0
    83  0001CC  00                 	db	0
    84  0001CD  00                 	db	0
    85  0001CE  00                 	db	0
    86  0001CF  00                 	db	0
    87  0001D0  00                 	db	0
    88  0001D1  00                 	db	0
    89  0001D2  00                 	db	0
    90  0001D3  00                 	db	0
    91  0001D4  00                 	db	0
    92  0001D5  00                 	db	0
    93  0001D6  00                 	db	0
    94  0001D7  00                 	db	0
    95  0001D8  00                 	db	0
    96  0001D9  00                 	db	0
    97  0001DA  00                 	db	0
    98  0001DB  00                 	db	0
    99  0001DC  00                 	db	0
   100  0001DD  00                 	db	0
   101  0001DE  00                 	db	0
   102  0001DF  00                 	db	0
   103  0001E0  00                 	db	0
   104  0001E1  00                 	db	0
   105  0001E2  00                 	db	0
   106  0001E3  00                 	db	0
   107  0000                     _BAUDCON2bits	set	4025
   108  0000                     _INTCON	set	4082
   109  0000                     _OSCCON	set	4051
   110  0000                     _PIE3bits	set	4003
   111  0000                     _PIR3bits	set	4004
   112  0000                     _PORTA	set	3968
   113  0000                     _PORTB	set	3969
   114  0000                     _PORTC	set	3970
   115  0000                     _RCONbits	set	4048
   116  0000                     _RCREG2	set	3962
   117  0000                     _RCSTA2bits	set	4006
   118  0000                     _SPBRG	set	4015
   119  0000                     _SPBRG2	set	3963
   120  0000                     _SPBRGH2	set	3964
   121  0000                     _TRISA	set	3986
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISC	set	3988
   124  0000                     _TXREG2	set	3961
   125  0000                     _TXSTA2bits	set	4026
   126  0000                     _ADON	set	32272
   127  0000                     _GIE	set	32663
   128  0000                     _PEIE	set	32662
   129  0000                     _RA0	set	31744
   130  0000                     _RA2	set	31746
   131  0000                     _RA3	set	31747
   132  0000                     _RC2IF	set	32037
   133                           
   134                           ; #config settings
   135  0000                     
   136                           	psect	cinit
   137  0001E4                     __pcinit:
   138                           	opt stack 0
   139  0001E4                     start_initialization:
   140                           	opt stack 0
   141  0001E4                     __initialization:
   142                           	opt stack 0
   143                           
   144                           ; Clear objects allocated to BANK2 (128 bytes)
   145  0001E4  EE02  F000         	lfsr	0,__pbssBANK2
   146  0001E8  0E80               	movlw	128
   147  0001EA                     clear_0:
   148  0001EA  6AEE               	clrf	postinc0,c
   149  0001EC  06E8               	decf	wreg,f,c
   150  0001EE  E1FD               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to BANK1 (80 bytes)
   153  0001F0  EE01  F000         	lfsr	0,__pbssBANK1
   154  0001F4  0E50               	movlw	80
   155  0001F6                     clear_1:
   156  0001F6  6AEE               	clrf	postinc0,c
   157  0001F8  06E8               	decf	wreg,f,c
   158  0001FA  E1FD               	bnz	clear_1
   159                           
   160                           ; Clear objects allocated to COMRAM (3 bytes)
   161  0001FC  6A19               	clrf	(__pbssCOMRAM+2)& (0+255),c
   162  0001FE  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   163  000200  6A17               	clrf	__pbssCOMRAM& (0+255),c
   164                           
   165                           ; Initialize objects allocated to BANK1 (80 bytes)
   166                           ; load TBLPTR registers with __pidataBANK1
   167  000202  0E94               	movlw	low __pidataBANK1
   168  000204  6EF6               	movwf	tblptrl,c
   169  000206  0E01               	movlw	high __pidataBANK1
   170  000208  6EF7               	movwf	tblptrh,c
   171  00020A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   172  00020C  6EF8               	movwf	tblptru,c
   173  00020E  EE01  F050         	lfsr	0,__pdataBANK1
   174  000212  EE10 F050          	lfsr	1,80
   175  000216                     copy_data0:
   176  000216  0009               	tblrd		*+
   177  000218  CFF5 FFEE          	movff	tablat,postinc0
   178  00021C  50E5               	movf	postdec1,w,c
   179  00021E  50E1               	movf	fsr1l,w,c
   180  000220  E1FA               	bnz	copy_data0
   181  000222                     end_of_initialization:
   182                           	opt stack 0
   183  000222                     __end_of__initialization:
   184                           	opt stack 0
   185  000222  0100               	movlb	0
   186  000224  EF6D  F000         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           postdec1	equ	0xFE5
   194                           fsr1l	equ	0xFE1
   195                           
   196                           	psect	bssCOMRAM
   197  000017                     __pbssCOMRAM:
   198                           	opt stack 0
   199  000017                     _compteur:
   200                           	opt stack 0
   201  000017                     	ds	2
   202  000019                     _tampon:
   203                           	opt stack 0
   204  000019                     	ds	1
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	bssBANK1
   215  000100                     __pbssBANK1:
   216                           	opt stack 0
   217  000100                     _msg:
   218                           	opt stack 0
   219  000100                     	ds	80
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	dataBANK1
   230  000150                     __pdataBANK1:
   231                           	opt stack 0
   232  000150                     main@F19153:
   233                           	opt stack 0
   234  000150                     	ds	80
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           postdec1	equ	0xFE5
   242                           fsr1l	equ	0xFE1
   243                           
   244                           	psect	bssBANK2
   245  000200                     __pbssBANK2:
   246                           	opt stack 0
   247  000200                     _stock_led:
   248                           	opt stack 0
   249  000200                     	ds	128
   250                           tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	cstackBANK0
   260  000060                     __pcstackBANK0:
   261                           	opt stack 0
   262  000060                     main@msg1:
   263                           	opt stack 0
   264                           
   265                           ; 80 bytes @ 0x0
   266  000060                     	ds	80
   267  0000B0                     main@address:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x50
   271  0000B0                     	ds	1
   272  0000B1                     main@i:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x51
   276  0000B1                     	ds	2
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           fsr1l	equ	0xFE1
   285                           
   286                           	psect	cstackCOMRAM
   287  000001                     __pcstackCOMRAM:
   288                           	opt stack 0
   289  000001                     ??_high_isr:
   290  000001                     
   291                           ; 1 bytes @ 0x0
   292  000001                     	ds	17
   293  000012                     ??_readAddress:
   294  000012                     writeStringToUART@msg:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x11
   298  000012                     	ds	2
   299  000014                     
   300                           ; 0 bytes @ 0x13
   301  000014                     	ds	3
   302  000017                     tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           postdec1	equ	0xFE5
   309                           fsr1l	equ	0xFE1
   310                           
   311                           ; 0 bytes @ 0x16
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 101 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  i               2   81[BANK0 ] int 
   322 ;;  msg1           80    0[BANK0 ] unsigned char [80]
   323 ;;  msg2           80    0        unsigned char [80]
   324 ;;  address         1   80[BANK0 ] unsigned char 
   325 ;; Return value:  Size  Location     Type
   326 ;;		None               void
   327 ;; Registers used:
   328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   335 ;;      Locals:         0      83       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   337 ;;      Totals:         0      83       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   338 ;;Total ram usage:       83 bytes
   339 ;; Hardware stack levels required when called:    2
   340 ;; This function calls:
   341 ;;		_initComms
   342 ;;		_initPorts
   343 ;;		_readAddress
   344 ;;		_writeStringToUART
   345 ;; This function is called by:
   346 ;;		Startup code after reset
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text0
   351  0000DA                     __ptext0:
   352                           	opt stack 0
   353  0000DA                     _main:
   354                           	opt stack 29
   355                           
   356                           ;main.c: 102: unsigned char address = 0;
   357                           
   358                           ;incstack = 0
   359  0000DA  0E00               	movlw	0
   360  0000DC  0100               	movlb	0	; () banked
   361  0000DE  6FB0               	movwf	main@address& (0+255),b
   362                           
   363                           ; BSR set to: 0
   364                           ;main.c: 103: char msg1[80] = "Slave 1 Ready \n \r";
   365  0000E0  EE21  F050         	lfsr	2,main@F19153
   366  0000E4  EE10  F060         	lfsr	1,main@msg1
   367  0000E8  0E50               	movlw	80
   368  0000EA                     u211:
   369  0000EA  CFDE FFE6          	movff	postinc2,postinc1
   370  0000EE  2EE8               	decfsz	wreg,f,c
   371  0000F0  D7FC               	goto	u211
   372                           
   373                           ; BSR set to: 0
   374                           ;main.c: 105: char msg2[80];
   375                           ;main.c: 110: initPorts();
   376  0000F2  EC34  F001         	call	_initPorts	;wreg free
   377                           
   378                           ;main.c: 111: initComms();
   379  0000F6  EC14  F001         	call	_initComms	;wreg free
   380                           
   381                           ;main.c: 118: address = readAddress();
   382  0000FA  ECA1  F000         	call	_readAddress	;wreg free
   383  0000FE  0100               	movlb	0	; () banked
   384  000100  6FB0               	movwf	main@address& (0+255),b
   385  000102                     l819:
   386                           
   387                           ; BSR set to: 0
   388                           ;main.c: 127: writeStringToUART(msg1);
   389  000102  0100               	movlb	0	; () banked
   390  000104  0E00               	movlw	high main@msg1
   391  000106  6E13               	movwf	writeStringToUART@msg+1,c
   392  000108  0100               	movlb	0	; () banked
   393  00010A  0E60               	movlw	low main@msg1
   394  00010C  6E12               	movwf	writeStringToUART@msg,c
   395  00010E  EC48  F001         	call	_writeStringToUART	;wreg free
   396                           
   397                           ;main.c: 129: for (int i = 0; i < 100; i++) {
   398  000112  0E00               	movlw	0
   399  000114  0100               	movlb	0	; () banked
   400  000116  6FB2               	movwf	(main@i+1)& (0+255),b
   401  000118  0E00               	movlw	0
   402  00011A  0100               	movlb	0	; () banked
   403  00011C  6FB1               	movwf	main@i& (0+255),b
   404  00011E                     
   405                           ; BSR set to: 0
   406  00011E  0100               	movlb	0	; () banked
   407  000120  51B2               	movf	(main@i+1)& (0+255),w,b
   408  000122  0A80               	xorlw	128
   409  000124  0F80               	addlw	-128
   410  000126  0E64               	movlw	100
   411  000128  B4D8               	btfsc	status,2,c
   412  00012A  5DB1               	subwf	main@i& (0+255),w,b
   413  00012C  B0D8               	btfsc	status,0,c
   414  00012E  D004               	goto	l42
   415                           
   416                           ; BSR set to: 0
   417                           
   418                           ; BSR set to: 0
   419                           
   420                           ; BSR set to: 0
   421  000130  0100               	movlb	0	; () banked
   422  000132  4BB1               	infsnz	main@i& (0+255),f,b
   423  000134  2BB2               	incf	(main@i+1)& (0+255),f,b
   424  000136  D7F3               	goto	L1
   425  000138                     l42:
   426                           
   427                           ; BSR set to: 0
   428                           ;main.c: 130: }
   429                           ;main.c: 132: PORTA = stock_led[0];
   430  000138  C200  FF80         	movff	_stock_led,3968	;volatile
   431                           
   432                           ;main.c: 133: PORTC = stock_led[0 + 1];
   433  00013C  C201  FF82         	movff	_stock_led+1,3970	;volatile
   434  000140  D7E0               	goto	l819
   435  000142                     __end_of_main:
   436                           	opt stack 0
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postinc1	equ	0xFE6
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           postinc2	equ	0xFDE
   447                           status	equ	0xFD8
   448                           
   449 ;; *************** function _writeStringToUART *****************
   450 ;; Defined at:
   451 ;;		line 58 in file "usart.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  msg             2   17[COMRAM] PTR const unsigned char 
   454 ;;		 -> main@msg1(80), 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;		None               void
   459 ;; Registers used:
   460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   470 ;;Total ram usage:        2 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text1
   481  000290                     __ptext1:
   482                           	opt stack 0
   483  000290                     _writeStringToUART:
   484                           	opt stack 29
   485                           
   486                           ;usart.c: 60: while(*msg) {
   487                           
   488                           ; BSR set to: 0
   489                           ;incstack = 0
   490  000290  D00A               	goto	l793
   491  000292                     l78:
   492  000292  A8A4               	btfss	4004,4,c	;volatile
   493  000294  D7FE               	goto	l78
   494                           
   495                           ;usart.c: 62: TXREG2 = *msg++;
   496  000296  C012  FFD9         	movff	writeStringToUART@msg,fsr2l
   497  00029A  C013  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   498  00029E  50DF               	movf	indf2,w,c
   499  0002A0  6E79               	movwf	3961,c	;volatile
   500  0002A2  4A12               	infsnz	writeStringToUART@msg,f,c
   501  0002A4  2A13               	incf	writeStringToUART@msg+1,f,c
   502  0002A6                     l793:
   503  0002A6  C012  FFD9         	movff	writeStringToUART@msg,fsr2l
   504  0002AA  C013  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   505  0002AE  50DF               	movf	indf2,w,c
   506  0002B0  B4D8               	btfsc	status,2,c
   507  0002B2  0012               	return	
   508  0002B4  D7EE               	goto	l78
   509  0002B6                     __end_of_writeStringToUART:
   510                           	opt stack 0
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postinc1	equ	0xFE6
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           indf2	equ	0xFDF
   521                           postinc2	equ	0xFDE
   522                           fsr2h	equ	0xFDA
   523                           fsr2l	equ	0xFD9
   524                           status	equ	0xFD8
   525                           
   526 ;; *************** function _readAddress *****************
   527 ;; Defined at:
   528 ;;		line 137 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      unsigned char 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   544 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   545 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   546 ;;Total ram usage:        5 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    1
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text2
   557  000142                     __ptext2:
   558                           	opt stack 0
   559  000142                     _readAddress:
   560                           	opt stack 29
   561                           
   562                           ;main.c: 138: return !RA3 << 3 | !RA2 << 2 | !RA2 << 1 | !RA0;
   563                           
   564                           ;incstack = 0
   565  000142  B080               	btfsc	3968,0,c	;volatile
   566  000144  D002               	goto	u130
   567  000146  0E01               	movlw	1
   568  000148  D001               	goto	u136
   569  00014A                     u130:
   570  00014A  0E00               	movlw	0
   571  00014C                     u136:
   572  00014C  6E12               	movwf	??_readAddress& (0+255),c
   573  00014E  B480               	btfsc	3968,2,c	;volatile
   574  000150  D002               	goto	u140
   575  000152  0E01               	movlw	1
   576  000154  D001               	goto	u146
   577  000156                     u140:
   578  000156  0E00               	movlw	0
   579  000158                     u146:
   580  000158  6E13               	movwf	(??_readAddress+1)& (0+255),c
   581  00015A  90D8               	bcf	status,0,c
   582  00015C  3413               	rlcf	??_readAddress+1,w,c
   583  00015E  6E14               	movwf	(??_readAddress+2)& (0+255),c
   584  000160  B480               	btfsc	3968,2,c	;volatile
   585  000162  D002               	goto	u150
   586  000164  0E01               	movlw	1
   587  000166  D001               	goto	u156
   588  000168                     u150:
   589  000168  0E00               	movlw	0
   590  00016A                     u156:
   591  00016A  6E15               	movwf	(??_readAddress+3)& (0+255),c
   592  00016C  90D8               	bcf	status,0,c
   593  00016E  3615               	rlcf	??_readAddress+3,f,c
   594  000170  90D8               	bcf	status,0,c
   595  000172  3615               	rlcf	??_readAddress+3,f,c
   596  000174  B680               	btfsc	3968,3,c	;volatile
   597  000176  D002               	goto	u160
   598  000178  0E01               	movlw	1
   599  00017A  D001               	goto	u166
   600  00017C                     u160:
   601  00017C  0E00               	movlw	0
   602  00017E                     u166:
   603  00017E  6E16               	movwf	(??_readAddress+4)& (0+255),c
   604  000180  90D8               	bcf	status,0,c
   605  000182  3616               	rlcf	??_readAddress+4,f,c
   606  000184  90D8               	bcf	status,0,c
   607  000186  3616               	rlcf	??_readAddress+4,f,c
   608  000188  90D8               	bcf	status,0,c
   609  00018A  3416               	rlcf	??_readAddress+4,w,c
   610  00018C  1015               	iorwf	??_readAddress+3,w,c
   611  00018E  1014               	iorwf	??_readAddress+2,w,c
   612  000190  1012               	iorwf	??_readAddress,w,c
   613  000192  0012               	return	
   614  000194                     __end_of_readAddress:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postinc1	equ	0xFE6
   623                           postdec1	equ	0xFE5
   624                           fsr1l	equ	0xFE1
   625                           indf2	equ	0xFDF
   626                           postinc2	equ	0xFDE
   627                           fsr2h	equ	0xFDA
   628                           fsr2l	equ	0xFD9
   629                           status	equ	0xFD8
   630                           
   631 ;; *************** function _initPorts *****************
   632 ;; Defined at:
   633 ;;		line 7 in file "port.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;		None               void
   640 ;; Registers used:
   641 ;;		wreg, status,2
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662  000268                     __ptext3:
   663                           	opt stack 0
   664  000268                     _initPorts:
   665                           	opt stack 29
   666                           
   667                           ;port.c: 11: OSCCON = 0x30;
   668                           
   669                           ;incstack = 0
   670  000268  0E30               	movlw	48
   671  00026A  6ED3               	movwf	4051,c	;volatile
   672                           
   673                           ;port.c: 17: ADON = 1;
   674  00026C  80C2               	bsf	4034,0,c	;volatile
   675                           
   676                           ;port.c: 20: PORTA = 0b00000000;
   677  00026E  0E00               	movlw	0
   678  000270  6E80               	movwf	3968,c	;volatile
   679                           
   680                           ;port.c: 21: TRISA = 0b00000000;
   681  000272  0E00               	movlw	0
   682  000274  6E92               	movwf	3986,c	;volatile
   683                           
   684                           ;port.c: 23: PORTB = 0b01001000;
   685  000276  0E48               	movlw	72
   686  000278  6E81               	movwf	3969,c	;volatile
   687                           
   688                           ;port.c: 24: TRISB = 0b10010011;
   689  00027A  0E93               	movlw	147
   690  00027C  6E93               	movwf	3987,c	;volatile
   691                           
   692                           ;port.c: 26: PORTC = 0b00000000;
   693  00027E  0E00               	movlw	0
   694  000280  6E82               	movwf	3970,c	;volatile
   695                           
   696                           ;port.c: 27: TRISC = 0b00000000;
   697  000282  0E00               	movlw	0
   698  000284  6E94               	movwf	3988,c	;volatile
   699                           
   700                           ;port.c: 30: GIE = 1;
   701  000286  8EF2               	bsf	intcon,7,c	;volatile
   702                           
   703                           ;port.c: 31: PEIE = 1;
   704  000288  8CF2               	bsf	intcon,6,c	;volatile
   705                           
   706                           ;port.c: 32: INTCON =0b11000000;
   707  00028A  0EC0               	movlw	192
   708  00028C  6EF2               	movwf	intcon,c	;volatile
   709  00028E  0012               	return	
   710  000290                     __end_of_initPorts:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           intcon	equ	0xFF2
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postinc1	equ	0xFE6
   720                           postdec1	equ	0xFE5
   721                           fsr1l	equ	0xFE1
   722                           indf2	equ	0xFDF
   723                           postinc2	equ	0xFDE
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           status	equ	0xFD8
   727                           
   728 ;; *************** function _initComms *****************
   729 ;; Defined at:
   730 ;;		line 6 in file "usart.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;		None               void
   737 ;; Registers used:
   738 ;;		wreg, status,2
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text4
   759  000228                     __ptext4:
   760                           	opt stack 0
   761  000228                     _initComms:
   762                           	opt stack 29
   763                           
   764                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   765                           
   766                           ;incstack = 0
   767  000228  9EBA               	bcf	4026,7,c	;volatile
   768                           
   769                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   770  00022A  9CBA               	bcf	4026,6,c	;volatile
   771                           
   772                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   773  00022C  8ABA               	bsf	4026,5,c	;volatile
   774                           
   775                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   776  00022E  98BA               	bcf	4026,4,c	;volatile
   777                           
   778                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   779  000230  96BA               	bcf	4026,3,c	;volatile
   780                           
   781                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   782  000232  84BA               	bsf	4026,2,c	;volatile
   783                           
   784                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
   785  000234  82BA               	bsf	4026,1,c	;volatile
   786                           
   787                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
   788  000236  90BA               	bcf	4026,0,c	;volatile
   789                           
   790                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
   791  000238  8EA6               	bsf	4006,7,c	;volatile
   792                           
   793                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
   794  00023A  9CA6               	bcf	4006,6,c	;volatile
   795                           
   796                           ;usart.c: 19: RCSTA2bits.SREN = 0;
   797  00023C  9AA6               	bcf	4006,5,c	;volatile
   798                           
   799                           ;usart.c: 20: RCSTA2bits.CREN = 1;
   800  00023E  88A6               	bsf	4006,4,c	;volatile
   801                           
   802                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
   803  000240  96A6               	bcf	4006,3,c	;volatile
   804                           
   805                           ;usart.c: 22: RCSTA2bits.FERR = 0;
   806  000242  94A6               	bcf	4006,2,c	;volatile
   807                           
   808                           ;usart.c: 23: RCSTA2bits.OERR = 0;
   809  000244  92A6               	bcf	4006,1,c	;volatile
   810                           
   811                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
   812  000246  90A6               	bcf	4006,0,c	;volatile
   813                           
   814                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
   815  000248  9EB9               	bcf	4025,7,c	;volatile
   816                           
   817                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
   818  00024A  8CB9               	bsf	4025,6,c	;volatile
   819                           
   820                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
   821  00024C  9AB9               	bcf	4025,5,c	;volatile
   822                           
   823                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
   824  00024E  98B9               	bcf	4025,4,c	;volatile
   825                           
   826                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
   827  000250  86B9               	bsf	4025,3,c	;volatile
   828                           
   829                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
   830  000252  92B9               	bcf	4025,1,c	;volatile
   831                           
   832                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
   833  000254  90B9               	bcf	4025,0,c	;volatile
   834                           
   835                           ;usart.c: 34: SPBRGH2 = 0;
   836  000256  0E00               	movlw	0
   837  000258  6E7C               	movwf	3964,c	;volatile
   838                           
   839                           ;usart.c: 36: PIE3bits.RC2IE = 1;
   840  00025A  8AA3               	bsf	4003,5,c	;volatile
   841                           
   842                           ;usart.c: 37: RCONbits.IPEN = 1;
   843  00025C  8ED0               	bsf	4048,7,c	;volatile
   844                           
   845                           ;usart.c: 50: SPBRG = 51;
   846  00025E  0E33               	movlw	51
   847  000260  6EAF               	movwf	4015,c	;volatile
   848                           
   849                           ;usart.c: 51: SPBRG2 = 12;
   850  000262  0E0C               	movlw	12
   851  000264  6E7B               	movwf	3963,c	;volatile
   852  000266  0012               	return	
   853  000268                     __end_of_initComms:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           intcon	equ	0xFF2
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           postinc1	equ	0xFE6
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           indf2	equ	0xFDF
   866                           postinc2	equ	0xFDE
   867                           fsr2h	equ	0xFDA
   868                           fsr2l	equ	0xFD9
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _high_isr *****************
   872 ;; Defined at:
   873 ;;		line 88 in file "main.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   889 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   890 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   891 ;;Total ram usage:       17 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		Interrupt level 1
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	intcodelo
   901  000018                     __pintcodelo:
   902                           	opt stack 0
   903  000018                     _high_isr:
   904                           	opt stack 29
   905                           
   906                           ;incstack = 0
   907  000018  CFD8 F001          	movff	status,??_high_isr
   908  00001C  CFE8 F002          	movff	wreg,??_high_isr+1
   909  000020  CFE0 F003          	movff	bsr,??_high_isr+2
   910  000024  CFFA F004          	movff	pclath,??_high_isr+3
   911  000028  CFFB F005          	movff	pclatu,??_high_isr+4
   912  00002C  CFE9 F006          	movff	fsr0l,??_high_isr+5
   913  000030  CFEA F007          	movff	fsr0h,??_high_isr+6
   914  000034  CFE1 F008          	movff	fsr1l,??_high_isr+7
   915  000038  CFE2 F009          	movff	fsr1h,??_high_isr+8
   916  00003C  CFD9 F00A          	movff	fsr2l,??_high_isr+9
   917  000040  CFDA F00B          	movff	fsr2h,??_high_isr+10
   918  000044  CFF3 F00C          	movff	prodl,??_high_isr+11
   919  000048  CFF4 F00D          	movff	prodh,??_high_isr+12
   920  00004C  CFF6 F00E          	movff	tblptrl,??_high_isr+13
   921  000050  CFF7 F00F          	movff	tblptrh,??_high_isr+14
   922  000054  CFF8 F010          	movff	tblptru,??_high_isr+15
   923  000058  CFF5 F011          	movff	tablat,??_high_isr+16
   924                           
   925                           ;main.c: 89: if (RC2IF ) {
   926  00005C  AAA4               	btfss	4004,5,c	;volatile
   927  00005E  D017               	goto	i1l807
   928                           
   929                           ;main.c: 90: tampon = RCREG2;
   930  000060  CF7A F019          	movff	3962,_tampon	;volatile
   931                           
   932                           ;main.c: 92: if (compteur == 128) {
   933  000064  5017               	movf	_compteur,w,c
   934  000066  0A80               	xorlw	128
   935  000068  1018               	iorwf	_compteur+1,w,c
   936  00006A  A4D8               	btfss	status,2,c
   937  00006C  D004               	goto	i1l803
   938                           
   939                           ;main.c: 93: compteur = 0;
   940  00006E  0E00               	movlw	0
   941  000070  6E18               	movwf	_compteur+1,c
   942  000072  0E00               	movlw	0
   943  000074  6E17               	movwf	_compteur,c
   944  000076                     i1l803:
   945                           
   946                           ;main.c: 94: }
   947                           ;main.c: 95: stock_led[compteur] = tampon;
   948  000076  0102               	movlb	2	; () banked
   949  000078  0E00               	movlw	low _stock_led
   950  00007A  2417               	addwf	_compteur,w,c
   951  00007C  6ED9               	movwf	fsr2l,c
   952  00007E  0102               	movlb	2	; () banked
   953  000080  0E02               	movlw	high _stock_led
   954  000082  2018               	addwfc	_compteur+1,w,c
   955  000084  6EDA               	movwf	fsr2h,c
   956  000086  C019  FFDF         	movff	_tampon,indf2
   957                           
   958                           ; BSR set to: 2
   959                           ;main.c: 96: compteur++;
   960  00008A  4A17               	infsnz	_compteur,f,c
   961  00008C  2A18               	incf	_compteur+1,f,c
   962  00008E                     i1l807:
   963                           
   964                           ;main.c: 97: }
   965                           ;main.c: 98: RC2IF = 0;
   966  00008E  9AA4               	bcf	4004,5,c	;volatile
   967  000090  C011  FFF5         	movff	??_high_isr+16,tablat
   968  000094  C010  FFF8         	movff	??_high_isr+15,tblptru
   969  000098  C00F  FFF7         	movff	??_high_isr+14,tblptrh
   970  00009C  C00E  FFF6         	movff	??_high_isr+13,tblptrl
   971  0000A0  C00D  FFF4         	movff	??_high_isr+12,prodh
   972  0000A4  C00C  FFF3         	movff	??_high_isr+11,prodl
   973  0000A8  C00B  FFDA         	movff	??_high_isr+10,fsr2h
   974  0000AC  C00A  FFD9         	movff	??_high_isr+9,fsr2l
   975  0000B0  C009  FFE2         	movff	??_high_isr+8,fsr1h
   976  0000B4  C008  FFE1         	movff	??_high_isr+7,fsr1l
   977  0000B8  C007  FFEA         	movff	??_high_isr+6,fsr0h
   978  0000BC  C006  FFE9         	movff	??_high_isr+5,fsr0l
   979  0000C0  C005  FFFB         	movff	??_high_isr+4,pclatu
   980  0000C4  C004  FFFA         	movff	??_high_isr+3,pclath
   981  0000C8  C003  FFE0         	movff	??_high_isr+2,bsr
   982  0000CC  C002  FFE8         	movff	??_high_isr+1,wreg
   983  0000D0  C001  FFD8         	movff	??_high_isr,status
   984  0000D4  0010               	retfie	
   985  0000D6                     __end_of_high_isr:
   986                           	opt stack 0
   987  0000                     pclatu	equ	0xFFB
   988                           pclath	equ	0xFFA
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           prodh	equ	0xFF4
   994                           prodl	equ	0xFF3
   995                           intcon	equ	0xFF2
   996                           postinc0	equ	0xFEE
   997                           fsr0h	equ	0xFEA
   998                           fsr0l	equ	0xFE9
   999                           wreg	equ	0xFE8
  1000                           postinc1	equ	0xFE6
  1001                           postdec1	equ	0xFE5
  1002                           fsr1h	equ	0xFE2
  1003                           fsr1l	equ	0xFE1
  1004                           bsr	equ	0xFE0
  1005                           indf2	equ	0xFDF
  1006                           postinc2	equ	0xFDE
  1007                           fsr2h	equ	0xFDA
  1008                           fsr2l	equ	0xFD9
  1009                           status	equ	0xFD8
  1010                           pclatu	equ	0xFFB
  1011                           pclath	equ	0xFFA
  1012                           tblptru	equ	0xFF8
  1013                           tblptrh	equ	0xFF7
  1014                           tblptrl	equ	0xFF6
  1015                           tablat	equ	0xFF5
  1016                           prodh	equ	0xFF4
  1017                           prodl	equ	0xFF3
  1018                           intcon	equ	0xFF2
  1019                           postinc0	equ	0xFEE
  1020                           fsr0h	equ	0xFEA
  1021                           fsr0l	equ	0xFE9
  1022                           wreg	equ	0xFE8
  1023                           postinc1	equ	0xFE6
  1024                           postdec1	equ	0xFE5
  1025                           fsr1h	equ	0xFE2
  1026                           fsr1l	equ	0xFE1
  1027                           bsr	equ	0xFE0
  1028                           indf2	equ	0xFDF
  1029                           postinc2	equ	0xFDE
  1030                           fsr2h	equ	0xFDA
  1031                           fsr2l	equ	0xFD9
  1032                           status	equ	0xFD8
  1033                           
  1034                           	psect	rparam
  1035  0000                     pclatu	equ	0xFFB
  1036                           pclath	equ	0xFFA
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           prodh	equ	0xFF4
  1042                           prodl	equ	0xFF3
  1043                           intcon	equ	0xFF2
  1044                           postinc0	equ	0xFEE
  1045                           fsr0h	equ	0xFEA
  1046                           fsr0l	equ	0xFE9
  1047                           wreg	equ	0xFE8
  1048                           postinc1	equ	0xFE6
  1049                           postdec1	equ	0xFE5
  1050                           fsr1h	equ	0xFE2
  1051                           fsr1l	equ	0xFE1
  1052                           bsr	equ	0xFE0
  1053                           indf2	equ	0xFDF
  1054                           postinc2	equ	0xFDE
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        80
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      25
    BANK0           160     83      83
    BANK1           256      0     160
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    writeStringToUART@msg	PTR const unsigned char  size(2) Largest target is 80
		 -> main@msg1(BANK0[80]), 


Critical Paths under _main in COMRAM

    _main->_readAddress

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               163   163      0     171
                                              0 BANK0     83    83      0
                          _initComms
                          _initPorts
                        _readAddress
                  _writeStringToUART
 ---------------------------------------------------------------------------------
 (1) _writeStringToUART                                    2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _readAddress                                          5     5      0       0
                                             17 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initComms
   _initPorts
   _readAddress
   _writeStringToUART

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      80      10       50.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      53       5       51.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      19       1       26.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18C       6        0.0%
DATA                 0      0     18C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Nov  3 09:54:15 2014

               __CFG_CP0$ON 000000                 __CFG_CP1$ON 000000                 __CFG_CP2$ON 000000  
               __CFG_CP3$ON 000000                          l42 0138                          l78 0292  
               __CFG_CPB$ON 000000                 __CFG_CPD$ON 000000                          bsr 000FE0  
               __CFG_BORV$3 000000                         l819 0102                         l793 02A6  
                       _GIE 007F97                         _RA0 007C00                         _RA2 007C02  
                       _RA3 007C03                         u130 014A                         u211 00EA  
                       u140 0156                         u150 0168                         u160 017C  
                       u136 014C                         u146 0158                         u156 016A  
                       u166 017E                         _msg 0100                         wreg 000FE8  
                _TXSTA2bits 000FBA                 main@address 00B0                        _ADON 007E10  
                      _PEIE 007F96                __CFG_WRT0$ON 000000                __CFG_WRT1$ON 000000  
              __CFG_WRT2$ON 000000                __CFG_WRT3$ON 000000               __CFG_EBTR0$ON 000000  
             __CFG_EBTR1$ON 000000               __CFG_EBTR2$ON 000000               __CFG_EBTR3$ON 000000  
              __CFG_WRTB$ON 000000                __CFG_WRTC$ON 000000                __CFG_WRTD$ON 000000  
             __CFG_EBTRB$ON 000000                        _main 00DA                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 00D6               __CFG_IESO$OFF 000000                ?_readAddress 0001  
             __CFG_RETEN$ON 000000                _BAUDCON2bits 000FB9                       ?_main 0001  
                     _RC2IF 007D25                       i1l803 0076                       i1l807 008E  
                     _SPBRG 000FAF                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94              __CFG_FCMEN$OFF 000000                       main@i 00B1  
                     tablat 000FF5           _writeStringToUART 0290                       status 000FD8  
        ?_writeStringToUART 0012              __CFG_MCLRE$OFF 000000             __initialization 01E4  
              __end_of_main 0142         ??_writeStringToUART 0014                      ??_main 0017  
             __activetblptr 000000   __end_of_writeStringToUART 02B6             __CFG_BBSIZ$BB2K 000000  
            __CFG_WDTEN$OFF 000000                      _INTCON 000FF2                      _RCREG2 000F7A  
                    _OSCCON 000FD3                      _SPBRG2 000F7B                      _TXREG2 000F79  
            __CFG_PWRTEN$ON 000000              __CFG_XINST$OFF 000000            __end_of_high_isr 00D6  
            __CFG_STVREN$ON 000000                      clear_0 01EA                      clear_1 01F6  
                    _tampon 0019                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 0222  
            __pcstackCOMRAM 0001                __pidataBANK1 0194        __size_of_readAddress 0052  
__size_of_writeStringToUART 0026                  __pbssBANK1 0100                  __pbssBANK2 0200  
           __CFG_PLLCFG$OFF 000000          __size_of_initComms 0040          __size_of_initPorts 0028  
          __CFG_CANMX$PORTB 000000                     _SPBRGH2 000F7C                   ?_high_isr 0001  
                   __Hparam 0000                     __Lparam 0000                     __pcinit 01E4  
                   __ramtop 0F00                     __ptext0 00DA                     __ptext1 0290  
                   __ptext2 0142                     __ptext3 0268                     __ptext4 0228  
         __end_of_initComms 0268           __end_of_initPorts 0290           __CFG_MSSPMSK$MSK7 000000  
      writeStringToUART@msg 0012                  ??_high_isr 0001        end_of_initialization 0222  
                   postdec1 000FE5                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  main@F19153 0150            __CFG_FOSC$INTIO2 000000  
       start_initialization 01E4               ??_readAddress 0012                 __pdataBANK1 0150  
               __pbssCOMRAM 0017               __pcstackBANK0 0060           __size_of_high_isr 00BE  
               __pintcodelo 0018         __end_of_readAddress 0194                   _initComms 0228  
                 _initPorts 0268                    _PIE3bits 000FA3                    _PIR3bits 000FA4  
                  _RCONbits 000FD0            __CFG_SOSCSEL$DIG 000000                   _stock_led 0200  
                ?_initComms 0001                  ?_initPorts 0001                   copy_data0 0216  
                  __Hrparam 0000                 _readAddress 0142                    __Lrparam 0000  
        __CFG_BOREN$SBORDIS 000000                    _high_isr 0018                    _compteur 0017  
             __size_of_main 0068                    main@msg1 0060         __CFG_INTOSCSEL$HIGH 000000  
               ??_initComms 0012                 ??_initPorts 0012                    intlevel1 0000  
                _RCSTA2bits 000FA6          __CFG_WDTPS$1048576 000000         __CFG_BORPWR$ZPBORMV 000000  
