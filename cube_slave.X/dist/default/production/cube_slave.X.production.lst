

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Oct 18 15:35:26 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           	psect	idataCOMRAM
    18  007D3E                     __pidataCOMRAM:
    19                           	opt stack 0
    20                           
    21                           ;initializer for _Txdata
    22  007D3E  4D                 	db	77
    23  007D3F  49                 	db	73
    24  007D40  43                 	db	67
    25  007D41  52                 	db	82
    26  007D42  4F                 	db	79
    27  007D43  43                 	db	67
    28  007D44  48                 	db	72
    29  007D45  49                 	db	73
    30  007D46  50                 	db	80
    31  007D47  5F                 	db	95
    32  007D48  55                 	db	85
    33  007D49  53                 	db	83
    34  007D4A  41                 	db	65
    35  007D4B  52                 	db	82
    36  007D4C  54                 	db	84
    37  007D4D  00                 	db	0
    38  0000                     _RCSTA1bits	set	4011
    39  0000                     _SPBRG1	set	4015
    40  0000                     _SPBRGH1	set	3965
    41  0000                     _TXREG	set	4013
    42  0000                     _TXSTA1bits	set	4012
    43  0000                     _CREN1	set	32092
    44  0000                     _TRISC6	set	31910
    45  0000                     _TRISC7	set	31911
    46  0000                     _TRMT1	set	32097
    47  0000                     _TXEN1	set	32101
    48                           
    49                           ; #config settings
    50  0000                     
    51                           	psect	cinit
    52  007D76                     __pcinit:
    53                           	opt stack 0
    54  007D76                     start_initialization:
    55                           	opt stack 0
    56  007D76                     __initialization:
    57                           	opt stack 0
    58                           
    59                           ; Clear objects allocated to COMRAM (25 bytes)
    60  007D76  EE00  F028         	lfsr	0,__pbssCOMRAM
    61  007D7A  0E19               	movlw	25
    62  007D7C                     clear_0:
    63  007D7C  6AEE               	clrf	postinc0,c
    64  007D7E  06E8               	decf	wreg,f,c
    65  007D80  E1FD               	bnz	clear_0
    66                           
    67                           ; Initialize objects allocated to COMRAM (16 bytes)
    68                           ; load TBLPTR registers with __pidataCOMRAM
    69  007D82  0E3E               	movlw	low __pidataCOMRAM
    70  007D84  6EF6               	movwf	tblptrl,c
    71  007D86  0E7D               	movlw	high __pidataCOMRAM
    72  007D88  6EF7               	movwf	tblptrh,c
    73  007D8A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    74  007D8C  6EF8               	movwf	tblptru,c
    75  007D8E  EE00  F041         	lfsr	0,__pdataCOMRAM
    76  007D92  EE10 F010          	lfsr	1,16
    77  007D96                     copy_data0:
    78  007D96  0009               	tblrd		*+
    79  007D98  CFF5 FFEE          	movff	tablat,postinc0
    80  007D9C  50E5               	movf	postdec1,w,c
    81  007D9E  50E1               	movf	fsr1l,w,c
    82  007DA0  E1FA               	bnz	copy_data0
    83  007DA2                     end_of_initialization:
    84                           	opt stack 0
    85  007DA2                     __end_of__initialization:
    86                           	opt stack 0
    87  007DA2  0100               	movlb	0
    88  007DA4  EFA7  F03E         	goto	_main	;jump to C main() function
    89                           tblptru	equ	0xFF8
    90                           tblptrh	equ	0xFF7
    91                           tblptrl	equ	0xFF6
    92                           tablat	equ	0xFF5
    93                           postinc0	equ	0xFEE
    94                           wreg	equ	0xFE8
    95                           postdec1	equ	0xFE5
    96                           fsr1l	equ	0xFE1
    97                           
    98                           	psect	bssCOMRAM
    99  000028                     __pbssCOMRAM:
   100                           	opt stack 0
   101  000028                     _Rxdata:
   102                           	opt stack 0
   103  000028                     	ds	25
   104                           tblptru	equ	0xFF8
   105                           tblptrh	equ	0xFF7
   106                           tblptrl	equ	0xFF6
   107                           tablat	equ	0xFF5
   108                           postinc0	equ	0xFEE
   109                           wreg	equ	0xFE8
   110                           postdec1	equ	0xFE5
   111                           fsr1l	equ	0xFE1
   112                           
   113                           	psect	dataCOMRAM
   114  000041                     __pdataCOMRAM:
   115                           	opt stack 0
   116  000041                     _Txdata:
   117                           	opt stack 0
   118  000041                     	ds	16
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           postinc0	equ	0xFEE
   124                           wreg	equ	0xFE8
   125                           postdec1	equ	0xFE5
   126                           fsr1l	equ	0xFE1
   127                           
   128                           	psect	cstackCOMRAM
   129  000001                     __pcstackCOMRAM:
   130                           	opt stack 0
   131  000001                     ?___aldiv:
   132                           	opt stack 0
   133  000001                     UART_Write@data:
   134                           	opt stack 0
   135  000001                     ___aldiv@dividend:
   136                           	opt stack 0
   137                           
   138                           ; 4 bytes @ 0x0
   139  000001                     	ds	4
   140  000005                     ___aldiv@divisor:
   141                           	opt stack 0
   142                           
   143                           ; 4 bytes @ 0x4
   144  000005                     	ds	4
   145  000009                     ___aldiv@counter:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x8
   149  000009                     	ds	1
   150  00000A                     ___aldiv@sign:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x9
   154  00000A                     	ds	1
   155  00000B                     ___aldiv@quotient:
   156                           	opt stack 0
   157                           
   158                           ; 4 bytes @ 0xA
   159  00000B                     	ds	4
   160  00000F                     UART_Init@baudrate:
   161                           	opt stack 0
   162                           
   163                           ; 4 bytes @ 0xE
   164  00000F                     	ds	4
   165  000013                     ??_UART_Init:
   166                           
   167                           ; 0 bytes @ 0x12
   168  000013                     	ds	12
   169  00001F                     UART_Init@x:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x1E
   173  00001F                     	ds	2
   174  000021                     
   175                           ; 2 bytes @ 0x20
   176  000021                     	ds	2
   177  000023                     
   178                           ; 3 bytes @ 0x22
   179  000023                     	ds	3
   180  000026                     main@i:
   181                           	opt stack 0
   182                           
   183                           ; 2 bytes @ 0x25
   184  000026                     	ds	2
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           postdec1	equ	0xFE5
   192                           fsr1l	equ	0xFE1
   193                           
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 32 in file "main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;  argc            2   32[COMRAM] int 
   202 ;;  argv            3   34[COMRAM] PTR PTR unsigned char 
   203 ;; Auto vars:     Size  Location     Type
   204 ;;  i               2   37[COMRAM] int 
   205 ;; Return value:  Size  Location     Type
   206 ;;                  2   32[COMRAM] int 
   207 ;; Registers used:
   208 ;;		wreg, status,2, status,0, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : 0/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   214 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   217 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   218 ;;Total ram usage:        7 bytes
   219 ;; Hardware stack levels required when called:    2
   220 ;; This function calls:
   221 ;;		_UART_Init
   222 ;;		_UART_Write
   223 ;; This function is called by:
   224 ;;		Startup code after reset
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228                           	psect	text0
   229  007D4E                     __ptext0:
   230                           	opt stack 0
   231  007D4E                     _main:
   232                           	opt stack 29
   233                           
   234                           ;main.c: 33: UART_Init(9600);
   235                           
   236                           ;incstack = 0
   237  007D4E  0E80               	movlw	128
   238  007D50  6E0F               	movwf	UART_Init@baudrate,c
   239  007D52  0E25               	movlw	37
   240  007D54  6E10               	movwf	UART_Init@baudrate+1,c
   241  007D56  0E00               	movlw	0
   242  007D58  6E11               	movwf	UART_Init@baudrate+2,c
   243  007D5A  0E00               	movlw	0
   244  007D5C  6E12               	movwf	UART_Init@baudrate+3,c
   245  007D5E  EC52  F03F         	call	_UART_Init	;wreg free
   246                           
   247                           ;main.c: 35: UART_Write('A');
   248                           
   249                           ;main.c: 34: while(1) {
   250  007D62  0E41               	movlw	65
   251  007D64  EC99  F03E         	call	_UART_Write
   252                           
   253                           ;main.c: 36: for(int i= 0 ; i<100000; i++) {}
   254  007D68  0E00               	movlw	0
   255  007D6A  6E27               	movwf	main@i+1,c
   256  007D6C  0E00               	movlw	0
   257  007D6E  6E26               	movwf	main@i,c
   258  007D70                     l713:
   259  007D70  4A26               	infsnz	main@i,f,c
   260  007D72  2A27               	incf	main@i+1,f,c
   261  007D74  D7FD               	goto	l713
   262  007D76                     __end_of_main:
   263                           	opt stack 0
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           postdec1	equ	0xFE5
   271                           fsr1l	equ	0xFE1
   272                           
   273 ;; *************** function _UART_Write *****************
   274 ;; Defined at:
   275 ;;		line 70 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;  data            1    wreg     unsigned char 
   278 ;; Auto vars:     Size  Location     Type
   279 ;;  data            1    0[COMRAM] unsigned char 
   280 ;; Return value:  Size  Location     Type
   281 ;;		None               void
   282 ;; Registers used:
   283 ;;		wreg
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   293 ;;Total ram usage:        1 bytes
   294 ;; Hardware stack levels used:    1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           	psect	text1
   303  007D32                     __ptext1:
   304                           	opt stack 0
   305  007D32                     _UART_Write:
   306                           	opt stack 30
   307                           
   308                           ;incstack = 0
   309                           ;UART_Write@data stored from wreg
   310  007D32  6E01               	movwf	UART_Write@data,c
   311  007D34                     l44:
   312  007D34  A2AC               	btfss	4012,1,c	;volatile
   313  007D36  D7FE               	goto	l44
   314                           
   315                           ;main.c: 73: TXREG = data;
   316  007D38  C001  FFAD         	movff	UART_Write@data,4013	;volatile
   317  007D3C  0012               	return	
   318  007D3E                     __end_of_UART_Write:
   319                           	opt stack 0
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329 ;; *************** function _UART_Init *****************
   330 ;; Defined at:
   331 ;;		line 42 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  baudrate        4   14[COMRAM] const long 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  x               2   30[COMRAM] unsigned int 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      unsigned char 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   347 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   348 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   349 ;;Total ram usage:       18 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; Hardware stack levels required when called:    1
   352 ;; This function calls:
   353 ;;		___aldiv
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text2
   360  007EA4                     __ptext2:
   361                           	opt stack 0
   362  007EA4                     _UART_Init:
   363                           	opt stack 29
   364                           
   365                           ;main.c: 44: unsigned int x;
   366                           ;main.c: 45: x = (8000000 - baudrate*64)/(baudrate*64);
   367                           
   368                           ;incstack = 0
   369  007EA4  C00F  F013         	movff	UART_Init@baudrate,??_UART_Init
   370  007EA8  C010  F014         	movff	UART_Init@baudrate+1,??_UART_Init+1
   371  007EAC  C011  F015         	movff	UART_Init@baudrate+2,??_UART_Init+2
   372  007EB0  C012  F016         	movff	UART_Init@baudrate+3,??_UART_Init+3
   373  007EB4  0E06               	movlw	6
   374  007EB6                     u75:
   375  007EB6  90D8               	bcf	status,0,c
   376  007EB8  3613               	rlcf	??_UART_Init,f,c
   377  007EBA  3614               	rlcf	??_UART_Init+1,f,c
   378  007EBC  3615               	rlcf	??_UART_Init+2,f,c
   379  007EBE  3616               	rlcf	??_UART_Init+3,f,c
   380  007EC0  2EE8               	decfsz	wreg,f,c
   381  007EC2  D7F9               	goto	u75
   382  007EC4  1E13               	comf	??_UART_Init,f,c
   383  007EC6  1E14               	comf	??_UART_Init+1,f,c
   384  007EC8  1E15               	comf	??_UART_Init+2,f,c
   385  007ECA  1E16               	comf	??_UART_Init+3,f,c
   386  007ECC  2A13               	incf	??_UART_Init,f,c
   387  007ECE  0E00               	movlw	0
   388  007ED0  2214               	addwfc	??_UART_Init+1,f,c
   389  007ED2  2215               	addwfc	??_UART_Init+2,f,c
   390  007ED4  2216               	addwfc	??_UART_Init+3,f,c
   391  007ED6  0E00               	movlw	0
   392  007ED8  2413               	addwf	??_UART_Init,w,c
   393  007EDA  6E01               	movwf	___aldiv@dividend,c
   394  007EDC  0E12               	movlw	18
   395  007EDE  2014               	addwfc	??_UART_Init+1,w,c
   396  007EE0  6E02               	movwf	___aldiv@dividend+1,c
   397  007EE2  0E7A               	movlw	122
   398  007EE4  2015               	addwfc	??_UART_Init+2,w,c
   399  007EE6  6E03               	movwf	___aldiv@dividend+2,c
   400  007EE8  0E00               	movlw	0
   401  007EEA  2016               	addwfc	??_UART_Init+3,w,c
   402  007EEC  6E04               	movwf	___aldiv@dividend+3,c
   403  007EEE  C00F  F017         	movff	UART_Init@baudrate,??_UART_Init+4
   404  007EF2  C010  F018         	movff	UART_Init@baudrate+1,??_UART_Init+5
   405  007EF6  C011  F019         	movff	UART_Init@baudrate+2,??_UART_Init+6
   406  007EFA  C012  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+7
   407  007EFE  0E06               	movlw	6
   408  007F00                     u85:
   409  007F00  90D8               	bcf	status,0,c
   410  007F02  3617               	rlcf	??_UART_Init+4,f,c
   411  007F04  3618               	rlcf	??_UART_Init+5,f,c
   412  007F06  3619               	rlcf	??_UART_Init+6,f,c
   413  007F08  361A               	rlcf	??_UART_Init+7,f,c
   414  007F0A  2EE8               	decfsz	wreg,f,c
   415  007F0C  D7F9               	goto	u85
   416  007F0E  C017  F005         	movff	??_UART_Init+4,___aldiv@divisor
   417  007F12  C018  F006         	movff	??_UART_Init+5,___aldiv@divisor+1
   418  007F16  C019  F007         	movff	??_UART_Init+6,___aldiv@divisor+2
   419  007F1A  C01A  F008         	movff	??_UART_Init+7,___aldiv@divisor+3
   420  007F1E  ECD4  F03E         	call	___aldiv	;wreg free
   421  007F22  C001  F01B         	movff	?___aldiv,??_UART_Init+8
   422  007F26  C002  F01C         	movff	?___aldiv+1,??_UART_Init+9
   423  007F2A  C003  F01D         	movff	?___aldiv+2,??_UART_Init+10
   424  007F2E  C004  F01E         	movff	?___aldiv+3,??_UART_Init+11
   425  007F32  C01B  F01F         	movff	??_UART_Init+8,UART_Init@x
   426  007F36  C01C  F020         	movff	??_UART_Init+9,UART_Init@x+1
   427                           
   428                           ;main.c: 46: if(x>255)
   429  007F3A  0E00               	movlw	0
   430  007F3C  5C1F               	subwf	UART_Init@x,w,c
   431  007F3E  0E01               	movlw	1
   432  007F40  5820               	subwfb	UART_Init@x+1,w,c
   433  007F42  A0D8               	btfss	status,0,c
   434  007F44  D04C               	goto	l683
   435                           
   436                           ;main.c: 47: {
   437                           ;main.c: 48: x = (8000000 - baudrate*16)/(baudrate*16);
   438  007F46  C00F  F013         	movff	UART_Init@baudrate,??_UART_Init
   439  007F4A  C010  F014         	movff	UART_Init@baudrate+1,??_UART_Init+1
   440  007F4E  C011  F015         	movff	UART_Init@baudrate+2,??_UART_Init+2
   441  007F52  C012  F016         	movff	UART_Init@baudrate+3,??_UART_Init+3
   442  007F56  0E04               	movlw	4
   443  007F58                     u105:
   444  007F58  90D8               	bcf	status,0,c
   445  007F5A  3613               	rlcf	??_UART_Init,f,c
   446  007F5C  3614               	rlcf	??_UART_Init+1,f,c
   447  007F5E  3615               	rlcf	??_UART_Init+2,f,c
   448  007F60  3616               	rlcf	??_UART_Init+3,f,c
   449  007F62  2EE8               	decfsz	wreg,f,c
   450  007F64  D7F9               	goto	u105
   451  007F66  1E13               	comf	??_UART_Init,f,c
   452  007F68  1E14               	comf	??_UART_Init+1,f,c
   453  007F6A  1E15               	comf	??_UART_Init+2,f,c
   454  007F6C  1E16               	comf	??_UART_Init+3,f,c
   455  007F6E  2A13               	incf	??_UART_Init,f,c
   456  007F70  0E00               	movlw	0
   457  007F72  2214               	addwfc	??_UART_Init+1,f,c
   458  007F74  2215               	addwfc	??_UART_Init+2,f,c
   459  007F76  2216               	addwfc	??_UART_Init+3,f,c
   460  007F78  0E00               	movlw	0
   461  007F7A  2413               	addwf	??_UART_Init,w,c
   462  007F7C  6E01               	movwf	___aldiv@dividend,c
   463  007F7E  0E12               	movlw	18
   464  007F80  2014               	addwfc	??_UART_Init+1,w,c
   465  007F82  6E02               	movwf	___aldiv@dividend+1,c
   466  007F84  0E7A               	movlw	122
   467  007F86  2015               	addwfc	??_UART_Init+2,w,c
   468  007F88  6E03               	movwf	___aldiv@dividend+2,c
   469  007F8A  0E00               	movlw	0
   470  007F8C  2016               	addwfc	??_UART_Init+3,w,c
   471  007F8E  6E04               	movwf	___aldiv@dividend+3,c
   472  007F90  C00F  F017         	movff	UART_Init@baudrate,??_UART_Init+4
   473  007F94  C010  F018         	movff	UART_Init@baudrate+1,??_UART_Init+5
   474  007F98  C011  F019         	movff	UART_Init@baudrate+2,??_UART_Init+6
   475  007F9C  C012  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+7
   476  007FA0  0E04               	movlw	4
   477  007FA2                     u115:
   478  007FA2  90D8               	bcf	status,0,c
   479  007FA4  3617               	rlcf	??_UART_Init+4,f,c
   480  007FA6  3618               	rlcf	??_UART_Init+5,f,c
   481  007FA8  3619               	rlcf	??_UART_Init+6,f,c
   482  007FAA  361A               	rlcf	??_UART_Init+7,f,c
   483  007FAC  2EE8               	decfsz	wreg,f,c
   484  007FAE  D7F9               	goto	u115
   485  007FB0  C017  F005         	movff	??_UART_Init+4,___aldiv@divisor
   486  007FB4  C018  F006         	movff	??_UART_Init+5,___aldiv@divisor+1
   487  007FB8  C019  F007         	movff	??_UART_Init+6,___aldiv@divisor+2
   488  007FBC  C01A  F008         	movff	??_UART_Init+7,___aldiv@divisor+3
   489  007FC0  ECD4  F03E         	call	___aldiv	;wreg free
   490  007FC4  C001  F01B         	movff	?___aldiv,??_UART_Init+8
   491  007FC8  C002  F01C         	movff	?___aldiv+1,??_UART_Init+9
   492  007FCC  C003  F01D         	movff	?___aldiv+2,??_UART_Init+10
   493  007FD0  C004  F01E         	movff	?___aldiv+3,??_UART_Init+11
   494  007FD4  C01B  F01F         	movff	??_UART_Init+8,UART_Init@x
   495  007FD8  C01C  F020         	movff	??_UART_Init+9,UART_Init@x+1
   496                           
   497                           ;main.c: 50: TXSTA1bits.BRGH = 1;
   498  007FDC  84AC               	bsf	4012,2,c	;volatile
   499  007FDE                     l683:
   500                           
   501                           ;main.c: 51: }
   502                           ;main.c: 52: if(x<256)
   503  007FDE  0E00               	movlw	0
   504  007FE0  5C1F               	subwf	UART_Init@x,w,c
   505  007FE2  0E01               	movlw	1
   506  007FE4  5820               	subwfb	UART_Init@x+1,w,c
   507  007FE6  B0D8               	btfsc	status,0,c
   508  007FE8  0012               	return	
   509                           
   510                           ;main.c: 53: {
   511                           ;main.c: 56: SPBRG1 = 12;
   512  007FEA  0E0C               	movlw	12
   513  007FEC  6EAF               	movwf	4015,c	;volatile
   514                           
   515                           ;main.c: 57: SPBRGH1 =0;
   516  007FEE  0E00               	movlw	0
   517  007FF0  6E7D               	movwf	3965,c	;volatile
   518                           
   519                           ;main.c: 58: TXSTA1bits.SYNC = 0;
   520  007FF2  98AC               	bcf	4012,4,c	;volatile
   521                           
   522                           ;main.c: 59: RCSTA1bits.SPEN = 1;
   523  007FF4  8EAB               	bsf	4011,7,c	;volatile
   524                           
   525                           ;main.c: 60: TRISC7 = 1;
   526  007FF6  8E94               	bsf	3988,7,c	;volatile
   527                           
   528                           ;main.c: 61: TRISC6 = 1;
   529  007FF8  8C94               	bsf	3988,6,c	;volatile
   530                           
   531                           ;main.c: 62: CREN1 = 1;
   532  007FFA  88AB               	bsf	4011,4,c	;volatile
   533                           
   534                           ;main.c: 63: TXEN1 = 1;
   535  007FFC  8AAC               	bsf	4012,5,c	;volatile
   536  007FFE  0012               	return	
   537  008000                     __end_of_UART_Init:
   538                           	opt stack 0
   539                           tblptru	equ	0xFF8
   540                           tblptrh	equ	0xFF7
   541                           tblptrl	equ	0xFF6
   542                           tablat	equ	0xFF5
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           status	equ	0xFD8
   548                           
   549 ;; *************** function ___aldiv *****************
   550 ;; Defined at:
   551 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/aldiv.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  dividend        4    0[COMRAM] long 
   554 ;;  divisor         4    4[COMRAM] long 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  quotient        4   10[COMRAM] long 
   557 ;;  sign            1    9[COMRAM] unsigned char 
   558 ;;  counter         1    8[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  4    0[COMRAM] long 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   568 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   569 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   571 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   572 ;;Total ram usage:       14 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_UART_Init
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text3
   582  007DA8                     __ptext3:
   583                           	opt stack 0
   584  007DA8                     ___aldiv:
   585                           	opt stack 29
   586                           
   587                           ;incstack = 0
   588  007DA8  0E00               	movlw	0
   589  007DAA  6E0A               	movwf	___aldiv@sign,c
   590  007DAC  5008               	movf	___aldiv@divisor+3,w,c
   591  007DAE  0A80               	xorlw	128
   592  007DB0  0F80               	addlw	128
   593  007DB2  E108               	bnz	u15
   594  007DB4  0E00               	movlw	0
   595  007DB6  5C07               	subwf	___aldiv@divisor+2,w,c
   596  007DB8  E105               	bnz	u15
   597  007DBA  0E00               	movlw	0
   598  007DBC  5C06               	subwf	___aldiv@divisor+1,w,c
   599  007DBE  E102               	bnz	u15
   600  007DC0  0E00               	movlw	0
   601  007DC2  5C05               	subwf	___aldiv@divisor,w,c
   602  007DC4                     u15:
   603  007DC4  B0D8               	btfsc	status,0,c
   604  007DC6  D00A               	goto	l639
   605  007DC8  1E08               	comf	___aldiv@divisor+3,f,c
   606  007DCA  1E07               	comf	___aldiv@divisor+2,f,c
   607  007DCC  1E06               	comf	___aldiv@divisor+1,f,c
   608  007DCE  6C05               	negf	___aldiv@divisor,c
   609  007DD0  0E00               	movlw	0
   610  007DD2  2206               	addwfc	___aldiv@divisor+1,f,c
   611  007DD4  2207               	addwfc	___aldiv@divisor+2,f,c
   612  007DD6  2208               	addwfc	___aldiv@divisor+3,f,c
   613  007DD8  0E01               	movlw	1
   614  007DDA  6E0A               	movwf	___aldiv@sign,c
   615  007DDC                     l639:
   616  007DDC  5004               	movf	___aldiv@dividend+3,w,c
   617  007DDE  0A80               	xorlw	128
   618  007DE0  0F80               	addlw	128
   619  007DE2  E108               	bnz	u25
   620  007DE4  0E00               	movlw	0
   621  007DE6  5C03               	subwf	___aldiv@dividend+2,w,c
   622  007DE8  E105               	bnz	u25
   623  007DEA  0E00               	movlw	0
   624  007DEC  5C02               	subwf	___aldiv@dividend+1,w,c
   625  007DEE  E102               	bnz	u25
   626  007DF0  0E00               	movlw	0
   627  007DF2  5C01               	subwf	___aldiv@dividend,w,c
   628  007DF4                     u25:
   629  007DF4  B0D8               	btfsc	status,0,c
   630  007DF6  D00A               	goto	l645
   631  007DF8  1E04               	comf	___aldiv@dividend+3,f,c
   632  007DFA  1E03               	comf	___aldiv@dividend+2,f,c
   633  007DFC  1E02               	comf	___aldiv@dividend+1,f,c
   634  007DFE  6C01               	negf	___aldiv@dividend,c
   635  007E00  0E00               	movlw	0
   636  007E02  2202               	addwfc	___aldiv@dividend+1,f,c
   637  007E04  2203               	addwfc	___aldiv@dividend+2,f,c
   638  007E06  2204               	addwfc	___aldiv@dividend+3,f,c
   639  007E08  0E01               	movlw	1
   640  007E0A  1A0A               	xorwf	___aldiv@sign,f,c
   641  007E0C                     l645:
   642  007E0C  0E00               	movlw	0
   643  007E0E  6E0B               	movwf	___aldiv@quotient,c
   644  007E10  0E00               	movlw	0
   645  007E12  6E0C               	movwf	___aldiv@quotient+1,c
   646  007E14  0E00               	movlw	0
   647  007E16  6E0D               	movwf	___aldiv@quotient+2,c
   648  007E18  0E00               	movlw	0
   649  007E1A  6E0E               	movwf	___aldiv@quotient+3,c
   650  007E1C  5008               	movf	___aldiv@divisor+3,w,c
   651  007E1E  1005               	iorwf	___aldiv@divisor,w,c
   652  007E20  1006               	iorwf	___aldiv@divisor+1,w,c
   653  007E22  1007               	iorwf	___aldiv@divisor+2,w,c
   654  007E24  B4D8               	btfsc	status,2,c
   655  007E26  D02A               	goto	l667
   656  007E28  0E01               	movlw	1
   657  007E2A  6E09               	movwf	___aldiv@counter,c
   658  007E2C  D006               	goto	l653
   659  007E2E                     l651:
   660  007E2E  90D8               	bcf	status,0,c
   661  007E30  3605               	rlcf	___aldiv@divisor,f,c
   662  007E32  3606               	rlcf	___aldiv@divisor+1,f,c
   663  007E34  3607               	rlcf	___aldiv@divisor+2,f,c
   664  007E36  3608               	rlcf	___aldiv@divisor+3,f,c
   665  007E38  2A09               	incf	___aldiv@counter,f,c
   666  007E3A                     l653:
   667  007E3A  AE08               	btfss	___aldiv@divisor+3,7,c
   668  007E3C  D7F8               	goto	l651
   669  007E3E                     l655:
   670  007E3E  90D8               	bcf	status,0,c
   671  007E40  360B               	rlcf	___aldiv@quotient,f,c
   672  007E42  360C               	rlcf	___aldiv@quotient+1,f,c
   673  007E44  360D               	rlcf	___aldiv@quotient+2,f,c
   674  007E46  360E               	rlcf	___aldiv@quotient+3,f,c
   675  007E48  5005               	movf	___aldiv@divisor,w,c
   676  007E4A  5C01               	subwf	___aldiv@dividend,w,c
   677  007E4C  5006               	movf	___aldiv@divisor+1,w,c
   678  007E4E  5802               	subwfb	___aldiv@dividend+1,w,c
   679  007E50  5007               	movf	___aldiv@divisor+2,w,c
   680  007E52  5803               	subwfb	___aldiv@dividend+2,w,c
   681  007E54  5008               	movf	___aldiv@divisor+3,w,c
   682  007E56  5804               	subwfb	___aldiv@dividend+3,w,c
   683  007E58  A0D8               	btfss	status,0,c
   684  007E5A  D009               	goto	l663
   685  007E5C  5005               	movf	___aldiv@divisor,w,c
   686  007E5E  5E01               	subwf	___aldiv@dividend,f,c
   687  007E60  5006               	movf	___aldiv@divisor+1,w,c
   688  007E62  5A02               	subwfb	___aldiv@dividend+1,f,c
   689  007E64  5007               	movf	___aldiv@divisor+2,w,c
   690  007E66  5A03               	subwfb	___aldiv@dividend+2,f,c
   691  007E68  5008               	movf	___aldiv@divisor+3,w,c
   692  007E6A  5A04               	subwfb	___aldiv@dividend+3,f,c
   693  007E6C  800B               	bsf	___aldiv@quotient,0,c
   694  007E6E                     l663:
   695  007E6E  90D8               	bcf	status,0,c
   696  007E70  3208               	rrcf	___aldiv@divisor+3,f,c
   697  007E72  3207               	rrcf	___aldiv@divisor+2,f,c
   698  007E74  3206               	rrcf	___aldiv@divisor+1,f,c
   699  007E76  3205               	rrcf	___aldiv@divisor,f,c
   700  007E78  2E09               	decfsz	___aldiv@counter,f,c
   701  007E7A  D7E1               	goto	l655
   702  007E7C                     l667:
   703  007E7C  500A               	movf	___aldiv@sign,w,c
   704  007E7E  B4D8               	btfsc	status,2,c
   705  007E80  D008               	goto	l671
   706  007E82  1E0E               	comf	___aldiv@quotient+3,f,c
   707  007E84  1E0D               	comf	___aldiv@quotient+2,f,c
   708  007E86  1E0C               	comf	___aldiv@quotient+1,f,c
   709  007E88  6C0B               	negf	___aldiv@quotient,c
   710  007E8A  0E00               	movlw	0
   711  007E8C  220C               	addwfc	___aldiv@quotient+1,f,c
   712  007E8E  220D               	addwfc	___aldiv@quotient+2,f,c
   713  007E90  220E               	addwfc	___aldiv@quotient+3,f,c
   714  007E92                     l671:
   715  007E92  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   716  007E96  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   717  007E9A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   718  007E9E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   719  007EA2  0012               	return	
   720  007EA4                     __end_of___aldiv:
   721                           	opt stack 0
   722  0000                     tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1l	equ	0xFE1
   730                           status	equ	0xFD8
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postdec1	equ	0xFE5
   738                           fsr1l	equ	0xFE1
   739                           status	equ	0xFD8
   740                           
   741                           	psect	rparam
   742  0000                     tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           tblptrl	equ	0xFF6
   745                           tablat	equ	0xFF5
   746                           postinc0	equ	0xFEE
   747                           wreg	equ	0xFE8
   748                           postdec1	equ	0xFE5
   749                           fsr1l	equ	0xFE1
   750                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5     515
                                             32 COMRAM     7     2      5
                          _UART_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     500
                                             14 COMRAM    18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     367
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      50       1       84.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50       6        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Oct 18 15:35:26 2014

                     l44 7D34                       u15 7DC4                       u25 7DF4  
                     u75 7EB6                       u85 7F00                      l713 7D70  
                    l651 7E2E                      l653 7E3A                      l645 7E0C  
                    l671 7E92                      l663 7E6E                      l655 7E3E  
                    l639 7DDC                      l667 7E7C                      l683 7FDE  
                    u105 7F58                      u115 7FA2                      wreg 000FE8  
             _TXSTA1bits 000FAC             __CFG_IESO$ON 000000            __CFG_FCMEN$ON 000000  
                   _main 7D4E                     fsr1l 000FE1                     start 0000  
        __end_of___aldiv 7EA4                    ?_main 0021                    _CREN1 007D5C  
                  _TRMT1 007D61                    _TXEN1 007D65                    _TXREG 000FAD  
            ?_UART_Write 0001       __size_of_UART_Init 015C           __CFG_EBTRB$OFF 000000  
                  main@i 0026                    tablat 000FF5                    status 000FD8  
        __initialization 7D76             __end_of_main 7D76                   ??_main 0026  
          __activetblptr 000000           __CFG_WDTEN$OFF 000000                   _SPBRG1 000FAF  
                 _TRISC6 007CA6                   _TRISC7 007CA7           __CFG_XINST$OFF 000000  
      __end_of_UART_Init 8000                   _Rxdata 0028                   _Txdata 0041  
    __size_of_UART_Write 000C                ??___aldiv 0009                   clear_0 7D7C  
           __pdataCOMRAM 0041                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7DA2  
         __pcstackCOMRAM 0001         __CFG_CANMX$PORTB 000000             ??_UART_Write 0001  
                _SPBRGH1 000F7D                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 7DA8       __end_of_UART_Write 7D3E                  __pcinit 7D76  
                __ramtop 0F00                  __ptext0 7D4E                  __ptext1 7D32  
                __ptext2 7EA4                  __ptext3 7DA8         ___aldiv@dividend 0001  
   end_of_initialization 7DA2         ___aldiv@quotient 000B                  postdec1 000FE5  
                postinc0 000FEE                _UART_Init 7EA4           UART_Write@data 0001  
             ?_UART_Init 000F            __pidataCOMRAM 7D3E      start_initialization 7D76  
            __pbssCOMRAM 0028                 ?___aldiv 0001              ??_UART_Init 0013  
             UART_Init@x 001F          ___aldiv@divisor 0005          ___aldiv@counter 0009  
      UART_Init@baudrate 000F         __CFG_SOSCSEL$DIG 000000                copy_data0 7D96  
               __Hrparam 0000                 __Lrparam 0000         __size_of___aldiv 00FC  
          __size_of_main 0028                 main@argc 0021                 main@argv 0023  
             _RCSTA1bits 000FAB             ___aldiv@sign 000A               _UART_Write 7D32  
