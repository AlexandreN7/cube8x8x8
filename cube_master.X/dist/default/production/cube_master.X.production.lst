

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Nov  3 23:27:54 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataBANK1
    23  000220                     __pidataBANK1:
    24                           	opt stack 0
    25                           
    26                           ;initializer for main@F19158
    27  000220  4D                 	db	77
    28  000221  41                 	db	65
    29  000222  53                 	db	83
    30  000223  54                 	db	84
    31  000224  45                 	db	69
    32  000225  52                 	db	82
    33  000226  20                 	db	32
    34  000227  49                 	db	73
    35  000228  53                 	db	83
    36  000229  20                 	db	32
    37  00022A  52                 	db	82
    38  00022B  45                 	db	69
    39  00022C  41                 	db	65
    40  00022D  44                 	db	68
    41  00022E  59                 	db	89
    42  00022F  20                 	db	32
    43  000230  0A                 	db	10
    44  000231  20                 	db	32
    45  000232  0D                 	db	13
    46  000233  00                 	db	0
    47  000234  00                 	db	0
    48  000235  00                 	db	0
    49  000236  00                 	db	0
    50  000237  00                 	db	0
    51  000238  00                 	db	0
    52  000239  00                 	db	0
    53  00023A  00                 	db	0
    54  00023B  00                 	db	0
    55  00023C  00                 	db	0
    56  00023D  00                 	db	0
    57  00023E  00                 	db	0
    58  00023F  00                 	db	0
    59  000240  00                 	db	0
    60  000241  00                 	db	0
    61  000242  00                 	db	0
    62  000243  00                 	db	0
    63  000244  00                 	db	0
    64  000245  00                 	db	0
    65  000246  00                 	db	0
    66  000247  00                 	db	0
    67  000248  00                 	db	0
    68  000249  00                 	db	0
    69  00024A  00                 	db	0
    70  00024B  00                 	db	0
    71  00024C  00                 	db	0
    72  00024D  00                 	db	0
    73  00024E  00                 	db	0
    74  00024F  00                 	db	0
    75  000250  00                 	db	0
    76  000251  00                 	db	0
    77  000252  00                 	db	0
    78  000253  00                 	db	0
    79  000254  00                 	db	0
    80  000255  00                 	db	0
    81  000256  00                 	db	0
    82  000257  00                 	db	0
    83  000258  00                 	db	0
    84  000259  00                 	db	0
    85  00025A  00                 	db	0
    86  00025B  00                 	db	0
    87  00025C  00                 	db	0
    88  00025D  00                 	db	0
    89  00025E  00                 	db	0
    90  00025F  00                 	db	0
    91  000260  00                 	db	0
    92  000261  00                 	db	0
    93  000262  00                 	db	0
    94  000263  00                 	db	0
    95  000264  00                 	db	0
    96  000265  00                 	db	0
    97  000266  00                 	db	0
    98  000267  00                 	db	0
    99  000268  00                 	db	0
   100  000269  00                 	db	0
   101  00026A  00                 	db	0
   102  00026B  00                 	db	0
   103  00026C  00                 	db	0
   104  00026D  00                 	db	0
   105  00026E  00                 	db	0
   106  00026F  00                 	db	0
   107  0000                     _BAUDCON2bits	set	4025
   108  0000                     _INTCON	set	4082
   109  0000                     _OSCCON	set	4051
   110  0000                     _PIE3bits	set	4003
   111  0000                     _PIR3bits	set	4004
   112  0000                     _PORTA	set	3968
   113  0000                     _PORTB	set	3969
   114  0000                     _PORTC	set	3970
   115  0000                     _RCONbits	set	4048
   116  0000                     _RCREG2	set	3962
   117  0000                     _RCSTA2bits	set	4006
   118  0000                     _SPBRG	set	4015
   119  0000                     _SPBRG2	set	3963
   120  0000                     _SPBRGH2	set	3964
   121  0000                     _TRISA	set	3986
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISC	set	3988
   124  0000                     _TXREG2	set	3961
   125  0000                     _TXSTA2bits	set	4026
   126  0000                     _ADON	set	32272
   127  0000                     _GIE	set	32663
   128  0000                     _PEIE	set	32662
   129  0000                     _PSA	set	32427
   130  0000                     _RA0	set	31744
   131  0000                     _RA2	set	31746
   132  0000                     _RA3	set	31747
   133  0000                     _RC2IF	set	32037
   134  0000                     _T08BIT	set	32430
   135  0000                     _T0CS	set	32429
   136  0000                     _T0PS0	set	32424
   137  0000                     _T0PS1	set	32425
   138  0000                     _T0PS2	set	32426
   139  0000                     _TMR0IE	set	32661
   140  0000                     _TMR0IF	set	32658
   141                           
   142                           ; #config settings
   143  0000                     
   144                           	psect	cinit
   145  000270                     __pcinit:
   146                           	opt stack 0
   147  000270                     start_initialization:
   148                           	opt stack 0
   149  000270                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Clear objects allocated to BANK2 (128 bytes)
   153  000270  EE02  F000         	lfsr	0,__pbssBANK2
   154  000274  0E80               	movlw	128
   155  000276                     clear_0:
   156  000276  6AEE               	clrf	postinc0,c
   157  000278  06E8               	decf	wreg,f,c
   158  00027A  E1FD               	bnz	clear_0
   159                           
   160                           ; Clear objects allocated to BANK1 (80 bytes)
   161  00027C  EE01  F000         	lfsr	0,__pbssBANK1
   162  000280  0E50               	movlw	80
   163  000282                     clear_1:
   164  000282  6AEE               	clrf	postinc0,c
   165  000284  06E8               	decf	wreg,f,c
   166  000286  E1FD               	bnz	clear_1
   167                           
   168                           ; Clear objects allocated to COMRAM (3 bytes)
   169  000288  6A2A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   170  00028A  6A29               	clrf	(__pbssCOMRAM+1)& (0+255),c
   171  00028C  6A28               	clrf	__pbssCOMRAM& (0+255),c
   172                           
   173                           ; Initialize objects allocated to BANK1 (80 bytes)
   174                           ; load TBLPTR registers with __pidataBANK1
   175  00028E  0E20               	movlw	low __pidataBANK1
   176  000290  6EF6               	movwf	tblptrl,c
   177  000292  0E02               	movlw	high __pidataBANK1
   178  000294  6EF7               	movwf	tblptrh,c
   179  000296  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   180  000298  6EF8               	movwf	tblptru,c
   181  00029A  EE01  F050         	lfsr	0,__pdataBANK1
   182  00029E  EE10 F050          	lfsr	1,80
   183  0002A2                     copy_data0:
   184  0002A2  0009               	tblrd		*+
   185  0002A4  CFF5 FFEE          	movff	tablat,postinc0
   186  0002A8  50E5               	movf	postdec1,w,c
   187  0002AA  50E1               	movf	fsr1l,w,c
   188  0002AC  E1FA               	bnz	copy_data0
   189  0002AE                     end_of_initialization:
   190                           	opt stack 0
   191  0002AE                     __end_of__initialization:
   192                           	opt stack 0
   193  0002AE  0100               	movlb	0
   194  0002B0  EFB7  F000         	goto	_main	;jump to C main() function
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           wreg	equ	0xFE8
   201                           postdec1	equ	0xFE5
   202                           fsr1l	equ	0xFE1
   203                           
   204                           	psect	bssCOMRAM
   205  000028                     __pbssCOMRAM:
   206                           	opt stack 0
   207  000028                     _compteur:
   208                           	opt stack 0
   209  000028                     	ds	2
   210  00002A                     _tampon:
   211                           	opt stack 0
   212  00002A                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	bssBANK1
   223  000100                     __pbssBANK1:
   224                           	opt stack 0
   225  000100                     _msg:
   226                           	opt stack 0
   227  000100                     	ds	80
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           postdec1	equ	0xFE5
   235                           fsr1l	equ	0xFE1
   236                           
   237                           	psect	dataBANK1
   238  000150                     __pdataBANK1:
   239                           	opt stack 0
   240  000150                     main@F19158:
   241                           	opt stack 0
   242  000150                     	ds	80
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           postdec1	equ	0xFE5
   250                           fsr1l	equ	0xFE1
   251                           
   252                           	psect	bssBANK2
   253  000200                     __pbssBANK2:
   254                           	opt stack 0
   255  000200                     _stock_led:
   256                           	opt stack 0
   257  000200                     	ds	128
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	cstackBANK0
   268  000060                     __pcstackBANK0:
   269                           	opt stack 0
   270  000060                     main@msg1:
   271                           	opt stack 0
   272                           
   273                           ; 80 bytes @ 0x0
   274  000060                     	ds	80
   275  0000B0                     main@address:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x50
   279  0000B0                     	ds	1
   280  0000B1                     main@i:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x51
   284  0000B1                     	ds	2
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	cstackCOMRAM
   295  000001                     __pcstackCOMRAM:
   296                           	opt stack 0
   297  000001                     ??_low_isr:
   298  000001                     
   299                           ; 1 bytes @ 0x0
   300  000001                     	ds	17
   301  000012                     ??_timer_isr:
   302                           
   303                           ; 0 bytes @ 0x11
   304  000012                     	ds	17
   305  000023                     ??_readAddress:
   306  000023                     writeStringToUART@msg:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x22
   310  000023                     	ds	2
   311  000025                     
   312                           ; 0 bytes @ 0x24
   313  000025                     	ds	3
   314  000028                     tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           ; 0 bytes @ 0x27
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 114 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  i               2   81[BANK0 ] int 
   334 ;;  msg1           80    0[BANK0 ] unsigned char [80]
   335 ;;  address         1   80[BANK0 ] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;		None               void
   338 ;; Registers used:
   339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   346 ;;      Locals:         0      83       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   348 ;;      Totals:         0      83       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   349 ;;Total ram usage:       83 bytes
   350 ;; Hardware stack levels required when called:    2
   351 ;; This function calls:
   352 ;;		_initComms
   353 ;;		_initPorts
   354 ;;		_readAddress
   355 ;;		_writeStringToUART
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362  00016E                     __ptext0:
   363                           	opt stack 0
   364  00016E                     _main:
   365                           	opt stack 29
   366                           
   367                           ;main.c: 115: unsigned char address = 0;
   368                           
   369                           ;incstack = 0
   370  00016E  0E00               	movlw	0
   371  000170  0100               	movlb	0	; () banked
   372  000172  6FB0               	movwf	main@address& (0+255),b
   373                           
   374                           ; BSR set to: 0
   375                           ;main.c: 116: char msg1[80] = "MASTER IS READY \n \r";
   376  000174  EE21  F050         	lfsr	2,main@F19158
   377  000178  EE10  F060         	lfsr	1,main@msg1
   378  00017C  0E50               	movlw	80
   379  00017E                     u221:
   380  00017E  CFDE FFE6          	movff	postinc2,postinc1
   381  000182  2EE8               	decfsz	wreg,f,c
   382  000184  D7FC               	goto	u221
   383                           
   384                           ; BSR set to: 0
   385                           ;main.c: 120: initPorts();
   386  000186  EC7A  F001         	call	_initPorts	;wreg free
   387                           
   388                           ;main.c: 121: initComms();
   389  00018A  EC5A  F001         	call	_initComms	;wreg free
   390                           
   391                           ;main.c: 128: address = readAddress();
   392  00018E  ECE7  F000         	call	_readAddress	;wreg free
   393  000192  0100               	movlb	0	; () banked
   394  000194  6FB0               	movwf	main@address& (0+255),b
   395  000196                     l850:
   396                           
   397                           ;main.c: 132: for (int i = 0; i < 10000; i++) {
   398  000196  0E00               	movlw	0
   399  000198  0100               	movlb	0	; () banked
   400  00019A  6FB2               	movwf	(main@i+1)& (0+255),b
   401  00019C  0E00               	movlw	0
   402  00019E  0100               	movlb	0	; () banked
   403  0001A0  6FB1               	movwf	main@i& (0+255),b
   404  0001A2                     
   405                           ; BSR set to: 0
   406  0001A2  0100               	movlb	0	; () banked
   407  0001A4  51B2               	movf	(main@i+1)& (0+255),w,b
   408  0001A6  0A80               	xorlw	128
   409  0001A8  0F59               	addlw	-167
   410  0001AA  0E10               	movlw	16
   411  0001AC  B4D8               	btfsc	status,2,c
   412  0001AE  5DB1               	subwf	main@i& (0+255),w,b
   413  0001B0  B0D8               	btfsc	status,0,c
   414  0001B2  D004               	goto	l860
   415                           
   416                           ; BSR set to: 0
   417                           
   418                           ; BSR set to: 0
   419                           
   420                           ; BSR set to: 0
   421  0001B4  0100               	movlb	0	; () banked
   422  0001B6  4BB1               	infsnz	main@i& (0+255),f,b
   423  0001B8  2BB2               	incf	(main@i+1)& (0+255),f,b
   424  0001BA  D7F3               	goto	L1
   425  0001BC                     l860:
   426                           
   427                           ; BSR set to: 0
   428                           ;main.c: 133: }
   429                           ;main.c: 135: writeStringToUART(msg1);
   430  0001BC  0100               	movlb	0	; () banked
   431  0001BE  0E00               	movlw	high main@msg1
   432  0001C0  6E24               	movwf	writeStringToUART@msg+1,c
   433  0001C2  0100               	movlb	0	; () banked
   434  0001C4  0E60               	movlw	low main@msg1
   435  0001C6  6E23               	movwf	writeStringToUART@msg,c
   436  0001C8  EC8E  F001         	call	_writeStringToUART	;wreg free
   437  0001CC  D7E4               	goto	l850
   438  0001CE                     __end_of_main:
   439                           	opt stack 0
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postinc1	equ	0xFE6
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           postinc2	equ	0xFDE
   450                           status	equ	0xFD8
   451                           
   452 ;; *************** function _writeStringToUART *****************
   453 ;; Defined at:
   454 ;;		line 58 in file "usart.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  msg             2   34[COMRAM] PTR const unsigned char 
   457 ;;		 -> main@msg1(80), 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;		None               void
   462 ;; Registers used:
   463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   473 ;;Total ram usage:        2 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text1
   484  00031C                     __ptext1:
   485                           	opt stack 0
   486  00031C                     _writeStringToUART:
   487                           	opt stack 29
   488                           
   489                           ;usart.c: 60: while(*msg) {
   490                           
   491                           ;incstack = 0
   492  00031C  D00A               	goto	l824
   493  00031E                     l103:
   494  00031E  A8A4               	btfss	4004,4,c	;volatile
   495  000320  D7FE               	goto	l103
   496                           
   497                           ;usart.c: 62: TXREG2 = *msg++;
   498  000322  C023  FFD9         	movff	writeStringToUART@msg,fsr2l
   499  000326  C024  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   500  00032A  50DF               	movf	indf2,w,c
   501  00032C  6E79               	movwf	3961,c	;volatile
   502  00032E  4A23               	infsnz	writeStringToUART@msg,f,c
   503  000330  2A24               	incf	writeStringToUART@msg+1,f,c
   504  000332                     l824:
   505  000332  C023  FFD9         	movff	writeStringToUART@msg,fsr2l
   506  000336  C024  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   507  00033A  50DF               	movf	indf2,w,c
   508  00033C  B4D8               	btfsc	status,2,c
   509  00033E  0012               	return	
   510  000340  D7EE               	goto	l103
   511  000342                     __end_of_writeStringToUART:
   512                           	opt stack 0
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           postinc1	equ	0xFE6
   520                           postdec1	equ	0xFE5
   521                           fsr1l	equ	0xFE1
   522                           indf2	equ	0xFDF
   523                           postinc2	equ	0xFDE
   524                           fsr2h	equ	0xFDA
   525                           fsr2l	equ	0xFD9
   526                           status	equ	0xFD8
   527                           
   528 ;; *************** function _readAddress *****************
   529 ;; Defined at:
   530 ;;		line 140 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   546 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   547 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   548 ;;Total ram usage:        5 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text2
   559  0001CE                     __ptext2:
   560                           	opt stack 0
   561  0001CE                     _readAddress:
   562                           	opt stack 29
   563                           
   564                           ;main.c: 141: return !RA3 << 3 | !RA2 << 2 | !RA2 << 1 | !RA0;
   565                           
   566                           ;incstack = 0
   567  0001CE  B080               	btfsc	3968,0,c	;volatile
   568  0001D0  D002               	goto	u140
   569  0001D2  0E01               	movlw	1
   570  0001D4  D001               	goto	u146
   571  0001D6                     u140:
   572  0001D6  0E00               	movlw	0
   573  0001D8                     u146:
   574  0001D8  6E23               	movwf	??_readAddress& (0+255),c
   575  0001DA  B480               	btfsc	3968,2,c	;volatile
   576  0001DC  D002               	goto	u150
   577  0001DE  0E01               	movlw	1
   578  0001E0  D001               	goto	u156
   579  0001E2                     u150:
   580  0001E2  0E00               	movlw	0
   581  0001E4                     u156:
   582  0001E4  6E24               	movwf	(??_readAddress+1)& (0+255),c
   583  0001E6  90D8               	bcf	status,0,c
   584  0001E8  3424               	rlcf	??_readAddress+1,w,c
   585  0001EA  6E25               	movwf	(??_readAddress+2)& (0+255),c
   586  0001EC  B480               	btfsc	3968,2,c	;volatile
   587  0001EE  D002               	goto	u160
   588  0001F0  0E01               	movlw	1
   589  0001F2  D001               	goto	u166
   590  0001F4                     u160:
   591  0001F4  0E00               	movlw	0
   592  0001F6                     u166:
   593  0001F6  6E26               	movwf	(??_readAddress+3)& (0+255),c
   594  0001F8  90D8               	bcf	status,0,c
   595  0001FA  3626               	rlcf	??_readAddress+3,f,c
   596  0001FC  90D8               	bcf	status,0,c
   597  0001FE  3626               	rlcf	??_readAddress+3,f,c
   598  000200  B680               	btfsc	3968,3,c	;volatile
   599  000202  D002               	goto	u170
   600  000204  0E01               	movlw	1
   601  000206  D001               	goto	u176
   602  000208                     u170:
   603  000208  0E00               	movlw	0
   604  00020A                     u176:
   605  00020A  6E27               	movwf	(??_readAddress+4)& (0+255),c
   606  00020C  90D8               	bcf	status,0,c
   607  00020E  3627               	rlcf	??_readAddress+4,f,c
   608  000210  90D8               	bcf	status,0,c
   609  000212  3627               	rlcf	??_readAddress+4,f,c
   610  000214  90D8               	bcf	status,0,c
   611  000216  3427               	rlcf	??_readAddress+4,w,c
   612  000218  1026               	iorwf	??_readAddress+3,w,c
   613  00021A  1025               	iorwf	??_readAddress+2,w,c
   614  00021C  1023               	iorwf	??_readAddress,w,c
   615  00021E  0012               	return	
   616  000220                     __end_of_readAddress:
   617                           	opt stack 0
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           postinc1	equ	0xFE6
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           indf2	equ	0xFDF
   628                           postinc2	equ	0xFDE
   629                           fsr2h	equ	0xFDA
   630                           fsr2l	equ	0xFD9
   631                           status	equ	0xFD8
   632                           
   633 ;; *************** function _initPorts *****************
   634 ;; Defined at:
   635 ;;		line 7 in file "port.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;		None               void
   642 ;; Registers used:
   643 ;;		wreg, status,2
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text3
   664  0002F4                     __ptext3:
   665                           	opt stack 0
   666  0002F4                     _initPorts:
   667                           	opt stack 29
   668                           
   669                           ;port.c: 11: OSCCON = 0x30;
   670                           
   671                           ;incstack = 0
   672  0002F4  0E30               	movlw	48
   673  0002F6  6ED3               	movwf	4051,c	;volatile
   674                           
   675                           ;port.c: 17: ADON = 1;
   676  0002F8  80C2               	bsf	4034,0,c	;volatile
   677                           
   678                           ;port.c: 20: PORTA = 0b00000000;
   679  0002FA  0E00               	movlw	0
   680  0002FC  6E80               	movwf	3968,c	;volatile
   681                           
   682                           ;port.c: 21: TRISA = 0b00000000;
   683  0002FE  0E00               	movlw	0
   684  000300  6E92               	movwf	3986,c	;volatile
   685                           
   686                           ;port.c: 23: PORTB = 0b01001000;
   687  000302  0E48               	movlw	72
   688  000304  6E81               	movwf	3969,c	;volatile
   689                           
   690                           ;port.c: 24: TRISB = 0b10010011;
   691  000306  0E93               	movlw	147
   692  000308  6E93               	movwf	3987,c	;volatile
   693                           
   694                           ;port.c: 26: PORTC = 0b00000000;
   695  00030A  0E00               	movlw	0
   696  00030C  6E82               	movwf	3970,c	;volatile
   697                           
   698                           ;port.c: 27: TRISC = 0b00000000;
   699  00030E  0E00               	movlw	0
   700  000310  6E94               	movwf	3988,c	;volatile
   701                           
   702                           ;port.c: 30: GIE = 1;
   703  000312  8EF2               	bsf	intcon,7,c	;volatile
   704                           
   705                           ;port.c: 31: PEIE = 1;
   706  000314  8CF2               	bsf	intcon,6,c	;volatile
   707                           
   708                           ;port.c: 32: INTCON =0b11000000;
   709  000316  0EC0               	movlw	192
   710  000318  6EF2               	movwf	intcon,c	;volatile
   711  00031A  0012               	return	
   712  00031C                     __end_of_initPorts:
   713                           	opt stack 0
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           intcon	equ	0xFF2
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           postinc1	equ	0xFE6
   722                           postdec1	equ	0xFE5
   723                           fsr1l	equ	0xFE1
   724                           indf2	equ	0xFDF
   725                           postinc2	equ	0xFDE
   726                           fsr2h	equ	0xFDA
   727                           fsr2l	equ	0xFD9
   728                           status	equ	0xFD8
   729                           
   730 ;; *************** function _initComms *****************
   731 ;; Defined at:
   732 ;;		line 6 in file "usart.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;		None               void
   739 ;; Registers used:
   740 ;;		wreg, status,2
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text4
   761  0002B4                     __ptext4:
   762                           	opt stack 0
   763  0002B4                     _initComms:
   764                           	opt stack 29
   765                           
   766                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   767                           
   768                           ;incstack = 0
   769  0002B4  9EBA               	bcf	4026,7,c	;volatile
   770                           
   771                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   772  0002B6  9CBA               	bcf	4026,6,c	;volatile
   773                           
   774                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   775  0002B8  8ABA               	bsf	4026,5,c	;volatile
   776                           
   777                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   778  0002BA  98BA               	bcf	4026,4,c	;volatile
   779                           
   780                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   781  0002BC  96BA               	bcf	4026,3,c	;volatile
   782                           
   783                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   784  0002BE  84BA               	bsf	4026,2,c	;volatile
   785                           
   786                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
   787  0002C0  82BA               	bsf	4026,1,c	;volatile
   788                           
   789                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
   790  0002C2  90BA               	bcf	4026,0,c	;volatile
   791                           
   792                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
   793  0002C4  8EA6               	bsf	4006,7,c	;volatile
   794                           
   795                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
   796  0002C6  9CA6               	bcf	4006,6,c	;volatile
   797                           
   798                           ;usart.c: 19: RCSTA2bits.SREN = 0;
   799  0002C8  9AA6               	bcf	4006,5,c	;volatile
   800                           
   801                           ;usart.c: 20: RCSTA2bits.CREN = 1;
   802  0002CA  88A6               	bsf	4006,4,c	;volatile
   803                           
   804                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
   805  0002CC  96A6               	bcf	4006,3,c	;volatile
   806                           
   807                           ;usart.c: 22: RCSTA2bits.FERR = 0;
   808  0002CE  94A6               	bcf	4006,2,c	;volatile
   809                           
   810                           ;usart.c: 23: RCSTA2bits.OERR = 0;
   811  0002D0  92A6               	bcf	4006,1,c	;volatile
   812                           
   813                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
   814  0002D2  90A6               	bcf	4006,0,c	;volatile
   815                           
   816                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
   817  0002D4  9EB9               	bcf	4025,7,c	;volatile
   818                           
   819                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
   820  0002D6  8CB9               	bsf	4025,6,c	;volatile
   821                           
   822                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
   823  0002D8  9AB9               	bcf	4025,5,c	;volatile
   824                           
   825                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
   826  0002DA  98B9               	bcf	4025,4,c	;volatile
   827                           
   828                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
   829  0002DC  86B9               	bsf	4025,3,c	;volatile
   830                           
   831                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
   832  0002DE  92B9               	bcf	4025,1,c	;volatile
   833                           
   834                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
   835  0002E0  90B9               	bcf	4025,0,c	;volatile
   836                           
   837                           ;usart.c: 34: SPBRGH2 = 0;
   838  0002E2  0E00               	movlw	0
   839  0002E4  6E7C               	movwf	3964,c	;volatile
   840                           
   841                           ;usart.c: 36: PIE3bits.RC2IE = 1;
   842  0002E6  8AA3               	bsf	4003,5,c	;volatile
   843                           
   844                           ;usart.c: 37: RCONbits.IPEN = 1;
   845  0002E8  8ED0               	bsf	4048,7,c	;volatile
   846                           
   847                           ;usart.c: 50: SPBRG = 51;
   848  0002EA  0E33               	movlw	51
   849  0002EC  6EAF               	movwf	4015,c	;volatile
   850                           
   851                           ;usart.c: 51: SPBRG2 = 12;
   852  0002EE  0E0C               	movlw	12
   853  0002F0  6E7B               	movwf	3963,c	;volatile
   854  0002F2  0012               	return	
   855  0002F4                     __end_of_initComms:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           intcon	equ	0xFF2
   862                           postinc0	equ	0xFEE
   863                           wreg	equ	0xFE8
   864                           postinc1	equ	0xFE6
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           indf2	equ	0xFDF
   868                           postinc2	equ	0xFDE
   869                           fsr2h	equ	0xFDA
   870                           fsr2l	equ	0xFD9
   871                           status	equ	0xFD8
   872                           
   873 ;; *************** function _low_isr *****************
   874 ;; Defined at:
   875 ;;		line 87 in file "main.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;		None               void
   882 ;; Registers used:
   883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   891 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   892 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   893 ;;Total ram usage:       17 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		Interrupt level 1
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902 ;; *************** function _timer_isr *****************
   903 ;; Defined at:
   904 ;;		line 102 in file "main.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;		None               void
   911 ;; Registers used:
   912 ;;		None
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   920 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;Total ram usage:       17 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		Interrupt level 1
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	intcodelo
   932  000018                     __pintcodelo:
   933                           	opt stack 0
   934  000018                     _low_isr:
   935                           	opt stack 29
   936                           
   937                           ;incstack = 0
   938  000018  CFD8 F001          	movff	status,??_low_isr
   939  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
   940  000020  CFE0 F003          	movff	bsr,??_low_isr+2
   941  000024  CFFA F004          	movff	pclath,??_low_isr+3
   942  000028  CFFB F005          	movff	pclatu,??_low_isr+4
   943  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
   944  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
   945  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
   946  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
   947  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
   948  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
   949  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
   950  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
   951  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
   952  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
   953  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
   954  000058  CFF5 F011          	movff	tablat,??_low_isr+16
   955                           
   956                           ;main.c: 88: if (RC2IF ) {
   957  00005C  AAA4               	btfss	4004,5,c	;volatile
   958  00005E  D019               	goto	i1l838
   959                           
   960                           ;main.c: 89: tampon = RCREG2;
   961  000060  CF7A F02A          	movff	3962,_tampon	;volatile
   962                           
   963                           ;main.c: 90: PORTA =tampon;
   964  000064  C02A  FF80         	movff	_tampon,3968	;volatile
   965                           
   966                           ;main.c: 91: if (compteur == 128)
   967  000068  5028               	movf	_compteur,w,c
   968  00006A  0A80               	xorlw	128
   969  00006C  1029               	iorwf	_compteur+1,w,c
   970  00006E  A4D8               	btfss	status,2,c
   971  000070  D004               	goto	i1l834
   972                           
   973                           ;main.c: 92: {
   974                           ;main.c: 93: compteur =0;
   975  000072  0E00               	movlw	0
   976  000074  6E29               	movwf	_compteur+1,c
   977  000076  0E00               	movlw	0
   978  000078  6E28               	movwf	_compteur,c
   979  00007A                     i1l834:
   980                           
   981                           ;main.c: 94: }
   982                           ;main.c: 95: stock_led[compteur] = tampon;
   983  00007A  0102               	movlb	2	; () banked
   984  00007C  0E00               	movlw	low _stock_led
   985  00007E  2428               	addwf	_compteur,w,c
   986  000080  6ED9               	movwf	fsr2l,c
   987  000082  0102               	movlb	2	; () banked
   988  000084  0E02               	movlw	high _stock_led
   989  000086  2029               	addwfc	_compteur+1,w,c
   990  000088  6EDA               	movwf	fsr2h,c
   991  00008A  C02A  FFDF         	movff	_tampon,indf2
   992                           
   993                           ; BSR set to: 2
   994                           ;main.c: 96: compteur ++;
   995  00008E  4A28               	infsnz	_compteur,f,c
   996  000090  2A29               	incf	_compteur+1,f,c
   997  000092                     i1l838:
   998                           
   999                           ;main.c: 97: }
  1000                           ;main.c: 98: RC2IF = 0;
  1001  000092  9AA4               	bcf	4004,5,c	;volatile
  1002  000094  C011  FFF5         	movff	??_low_isr+16,tablat
  1003  000098  C010  FFF8         	movff	??_low_isr+15,tblptru
  1004  00009C  C00F  FFF7         	movff	??_low_isr+14,tblptrh
  1005  0000A0  C00E  FFF6         	movff	??_low_isr+13,tblptrl
  1006  0000A4  C00D  FFF4         	movff	??_low_isr+12,prodh
  1007  0000A8  C00C  FFF3         	movff	??_low_isr+11,prodl
  1008  0000AC  C00B  FFDA         	movff	??_low_isr+10,fsr2h
  1009  0000B0  C00A  FFD9         	movff	??_low_isr+9,fsr2l
  1010  0000B4  C009  FFE2         	movff	??_low_isr+8,fsr1h
  1011  0000B8  C008  FFE1         	movff	??_low_isr+7,fsr1l
  1012  0000BC  C007  FFEA         	movff	??_low_isr+6,fsr0h
  1013  0000C0  C006  FFE9         	movff	??_low_isr+5,fsr0l
  1014  0000C4  C005  FFFB         	movff	??_low_isr+4,pclatu
  1015  0000C8  C004  FFFA         	movff	??_low_isr+3,pclath
  1016  0000CC  C003  FFE0         	movff	??_low_isr+2,bsr
  1017  0000D0  C002  FFE8         	movff	??_low_isr+1,wreg
  1018  0000D4  C001  FFD8         	movff	??_low_isr,status
  1019  0000D8  0010               	retfie	
  1020  0000DA                     __end_of_low_isr:
  1021                           	opt stack 0
  1022  0000DA                     _timer_isr:
  1023                           	opt stack 29
  1024                           
  1025                           ;incstack = 0
  1026  0000DA  CFD8 F012          	movff	status,??_timer_isr
  1027  0000DE  CFE8 F013          	movff	wreg,??_timer_isr+1
  1028  0000E2  CFE0 F014          	movff	bsr,??_timer_isr+2
  1029  0000E6  CFFA F015          	movff	pclath,??_timer_isr+3
  1030  0000EA  CFFB F016          	movff	pclatu,??_timer_isr+4
  1031  0000EE  CFE9 F017          	movff	fsr0l,??_timer_isr+5
  1032  0000F2  CFEA F018          	movff	fsr0h,??_timer_isr+6
  1033  0000F6  CFE1 F019          	movff	fsr1l,??_timer_isr+7
  1034  0000FA  CFE2 F01A          	movff	fsr1h,??_timer_isr+8
  1035  0000FE  CFD9 F01B          	movff	fsr2l,??_timer_isr+9
  1036  000102  CFDA F01C          	movff	fsr2h,??_timer_isr+10
  1037  000106  CFF3 F01D          	movff	prodl,??_timer_isr+11
  1038  00010A  CFF4 F01E          	movff	prodh,??_timer_isr+12
  1039  00010E  CFF6 F01F          	movff	tblptrl,??_timer_isr+13
  1040  000112  CFF7 F020          	movff	tblptrh,??_timer_isr+14
  1041  000116  CFF8 F021          	movff	tblptru,??_timer_isr+15
  1042  00011A  CFF5 F022          	movff	tablat,??_timer_isr+16
  1043                           
  1044                           ;main.c: 104: if ( TMR0IE && TMR0IF ) {
  1045  00011E  BAF2               	btfsc	intcon,5,c	;volatile
  1046  000120  D000               	goto	i1l56
  1047  000122                     i1l56:
  1048                           
  1049                           ;main.c: 106: }
  1050                           ;main.c: 107: TMR0IF = 0;
  1051  000122  94F2               	bcf	intcon,2,c	;volatile
  1052  000124  C022  FFF5         	movff	??_timer_isr+16,tablat
  1053  000128  C021  FFF8         	movff	??_timer_isr+15,tblptru
  1054  00012C  C020  FFF7         	movff	??_timer_isr+14,tblptrh
  1055  000130  C01F  FFF6         	movff	??_timer_isr+13,tblptrl
  1056  000134  C01E  FFF4         	movff	??_timer_isr+12,prodh
  1057  000138  C01D  FFF3         	movff	??_timer_isr+11,prodl
  1058  00013C  C01C  FFDA         	movff	??_timer_isr+10,fsr2h
  1059  000140  C01B  FFD9         	movff	??_timer_isr+9,fsr2l
  1060  000144  C01A  FFE2         	movff	??_timer_isr+8,fsr1h
  1061  000148  C019  FFE1         	movff	??_timer_isr+7,fsr1l
  1062  00014C  C018  FFEA         	movff	??_timer_isr+6,fsr0h
  1063  000150  C017  FFE9         	movff	??_timer_isr+5,fsr0l
  1064  000154  C016  FFFB         	movff	??_timer_isr+4,pclatu
  1065  000158  C015  FFFA         	movff	??_timer_isr+3,pclath
  1066  00015C  C014  FFE0         	movff	??_timer_isr+2,bsr
  1067  000160  C013  FFE8         	movff	??_timer_isr+1,wreg
  1068  000164  C012  FFD8         	movff	??_timer_isr,status
  1069  000168  0010               	retfie	
  1070  00016A                     __end_of_timer_isr:
  1071                           	opt stack 0
  1072  0000                     pclatu	equ	0xFFB
  1073                           pclath	equ	0xFFA
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           prodh	equ	0xFF4
  1079                           prodl	equ	0xFF3
  1080                           intcon	equ	0xFF2
  1081                           postinc0	equ	0xFEE
  1082                           fsr0h	equ	0xFEA
  1083                           fsr0l	equ	0xFE9
  1084                           wreg	equ	0xFE8
  1085                           postinc1	equ	0xFE6
  1086                           postdec1	equ	0xFE5
  1087                           fsr1h	equ	0xFE2
  1088                           fsr1l	equ	0xFE1
  1089                           bsr	equ	0xFE0
  1090                           indf2	equ	0xFDF
  1091                           postinc2	equ	0xFDE
  1092                           fsr2h	equ	0xFDA
  1093                           fsr2l	equ	0xFD9
  1094                           status	equ	0xFD8
  1095                           pclatu	equ	0xFFB
  1096                           pclath	equ	0xFFA
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           intcon	equ	0xFF2
  1104                           postinc0	equ	0xFEE
  1105                           fsr0h	equ	0xFEA
  1106                           fsr0l	equ	0xFE9
  1107                           wreg	equ	0xFE8
  1108                           postinc1	equ	0xFE6
  1109                           postdec1	equ	0xFE5
  1110                           fsr1h	equ	0xFE2
  1111                           fsr1l	equ	0xFE1
  1112                           bsr	equ	0xFE0
  1113                           indf2	equ	0xFDF
  1114                           postinc2	equ	0xFDE
  1115                           fsr2h	equ	0xFDA
  1116                           fsr2l	equ	0xFD9
  1117                           status	equ	0xFD8
  1118                           
  1119                           	psect	rparam
  1120  0000                     pclatu	equ	0xFFB
  1121                           pclath	equ	0xFFA
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           intcon	equ	0xFF2
  1129                           postinc0	equ	0xFEE
  1130                           fsr0h	equ	0xFEA
  1131                           fsr0l	equ	0xFE9
  1132                           wreg	equ	0xFE8
  1133                           postinc1	equ	0xFE6
  1134                           postdec1	equ	0xFE5
  1135                           fsr1h	equ	0xFE2
  1136                           fsr1l	equ	0xFE1
  1137                           bsr	equ	0xFE0
  1138                           indf2	equ	0xFDF
  1139                           postinc2	equ	0xFDE
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        80
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      42
    BANK0           160     83      83
    BANK1           256      0     160
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    writeStringToUART@msg	PTR const unsigned char  size(2) Largest target is 80
		 -> main@msg1(BANK0[80]), 


Critical Paths under _main in COMRAM

    _main->_readAddress

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                83    83      0     171
                                              0 BANK0     83    83      0
                          _initComms
                          _initPorts
                        _readAddress
                  _writeStringToUART
 ---------------------------------------------------------------------------------
 (1) _writeStringToUART                                    2     0      2      98
                                             34 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _readAddress                                          5     5      0       0
                                             34 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             17 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initComms
   _initPorts
   _readAddress
   _writeStringToUART

 _low_isr (ROOT)

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      80      10       50.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      53       5       51.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      2A       1       44.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19D       6        0.0%
DATA                 0      0     19D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Nov  3 23:27:54 2014

               __CFG_CP0$ON 000000                 __CFG_CP1$ON 000000                 __CFG_CP2$ON 000000  
               __CFG_CP3$ON 000000                 __CFG_CPB$ON 000000                 __CFG_CPD$ON 000000  
                        bsr 000FE0                 __CFG_BORV$3 000000                         l103 031E  
                       l824 0332                         l850 0196                         l860 01BC  
                       _GIE 007F97                         _RA0 007C00                         _RA2 007C02  
                       _RA3 007C03                         u140 01D6                         u221 017E  
                       u150 01E2                         u160 01F4                         u170 0208  
                       u146 01D8                         u156 01E4                         u166 01F6  
                       u176 020A                         _PSA 007EAB                         _msg 0100  
                       wreg 000FE8                  _TXSTA2bits 000FBA                 main@address 00B0  
                      _ADON 007E10                        _T0CS 007EAD                        _PEIE 007F96  
                      i1l56 0122                __CFG_WRT0$ON 000000                __CFG_WRT1$ON 000000  
              __CFG_WRT2$ON 000000                __CFG_WRT3$ON 000000               __CFG_EBTR0$ON 000000  
             __CFG_EBTR1$ON 000000               __CFG_EBTR2$ON 000000               __CFG_EBTR3$ON 000000  
              __CFG_WRTB$ON 000000                __CFG_WRTC$ON 000000                __CFG_WRTD$ON 000000  
             __CFG_EBTRB$ON 000000                        _main 016E                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 016A               __CFG_IESO$OFF 000000                ?_readAddress 0001  
             __CFG_RETEN$ON 000000                _BAUDCON2bits 000FB9                       ?_main 0001  
                     _T0PS0 007EA8                       _T0PS1 007EA9                       _T0PS2 007EAA  
                     _RC2IF 007D25                       i1l834 007A                       i1l838 0092  
                     _SPBRG 000FAF                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94              __CFG_FCMEN$OFF 000000                       main@i 00B1  
           __end_of_low_isr 00DA                       tablat 000FF5           _writeStringToUART 031C  
                     status 000FD8          ?_writeStringToUART 0023              __CFG_MCLRE$OFF 000000  
           __initialization 0270                __end_of_main 01CE         ??_writeStringToUART 0025  
                    ??_main 0028               __activetblptr 000000                      _T08BIT 007EAE  
 __end_of_writeStringToUART 0342             __CFG_BBSIZ$BB2K 000000              __CFG_WDTEN$OFF 000000  
                    _INTCON 000FF2                      _RCREG2 000F7A                      _OSCCON 000FD3  
                    _TMR0IE 007F95                      _TMR0IF 007F92                      _SPBRG2 000F7B  
                    _TXREG2 000F79              __CFG_PWRTEN$ON 000000              __CFG_XINST$OFF 000000  
            __CFG_STVREN$ON 000000                      clear_0 0276                      clear_1 0282  
                    _tampon 002A                   ??_low_isr 0001                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                  __accesstop 0060  
   __end_of__initialization 02AE              __pcstackCOMRAM 0001                __pidataBANK1 0220  
      __size_of_readAddress 0052  __size_of_writeStringToUART 0026                  __pbssBANK1 0100  
                __pbssBANK2 0200             __CFG_PLLCFG$OFF 000000          __size_of_initComms 0040  
        __size_of_initPorts 0028            __CFG_CANMX$PORTB 000000          __size_of_timer_isr 0090  
                   _SPBRGH2 000F7C                     __Hparam 0000                     __Lparam 0000  
                   __pcinit 0270                     __ramtop 0F00                     __ptext0 016E  
                   __ptext1 031C                     __ptext2 01CE                     __ptext3 02F4  
                   __ptext4 02B4           __end_of_initComms 02F4           __end_of_initPorts 031C  
         __CFG_MSSPMSK$MSK7 000000                     _low_isr 0018        writeStringToUART@msg 0023  
      end_of_initialization 02AE           __end_of_timer_isr 016A                     postdec1 000FE5  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                main@F19158 0150            __CFG_FOSC$INTIO2 000000         start_initialization 0270  
             ??_readAddress 0023                 __pdataBANK1 0150                 __pbssCOMRAM 0028  
             __pcstackBANK0 0060                 __pintcodelo 0018         __end_of_readAddress 0220  
                  ?_low_isr 0001                   _initComms 02B4                   _initPorts 02F4  
                  _PIE3bits 000FA3                    _PIR3bits 000FA4                    _RCONbits 000FD0  
                 _timer_isr 00DA            __CFG_SOSCSEL$DIG 000000                   _stock_led 0200  
                ?_initComms 0001                  ?_initPorts 0001                   copy_data0 02A2  
                  __Hrparam 0000                 _readAddress 01CE                    __Lrparam 0000  
        __CFG_BOREN$SBORDIS 000000                  ?_timer_isr 0001            __size_of_low_isr 00C2  
                  _compteur 0028               __size_of_main 0060                    main@msg1 0060  
       __CFG_INTOSCSEL$HIGH 000000                 ??_initComms 0023                 ??_initPorts 0023  
                  intlevel1 0000                  _RCSTA2bits 000FA6          __CFG_WDTPS$1048576 000000  
               ??_timer_isr 0012         __CFG_BORPWR$ZPBORMV 000000  
