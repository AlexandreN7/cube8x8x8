

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Nov 13 13:22:33 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataBANK1
    23  0003B4                     __pidataBANK1:
    24                           	opt stack 0
    25                           
    26                           ;initializer for main@F19161
    27  0003B4  4D                 	db	77
    28  0003B5  41                 	db	65
    29  0003B6  53                 	db	83
    30  0003B7  54                 	db	84
    31  0003B8  45                 	db	69
    32  0003B9  52                 	db	82
    33  0003BA  20                 	db	32
    34  0003BB  49                 	db	73
    35  0003BC  53                 	db	83
    36  0003BD  20                 	db	32
    37  0003BE  52                 	db	82
    38  0003BF  45                 	db	69
    39  0003C0  41                 	db	65
    40  0003C1  44                 	db	68
    41  0003C2  59                 	db	89
    42  0003C3  20                 	db	32
    43  0003C4  0A                 	db	10
    44  0003C5  20                 	db	32
    45  0003C6  0D                 	db	13
    46  0003C7  00                 	db	0
    47  0003C8  00                 	db	0
    48  0003C9  00                 	db	0
    49  0003CA  00                 	db	0
    50  0003CB  00                 	db	0
    51  0003CC  00                 	db	0
    52  0003CD  00                 	db	0
    53  0003CE  00                 	db	0
    54  0003CF  00                 	db	0
    55  0003D0  00                 	db	0
    56  0003D1  00                 	db	0
    57  0003D2  00                 	db	0
    58  0003D3  00                 	db	0
    59  0003D4  00                 	db	0
    60  0003D5  00                 	db	0
    61  0003D6  00                 	db	0
    62  0003D7  00                 	db	0
    63  0003D8  00                 	db	0
    64  0003D9  00                 	db	0
    65  0003DA  00                 	db	0
    66  0003DB  00                 	db	0
    67  0003DC  00                 	db	0
    68  0003DD  00                 	db	0
    69  0003DE  00                 	db	0
    70  0003DF  00                 	db	0
    71  0003E0  00                 	db	0
    72  0003E1  00                 	db	0
    73  0003E2  00                 	db	0
    74  0003E3  00                 	db	0
    75  0003E4  00                 	db	0
    76  0003E5  00                 	db	0
    77  0003E6  00                 	db	0
    78  0003E7  00                 	db	0
    79  0003E8  00                 	db	0
    80  0003E9  00                 	db	0
    81  0003EA  00                 	db	0
    82  0003EB  00                 	db	0
    83  0003EC  00                 	db	0
    84  0003ED  00                 	db	0
    85  0003EE  00                 	db	0
    86  0003EF  00                 	db	0
    87  0003F0  00                 	db	0
    88  0003F1  00                 	db	0
    89  0003F2  00                 	db	0
    90  0003F3  00                 	db	0
    91  0003F4  00                 	db	0
    92  0003F5  00                 	db	0
    93  0003F6  00                 	db	0
    94  0003F7  00                 	db	0
    95  0003F8  00                 	db	0
    96  0003F9  00                 	db	0
    97  0003FA  00                 	db	0
    98  0003FB  00                 	db	0
    99  0003FC  00                 	db	0
   100  0003FD  00                 	db	0
   101  0003FE  00                 	db	0
   102  0003FF  00                 	db	0
   103  000400  00                 	db	0
   104  000401  00                 	db	0
   105  000402  00                 	db	0
   106  000403  00                 	db	0
   107  0000                     _ANCON0	set	3933
   108  0000                     _BAUDCON2bits	set	4025
   109  0000                     _INTCON	set	4082
   110  0000                     _OSCCON	set	4051
   111  0000                     _OSCTUNEbits	set	3995
   112  0000                     _PIE3bits	set	4003
   113  0000                     _PIR3bits	set	4004
   114  0000                     _PORTA	set	3968
   115  0000                     _PORTAbits	set	3968
   116  0000                     _PORTB	set	3969
   117  0000                     _PORTC	set	3970
   118  0000                     _PORTCbits	set	3970
   119  0000                     _RCONbits	set	4048
   120  0000                     _RCREG2	set	3962
   121  0000                     _RCSTA2bits	set	4006
   122  0000                     _SPBRG	set	4015
   123  0000                     _SPBRG2	set	3963
   124  0000                     _SPBRGH2	set	3964
   125  0000                     _TRISA	set	3986
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISC	set	3988
   128  0000                     _TXREG2	set	3961
   129  0000                     _TXSTA2bits	set	4026
   130  0000                     _ADON	set	32272
   131  0000                     _GIE	set	32663
   132  0000                     _PEIE	set	32662
   133  0000                     _PSA	set	32427
   134  0000                     _RC2IF	set	32037
   135  0000                     _T08BIT	set	32430
   136  0000                     _T0CS	set	32429
   137  0000                     _T0PS0	set	32424
   138  0000                     _T0PS1	set	32425
   139  0000                     _T0PS2	set	32426
   140  0000                     _TMR0IE	set	32661
   141  0000                     _TMR0IF	set	32658
   142                           
   143                           ; #config settings
   144  0000                     
   145                           	psect	cinit
   146  000404                     __pcinit:
   147                           	opt stack 0
   148  000404                     start_initialization:
   149                           	opt stack 0
   150  000404                     __initialization:
   151                           	opt stack 0
   152                           
   153                           ; Clear objects allocated to BANK2 (128 bytes)
   154  000404  EE02  F000         	lfsr	0,__pbssBANK2
   155  000408  0E80               	movlw	128
   156  00040A                     clear_0:
   157  00040A  6AEE               	clrf	postinc0,c
   158  00040C  06E8               	decf	wreg,f,c
   159  00040E  E1FD               	bnz	clear_0
   160                           
   161                           ; Clear objects allocated to BANK1 (80 bytes)
   162  000410  EE01  F000         	lfsr	0,__pbssBANK1
   163  000414  0E50               	movlw	80
   164  000416                     clear_1:
   165  000416  6AEE               	clrf	postinc0,c
   166  000418  06E8               	decf	wreg,f,c
   167  00041A  E1FD               	bnz	clear_1
   168                           
   169                           ; Clear objects allocated to COMRAM (4 bytes)
   170  00041C  6A28               	clrf	(__pbssCOMRAM+3)& (0+255),c
   171  00041E  6A27               	clrf	(__pbssCOMRAM+2)& (0+255),c
   172  000420  6A26               	clrf	(__pbssCOMRAM+1)& (0+255),c
   173  000422  6A25               	clrf	__pbssCOMRAM& (0+255),c
   174                           
   175                           ; Initialize objects allocated to BANK1 (80 bytes)
   176                           ; load TBLPTR registers with __pidataBANK1
   177  000424  0EB4               	movlw	low __pidataBANK1
   178  000426  6EF6               	movwf	tblptrl,c
   179  000428  0E03               	movlw	high __pidataBANK1
   180  00042A  6EF7               	movwf	tblptrh,c
   181  00042C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   182  00042E  6EF8               	movwf	tblptru,c
   183  000430  EE01  F050         	lfsr	0,__pdataBANK1
   184  000434  EE10 F050          	lfsr	1,80
   185  000438                     copy_data0:
   186  000438  0009               	tblrd		*+
   187  00043A  CFF5 FFEE          	movff	tablat,postinc0
   188  00043E  50E5               	movf	postdec1,w,c
   189  000440  50E1               	movf	fsr1l,w,c
   190  000442  E1FA               	bnz	copy_data0
   191  000444                     end_of_initialization:
   192                           	opt stack 0
   193  000444                     __end_of__initialization:
   194                           	opt stack 0
   195  000444  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  000446  6EF8               	movwf	tblptru,c
   197  000448  0100               	movlb	0
   198  00044A  EFC8  F000         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1l	equ	0xFE1
   207                           
   208                           	psect	bssCOMRAM
   209  000025                     __pbssCOMRAM:
   210                           	opt stack 0
   211  000025                     _compteur:
   212                           	opt stack 0
   213  000025                     	ds	1
   214  000026                     _flag_reception:
   215                           	opt stack 0
   216  000026                     	ds	1
   217  000027                     _it:
   218                           	opt stack 0
   219  000027                     	ds	1
   220  000028                     _tampon:
   221                           	opt stack 0
   222  000028                     	ds	1
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           postdec1	equ	0xFE5
   230                           fsr1l	equ	0xFE1
   231                           
   232                           	psect	bssBANK1
   233  000100                     __pbssBANK1:
   234                           	opt stack 0
   235  000100                     _msg:
   236                           	opt stack 0
   237  000100                     	ds	80
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	dataBANK1
   248  000150                     __pdataBANK1:
   249                           	opt stack 0
   250  000150                     main@F19161:
   251                           	opt stack 0
   252  000150                     	ds	80
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           postdec1	equ	0xFE5
   260                           fsr1l	equ	0xFE1
   261                           
   262                           	psect	bssBANK2
   263  000200                     __pbssBANK2:
   264                           	opt stack 0
   265  000200                     _stock_led:
   266                           	opt stack 0
   267  000200                     	ds	128
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	cstackBANK0
   278  000060                     __pcstackBANK0:
   279                           	opt stack 0
   280  000060                     main@msg1:
   281                           	opt stack 0
   282                           
   283                           ; 80 bytes @ 0x0
   284  000060                     	ds	80
   285  0000B0                     main@i:
   286                           	opt stack 0
   287                           
   288                           ; 4 bytes @ 0x50
   289  0000B0                     	ds	4
   290  0000B4                     main@j:
   291                           	opt stack 0
   292                           
   293                           ; 4 bytes @ 0x54
   294  0000B4                     	ds	4
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	cstackCOMRAM
   305  000001                     __pcstackCOMRAM:
   306                           	opt stack 0
   307  000001                     ??_low_isr:
   308  000001                     
   309                           ; 0 bytes @ 0x0
   310  000001                     	ds	17
   311  000012                     ??_timer_isr:
   312                           
   313                           ; 0 bytes @ 0x11
   314  000012                     	ds	17
   315  000023                     multiplexeur@n:
   316                           	opt stack 0
   317  000023                     writeStringToUART@msg:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x22
   321  000023                     	ds	2
   322  000025                     tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           ; 0 bytes @ 0x24
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 131 in file "main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;  msg1           80    0[BANK0 ] unsigned char [80]
   342 ;;  j               4   84[BANK0 ] long 
   343 ;;  i               4   80[BANK0 ] long 
   344 ;; Return value:  Size  Location     Type
   345 ;;		None               void
   346 ;; Registers used:
   347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   354 ;;      Locals:         0      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   356 ;;      Totals:         0      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   357 ;;Total ram usage:       88 bytes
   358 ;; Hardware stack levels required when called:    2
   359 ;; This function calls:
   360 ;;		_initComms
   361 ;;		_initPorts
   362 ;;		_multiplexeur
   363 ;;		_writeStringToUART
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text0
   370  000190                     __ptext0:
   371                           	opt stack 0
   372  000190                     _main:
   373                           	opt stack 29
   374                           
   375                           ;main.c: 132: char msg1[80] = "MASTER IS READY \n \r";
   376                           
   377                           ;incstack = 0
   378  000190  EE21  F050         	lfsr	2,main@F19161
   379  000194  EE10  F060         	lfsr	1,main@msg1
   380  000198  0E50               	movlw	80
   381  00019A                     u221:
   382  00019A  CFDE FFE6          	movff	postinc2,postinc1
   383  00019E  2EE8               	decfsz	wreg,f,c
   384  0001A0  D7FC               	goto	u221
   385                           
   386                           ;main.c: 133: long i = 0;
   387  0001A2  0E00               	movlw	0
   388  0001A4  0100               	movlb	0	; () banked
   389  0001A6  6FB0               	movwf	main@i& (0+255),b
   390  0001A8  0E00               	movlw	0
   391  0001AA  0100               	movlb	0	; () banked
   392  0001AC  6FB1               	movwf	(main@i+1)& (0+255),b
   393  0001AE  0E00               	movlw	0
   394  0001B0  0100               	movlb	0	; () banked
   395  0001B2  6FB2               	movwf	(main@i+2)& (0+255),b
   396  0001B4  0E00               	movlw	0
   397  0001B6  0100               	movlb	0	; () banked
   398  0001B8  6FB3               	movwf	(main@i+3)& (0+255),b
   399                           
   400                           ; BSR set to: 0
   401                           ;main.c: 134: long j = 0;
   402  0001BA  0E00               	movlw	0
   403  0001BC  0100               	movlb	0	; () banked
   404  0001BE  6FB4               	movwf	main@j& (0+255),b
   405  0001C0  0E00               	movlw	0
   406  0001C2  0100               	movlb	0	; () banked
   407  0001C4  6FB5               	movwf	(main@j+1)& (0+255),b
   408  0001C6  0E00               	movlw	0
   409  0001C8  0100               	movlb	0	; () banked
   410  0001CA  6FB6               	movwf	(main@j+2)& (0+255),b
   411  0001CC  0E00               	movlw	0
   412  0001CE  0100               	movlb	0	; () banked
   413  0001D0  6FB7               	movwf	(main@j+3)& (0+255),b
   414                           
   415                           ; BSR set to: 0
   416                           ;main.c: 136: initPorts();
   417  0001D2  EC47  F002         	call	_initPorts	;wreg free
   418                           
   419                           ;main.c: 137: initComms();
   420  0001D6  EC27  F002         	call	_initComms	;wreg free
   421  0001DA                     l912:
   422                           
   423                           ;main.c: 144: writeStringToUART(stock_led);
   424  0001DA  0102               	movlb	2	; () banked
   425  0001DC  0E02               	movlw	high _stock_led
   426  0001DE  6E24               	movwf	writeStringToUART@msg+1,c
   427  0001E0  0102               	movlb	2	; () banked
   428  0001E2  0E00               	movlw	low _stock_led
   429  0001E4  6E23               	movwf	writeStringToUART@msg,c
   430  0001E6  EC5F  F002         	call	_writeStringToUART	;wreg free
   431                           
   432                           ;main.c: 146: for (i = 0; i < 8; i++) {
   433  0001EA  0E00               	movlw	0
   434  0001EC  0100               	movlb	0	; () banked
   435  0001EE  6FB0               	movwf	main@i& (0+255),b
   436  0001F0  0E00               	movlw	0
   437  0001F2  0100               	movlb	0	; () banked
   438  0001F4  6FB1               	movwf	(main@i+1)& (0+255),b
   439  0001F6  0E00               	movlw	0
   440  0001F8  0100               	movlb	0	; () banked
   441  0001FA  6FB2               	movwf	(main@i+2)& (0+255),b
   442  0001FC  0E00               	movlw	0
   443  0001FE  0100               	movlb	0	; () banked
   444  000200  6FB3               	movwf	(main@i+3)& (0+255),b
   445                           
   446                           ; BSR set to: 0
   447  000202  0100               	movlb	0	; () banked
   448  000204  51B3               	movf	(main@i+3)& (0+255),w,b
   449  000206  0A80               	xorlw	128
   450  000208  0F80               	addlw	128
   451  00020A  E10B               	bnz	u235
   452  00020C  0E00               	movlw	0
   453  00020E  0100               	movlb	0	; () banked
   454  000210  5DB2               	subwf	(main@i+2)& (0+255),w,b
   455  000212  E107               	bnz	u235
   456  000214  0E00               	movlw	0
   457  000216  0100               	movlb	0	; () banked
   458  000218  5DB1               	subwf	(main@i+1)& (0+255),w,b
   459  00021A  E103               	bnz	u235
   460  00021C  0E08               	movlw	8
   461  00021E  0100               	movlb	0	; () banked
   462  000220  5DB0               	subwf	main@i& (0+255),w,b
   463  000222                     u235:
   464  000222  B0D8               	btfsc	status,0,c
   465  000224  D7DA               	goto	l912
   466                           
   467                           ; BSR set to: 0
   468                           ;main.c: 147: multiplexeur(i);
   469                           
   470                           ; BSR set to: 0
   471                           
   472                           ; BSR set to: 0
   473  000226  0100               	movlb	0	; () banked
   474  000228  51B0               	movf	main@i& (0+255),w,b
   475  00022A  ECA6  F001         	call	_multiplexeur
   476                           
   477                           ;main.c: 148: PORTAbits.RA0 = 1;
   478  00022E  8080               	bsf	3968,0,c	;volatile
   479                           
   480                           ;main.c: 149: for (j = 0; j < 100; j++) {
   481  000230  0E00               	movlw	0
   482  000232  0100               	movlb	0	; () banked
   483  000234  6FB4               	movwf	main@j& (0+255),b
   484  000236  0E00               	movlw	0
   485  000238  0100               	movlb	0	; () banked
   486  00023A  6FB5               	movwf	(main@j+1)& (0+255),b
   487  00023C  0E00               	movlw	0
   488  00023E  0100               	movlb	0	; () banked
   489  000240  6FB6               	movwf	(main@j+2)& (0+255),b
   490  000242  0E00               	movlw	0
   491  000244  0100               	movlb	0	; () banked
   492  000246  6FB7               	movwf	(main@j+3)& (0+255),b
   493                           
   494                           ; BSR set to: 0
   495  000248  0100               	movlb	0	; () banked
   496  00024A  51B7               	movf	(main@j+3)& (0+255),w,b
   497  00024C  0A80               	xorlw	128
   498  00024E  0F80               	addlw	128
   499  000250  E10B               	bnz	u245
   500  000252  0E00               	movlw	0
   501  000254  0100               	movlb	0	; () banked
   502  000256  5DB6               	subwf	(main@j+2)& (0+255),w,b
   503  000258  E107               	bnz	u245
   504  00025A  0E00               	movlw	0
   505  00025C  0100               	movlb	0	; () banked
   506  00025E  5DB5               	subwf	(main@j+1)& (0+255),w,b
   507  000260  E103               	bnz	u245
   508  000262  0E64               	movlw	100
   509  000264  0100               	movlb	0	; () banked
   510  000266  5DB4               	subwf	main@j& (0+255),w,b
   511  000268                     u245:
   512  000268  B0D8               	btfsc	status,0,c
   513  00026A  D01B               	goto	l68
   514                           
   515                           ; BSR set to: 0
   516                           
   517                           ; BSR set to: 0
   518                           
   519                           ; BSR set to: 0
   520  00026C  0E01               	movlw	1
   521  00026E  0100               	movlb	0	; () banked
   522  000270  27B4               	addwf	main@j& (0+255),f,b
   523  000272  0E00               	movlw	0
   524  000274  0100               	movlb	0	; () banked
   525  000276  23B5               	addwfc	(main@j+1)& (0+255),f,b
   526  000278  0100               	movlb	0	; () banked
   527  00027A  23B6               	addwfc	(main@j+2)& (0+255),f,b
   528  00027C  0100               	movlb	0	; () banked
   529  00027E  23B7               	addwfc	(main@j+3)& (0+255),f,b
   530  000280  0100               	movlb	0	; () banked
   531  000282  51B7               	movf	(main@j+3)& (0+255),w,b
   532  000284  0A80               	xorlw	128
   533  000286  0F80               	addlw	128
   534  000288  E10B               	bnz	u255
   535  00028A  0E00               	movlw	0
   536  00028C  0100               	movlb	0	; () banked
   537  00028E  5DB6               	subwf	(main@j+2)& (0+255),w,b
   538  000290  E107               	bnz	u255
   539  000292  0E00               	movlw	0
   540  000294  0100               	movlb	0	; () banked
   541  000296  5DB5               	subwf	(main@j+1)& (0+255),w,b
   542  000298  E103               	bnz	u255
   543  00029A  0E64               	movlw	100
   544  00029C  0100               	movlb	0	; () banked
   545  00029E  5DB4               	subwf	main@j& (0+255),w,b
   546  0002A0                     u255:
   547  0002A0  D7E3               	goto	u245
   548  0002A2                     l68:
   549                           
   550                           ; BSR set to: 0
   551                           ;main.c: 150: }
   552                           ;main.c: 151: PORTAbits.RA0 = 0;
   553  0002A2  9080               	bcf	3968,0,c	;volatile
   554                           
   555                           ; BSR set to: 0
   556                           ;main.c: 152: for (j = 0; j < 10000; j++) {
   557  0002A4  0E00               	movlw	0
   558  0002A6  0100               	movlb	0	; () banked
   559  0002A8  6FB4               	movwf	main@j& (0+255),b
   560  0002AA  0E00               	movlw	0
   561  0002AC  0100               	movlb	0	; () banked
   562  0002AE  6FB5               	movwf	(main@j+1)& (0+255),b
   563  0002B0  0E00               	movlw	0
   564  0002B2  0100               	movlb	0	; () banked
   565  0002B4  6FB6               	movwf	(main@j+2)& (0+255),b
   566  0002B6  0E00               	movlw	0
   567  0002B8  0100               	movlb	0	; () banked
   568  0002BA  6FB7               	movwf	(main@j+3)& (0+255),b
   569                           
   570                           ; BSR set to: 0
   571  0002BC  0100               	movlb	0	; () banked
   572  0002BE  51B7               	movf	(main@j+3)& (0+255),w,b
   573  0002C0  0A80               	xorlw	128
   574  0002C2  0F80               	addlw	128
   575  0002C4  E10B               	bnz	u265
   576  0002C6  0E00               	movlw	0
   577  0002C8  0100               	movlb	0	; () banked
   578  0002CA  5DB6               	subwf	(main@j+2)& (0+255),w,b
   579  0002CC  E107               	bnz	u265
   580  0002CE  0E27               	movlw	39
   581  0002D0  0100               	movlb	0	; () banked
   582  0002D2  5DB5               	subwf	(main@j+1)& (0+255),w,b
   583  0002D4  E103               	bnz	u265
   584  0002D6  0E10               	movlw	16
   585  0002D8  0100               	movlb	0	; () banked
   586  0002DA  5DB4               	subwf	main@j& (0+255),w,b
   587  0002DC                     u265:
   588  0002DC  B0D8               	btfsc	status,0,c
   589  0002DE  D01B               	goto	l940
   590                           
   591                           ; BSR set to: 0
   592                           
   593                           ; BSR set to: 0
   594                           
   595                           ; BSR set to: 0
   596  0002E0  0E01               	movlw	1
   597  0002E2  0100               	movlb	0	; () banked
   598  0002E4  27B4               	addwf	main@j& (0+255),f,b
   599  0002E6  0E00               	movlw	0
   600  0002E8  0100               	movlb	0	; () banked
   601  0002EA  23B5               	addwfc	(main@j+1)& (0+255),f,b
   602  0002EC  0100               	movlb	0	; () banked
   603  0002EE  23B6               	addwfc	(main@j+2)& (0+255),f,b
   604  0002F0  0100               	movlb	0	; () banked
   605  0002F2  23B7               	addwfc	(main@j+3)& (0+255),f,b
   606  0002F4  0100               	movlb	0	; () banked
   607  0002F6  51B7               	movf	(main@j+3)& (0+255),w,b
   608  0002F8  0A80               	xorlw	128
   609  0002FA  0F80               	addlw	128
   610  0002FC  E10B               	bnz	u275
   611  0002FE  0E00               	movlw	0
   612  000300  0100               	movlb	0	; () banked
   613  000302  5DB6               	subwf	(main@j+2)& (0+255),w,b
   614  000304  E107               	bnz	u275
   615  000306  0E27               	movlw	39
   616  000308  0100               	movlb	0	; () banked
   617  00030A  5DB5               	subwf	(main@j+1)& (0+255),w,b
   618  00030C  E103               	bnz	u275
   619  00030E  0E10               	movlw	16
   620  000310  0100               	movlb	0	; () banked
   621  000312  5DB4               	subwf	main@j& (0+255),w,b
   622  000314                     u275:
   623  000314  D7E3               	goto	u265
   624  000316                     l940:
   625                           
   626                           ; BSR set to: 0
   627  000316  0E01               	movlw	1
   628  000318  0100               	movlb	0	; () banked
   629  00031A  27B0               	addwf	main@i& (0+255),f,b
   630  00031C  0E00               	movlw	0
   631  00031E  0100               	movlb	0	; () banked
   632  000320  23B1               	addwfc	(main@i+1)& (0+255),f,b
   633  000322  0100               	movlb	0	; () banked
   634  000324  23B2               	addwfc	(main@i+2)& (0+255),f,b
   635  000326  0100               	movlb	0	; () banked
   636  000328  23B3               	addwfc	(main@i+3)& (0+255),f,b
   637  00032A  0100               	movlb	0	; () banked
   638  00032C  51B3               	movf	(main@i+3)& (0+255),w,b
   639  00032E  0A80               	xorlw	128
   640  000330  0F80               	addlw	128
   641  000332  E10B               	bnz	u285
   642  000334  0E00               	movlw	0
   643  000336  0100               	movlb	0	; () banked
   644  000338  5DB2               	subwf	(main@i+2)& (0+255),w,b
   645  00033A  E107               	bnz	u285
   646  00033C  0E00               	movlw	0
   647  00033E  0100               	movlb	0	; () banked
   648  000340  5DB1               	subwf	(main@i+1)& (0+255),w,b
   649  000342  E103               	bnz	u285
   650  000344  0E08               	movlw	8
   651  000346  0100               	movlb	0	; () banked
   652  000348  5DB0               	subwf	main@i& (0+255),w,b
   653  00034A                     u285:
   654  00034A  D76B               	goto	u235
   655  00034C                     __end_of_main:
   656                           	opt stack 0
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           postinc1	equ	0xFE6
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           postinc2	equ	0xFDE
   667                           status	equ	0xFD8
   668                           
   669 ;; *************** function _writeStringToUART *****************
   670 ;; Defined at:
   671 ;;		line 54 in file "usart.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  msg             2   34[COMRAM] PTR const unsigned char 
   674 ;;		 -> stock_led(128), 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;		None               void
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701  0004BE                     __ptext1:
   702                           	opt stack 0
   703  0004BE                     _writeStringToUART:
   704                           	opt stack 29
   705                           
   706                           ;usart.c: 56: while(*msg) {
   707                           
   708                           ; BSR set to: 0
   709                           ;incstack = 0
   710  0004BE  D00A               	goto	l868
   711  0004C0                     l119:
   712  0004C0  A8A4               	btfss	4004,4,c	;volatile
   713  0004C2  D7FE               	goto	l119
   714                           
   715                           ;usart.c: 58: TXREG2 = *msg++;
   716  0004C4  C023  FFD9         	movff	writeStringToUART@msg,fsr2l
   717  0004C8  C024  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   718  0004CC  50DF               	movf	indf2,w,c
   719  0004CE  6E79               	movwf	3961,c	;volatile
   720  0004D0  4A23               	infsnz	writeStringToUART@msg,f,c
   721  0004D2  2A24               	incf	writeStringToUART@msg+1,f,c
   722  0004D4                     l868:
   723  0004D4  C023  FFD9         	movff	writeStringToUART@msg,fsr2l
   724  0004D8  C024  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   725  0004DC  50DF               	movf	indf2,w,c
   726  0004DE  B4D8               	btfsc	status,2,c
   727  0004E0  0012               	return	
   728  0004E2  D7EE               	goto	l119
   729  0004E4                     __end_of_writeStringToUART:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postinc1	equ	0xFE6
   738                           postdec1	equ	0xFE5
   739                           fsr1l	equ	0xFE1
   740                           indf2	equ	0xFDF
   741                           postinc2	equ	0xFDE
   742                           fsr2h	equ	0xFDA
   743                           fsr2l	equ	0xFD9
   744                           status	equ	0xFD8
   745                           
   746 ;; *************** function _multiplexeur *****************
   747 ;; Defined at:
   748 ;;		line 160 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  n               1    wreg     unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  n               1   34[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;		None               void
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;Total ram usage:        1 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    1
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text2
   777  00034C                     __ptext2:
   778                           	opt stack 0
   779  00034C                     _multiplexeur:
   780                           	opt stack 29
   781                           
   782                           ;incstack = 0
   783                           ;multiplexeur@n stored from wreg
   784  00034C  6E23               	movwf	multiplexeur@n,c
   785                           
   786                           ;main.c: 161: PORTCbits.RC7 = 0;
   787  00034E  9E82               	bcf	3970,7,c	;volatile
   788                           
   789                           ;main.c: 162: PORTCbits.RC6 = 0;
   790  000350  9C82               	bcf	3970,6,c	;volatile
   791                           
   792                           ;main.c: 163: PORTCbits.RC5 = 0;
   793  000352  9A82               	bcf	3970,5,c	;volatile
   794                           
   795                           ;main.c: 164: PORTCbits.RC4 = 0;
   796  000354  9882               	bcf	3970,4,c	;volatile
   797                           
   798                           ;main.c: 165: PORTCbits.RC0 = 0;
   799  000356  9082               	bcf	3970,0,c	;volatile
   800                           
   801                           ;main.c: 166: PORTCbits.RC1 = 0;
   802  000358  9282               	bcf	3970,1,c	;volatile
   803                           
   804                           ;main.c: 167: PORTCbits.RC2 = 0;
   805  00035A  9482               	bcf	3970,2,c	;volatile
   806                           
   807                           ;main.c: 168: PORTCbits.RC3 = 0;
   808  00035C  9682               	bcf	3970,3,c	;volatile
   809                           
   810                           ;main.c: 169: switch (n) {
   811  00035E  D010               	goto	l874
   812  000360                     l77:
   813                           
   814                           ;main.c: 171: PORTCbits.RC7 = 1;
   815  000360  8E82               	bsf	3970,7,c	;volatile
   816                           
   817                           ;main.c: 172: break;
   818  000362  0012               	return	
   819  000364                     l79:
   820                           
   821                           ;main.c: 175: PORTCbits.RC6 = 1;
   822  000364  8C82               	bsf	3970,6,c	;volatile
   823                           
   824                           ;main.c: 176: break;
   825  000366  0012               	return	
   826  000368                     l80:
   827                           
   828                           ;main.c: 179: PORTCbits.RC5 = 1;
   829  000368  8A82               	bsf	3970,5,c	;volatile
   830                           
   831                           ;main.c: 180: break;
   832  00036A  0012               	return	
   833  00036C                     l81:
   834                           
   835                           ;main.c: 183: PORTCbits.RC4 = 1;
   836  00036C  8882               	bsf	3970,4,c	;volatile
   837                           
   838                           ;main.c: 184: break;
   839  00036E  0012               	return	
   840  000370                     l82:
   841                           
   842                           ;main.c: 187: PORTCbits.RC0 = 1;
   843  000370  8082               	bsf	3970,0,c	;volatile
   844                           
   845                           ;main.c: 188: break;
   846  000372  0012               	return	
   847  000374                     l83:
   848                           
   849                           ;main.c: 191: PORTCbits.RC1 = 1;
   850  000374  8282               	bsf	3970,1,c	;volatile
   851                           
   852                           ;main.c: 192: break;
   853  000376  0012               	return	
   854  000378                     l84:
   855                           
   856                           ;main.c: 195: PORTCbits.RC2 = 1;
   857  000378  8482               	bsf	3970,2,c	;volatile
   858                           
   859                           ;main.c: 196: break;
   860  00037A  0012               	return	
   861  00037C                     l85:
   862                           
   863                           ;main.c: 199: PORTCbits.RC3 = 1;
   864  00037C  8682               	bsf	3970,3,c	;volatile
   865                           
   866                           ;main.c: 200: break;
   867  00037E  0012               	return	
   868  000380                     l874:
   869  000380  5023               	movf	multiplexeur@n,w,c
   870                           
   871                           ; Switch size 1, requested type "space"
   872                           ; Number of cases is 8, Range of values is 0 to 7
   873                           ; switch strategies available:
   874                           ; Name         Instructions Cycles
   875                           ; simple_byte           25    13 (average)
   876                           ;	Chosen strategy is simple_byte
   877  000382  0A00               	xorlw	0	; case 0
   878  000384  B4D8               	btfsc	status,2,c
   879  000386  D7EC               	goto	l77
   880  000388  0A01               	xorlw	1	; case 1
   881  00038A  B4D8               	btfsc	status,2,c
   882  00038C  D7EB               	goto	l79
   883  00038E  0A03               	xorlw	3	; case 2
   884  000390  B4D8               	btfsc	status,2,c
   885  000392  D7EA               	goto	l80
   886  000394  0A01               	xorlw	1	; case 3
   887  000396  B4D8               	btfsc	status,2,c
   888  000398  D7E9               	goto	l81
   889  00039A  0A07               	xorlw	7	; case 4
   890  00039C  B4D8               	btfsc	status,2,c
   891  00039E  D7E8               	goto	l82
   892  0003A0  0A01               	xorlw	1	; case 5
   893  0003A2  B4D8               	btfsc	status,2,c
   894  0003A4  D7E7               	goto	l83
   895  0003A6  0A03               	xorlw	3	; case 6
   896  0003A8  B4D8               	btfsc	status,2,c
   897  0003AA  D7E6               	goto	l84
   898  0003AC  0A01               	xorlw	1	; case 7
   899  0003AE  A4D8               	btfss	status,2,c
   900  0003B0  0012               	return	
   901  0003B2  D7E4               	goto	l85
   902  0003B4                     __end_of_multiplexeur:
   903                           	opt stack 0
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postinc1	equ	0xFE6
   911                           postdec1	equ	0xFE5
   912                           fsr1l	equ	0xFE1
   913                           indf2	equ	0xFDF
   914                           postinc2	equ	0xFDE
   915                           fsr2h	equ	0xFDA
   916                           fsr2l	equ	0xFD9
   917                           status	equ	0xFD8
   918                           
   919 ;; *************** function _initPorts *****************
   920 ;; Defined at:
   921 ;;		line 7 in file "port.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;		None               void
   928 ;; Registers used:
   929 ;;		wreg, status,2
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text3
   950  00048E                     __ptext3:
   951                           	opt stack 0
   952  00048E                     _initPorts:
   953                           	opt stack 29
   954                           
   955                           ;port.c: 12: OSCCON = 0x70;
   956                           
   957                           ;incstack = 0
   958  00048E  0E70               	movlw	112
   959  000490  6ED3               	movwf	4051,c	;volatile
   960                           
   961                           ;port.c: 14: ANCON0 = 0b00000000;
   962  000492  0E00               	movlw	0
   963  000494  010F               	movlb	15	; () banked
   964  000496  6F5D               	movwf	93,b	;volatile
   965                           
   966                           ; BSR set to: 15
   967                           ;port.c: 17: ADON = 0;
   968  000498  90C2               	bcf	4034,0,c	;volatile
   969                           
   970                           ;port.c: 20: PORTA = 0b00000000;
   971  00049A  0E00               	movlw	0
   972  00049C  6E80               	movwf	3968,c	;volatile
   973                           
   974                           ;port.c: 21: TRISA = 0b00000000;
   975  00049E  0E00               	movlw	0
   976  0004A0  6E92               	movwf	3986,c	;volatile
   977                           
   978                           ;port.c: 23: PORTB = 0b01000000;
   979  0004A2  0E40               	movlw	64
   980  0004A4  6E81               	movwf	3969,c	;volatile
   981                           
   982                           ;port.c: 24: TRISB = 0b10000000;
   983  0004A6  0E80               	movlw	128
   984  0004A8  6E93               	movwf	3987,c	;volatile
   985                           
   986                           ;port.c: 26: PORTC = 0b00000000;
   987  0004AA  0E00               	movlw	0
   988  0004AC  6E82               	movwf	3970,c	;volatile
   989                           
   990                           ;port.c: 27: TRISC = 0b00000000;
   991  0004AE  0E00               	movlw	0
   992  0004B0  6E94               	movwf	3988,c	;volatile
   993                           
   994                           ; BSR set to: 15
   995                           ;port.c: 30: GIE = 1;
   996  0004B2  8EF2               	bsf	intcon,7,c	;volatile
   997                           
   998                           ; BSR set to: 15
   999                           ;port.c: 31: PEIE = 1;
  1000  0004B4  8CF2               	bsf	intcon,6,c	;volatile
  1001                           
  1002                           ;port.c: 32: INTCON =0b11000000;
  1003  0004B6  0EC0               	movlw	192
  1004  0004B8  6EF2               	movwf	intcon,c	;volatile
  1005                           
  1006                           ; BSR set to: 15
  1007                           ;port.c: 34: OSCTUNEbits.PLLEN = 1;
  1008  0004BA  8C9B               	bsf	3995,6,c	;volatile
  1009                           
  1010                           ; BSR set to: 15
  1011  0004BC  0012               	return	
  1012  0004BE                     __end_of_initPorts:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           intcon	equ	0xFF2
  1019                           postinc0	equ	0xFEE
  1020                           wreg	equ	0xFE8
  1021                           postinc1	equ	0xFE6
  1022                           postdec1	equ	0xFE5
  1023                           fsr1l	equ	0xFE1
  1024                           indf2	equ	0xFDF
  1025                           postinc2	equ	0xFDE
  1026                           fsr2h	equ	0xFDA
  1027                           fsr2l	equ	0xFD9
  1028                           status	equ	0xFD8
  1029                           
  1030 ;; *************** function _initComms *****************
  1031 ;; Defined at:
  1032 ;;		line 6 in file "usart.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;		None               void
  1039 ;; Registers used:
  1040 ;;		wreg, status,2
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061  00044E                     __ptext4:
  1062                           	opt stack 0
  1063  00044E                     _initComms:
  1064                           	opt stack 29
  1065                           
  1066                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
  1067                           
  1068                           ; BSR set to: 15
  1069                           ;incstack = 0
  1070  00044E  9EBA               	bcf	4026,7,c	;volatile
  1071                           
  1072                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
  1073  000450  9CBA               	bcf	4026,6,c	;volatile
  1074                           
  1075                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
  1076  000452  8ABA               	bsf	4026,5,c	;volatile
  1077                           
  1078                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
  1079  000454  98BA               	bcf	4026,4,c	;volatile
  1080                           
  1081                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
  1082  000456  96BA               	bcf	4026,3,c	;volatile
  1083                           
  1084                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
  1085  000458  84BA               	bsf	4026,2,c	;volatile
  1086                           
  1087                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
  1088  00045A  82BA               	bsf	4026,1,c	;volatile
  1089                           
  1090                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
  1091  00045C  90BA               	bcf	4026,0,c	;volatile
  1092                           
  1093                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
  1094  00045E  8EA6               	bsf	4006,7,c	;volatile
  1095                           
  1096                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
  1097  000460  9CA6               	bcf	4006,6,c	;volatile
  1098                           
  1099                           ;usart.c: 19: RCSTA2bits.SREN = 0;
  1100  000462  9AA6               	bcf	4006,5,c	;volatile
  1101                           
  1102                           ;usart.c: 20: RCSTA2bits.CREN = 1;
  1103  000464  88A6               	bsf	4006,4,c	;volatile
  1104                           
  1105                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
  1106  000466  96A6               	bcf	4006,3,c	;volatile
  1107                           
  1108                           ;usart.c: 22: RCSTA2bits.FERR = 0;
  1109  000468  94A6               	bcf	4006,2,c	;volatile
  1110                           
  1111                           ;usart.c: 23: RCSTA2bits.OERR = 0;
  1112  00046A  92A6               	bcf	4006,1,c	;volatile
  1113                           
  1114                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
  1115  00046C  90A6               	bcf	4006,0,c	;volatile
  1116                           
  1117                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
  1118  00046E  9EB9               	bcf	4025,7,c	;volatile
  1119                           
  1120                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
  1121  000470  8CB9               	bsf	4025,6,c	;volatile
  1122                           
  1123                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
  1124  000472  9AB9               	bcf	4025,5,c	;volatile
  1125                           
  1126                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
  1127  000474  98B9               	bcf	4025,4,c	;volatile
  1128                           
  1129                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
  1130  000476  86B9               	bsf	4025,3,c	;volatile
  1131                           
  1132                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
  1133  000478  92B9               	bcf	4025,1,c	;volatile
  1134                           
  1135                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
  1136  00047A  90B9               	bcf	4025,0,c	;volatile
  1137                           
  1138                           ;usart.c: 36: PIE3bits.RC2IE = 1;
  1139  00047C  8AA3               	bsf	4003,5,c	;volatile
  1140                           
  1141                           ;usart.c: 37: RCONbits.IPEN = 1;
  1142  00047E  8ED0               	bsf	4048,7,c	;volatile
  1143                           
  1144                           ;usart.c: 48: SPBRG = 115;
  1145  000480  0E73               	movlw	115
  1146  000482  6EAF               	movwf	4015,c	;volatile
  1147                           
  1148                           ;usart.c: 49: SPBRGH2 = 0;
  1149  000484  0E00               	movlw	0
  1150  000486  6E7C               	movwf	3964,c	;volatile
  1151                           
  1152                           ;usart.c: 50: SPBRG2 = 137;
  1153  000488  0E89               	movlw	137
  1154  00048A  6E7B               	movwf	3963,c	;volatile
  1155  00048C  0012               	return	
  1156  00048E                     __end_of_initComms:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           intcon	equ	0xFF2
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           postinc1	equ	0xFE6
  1166                           postdec1	equ	0xFE5
  1167                           fsr1l	equ	0xFE1
  1168                           indf2	equ	0xFDF
  1169                           postinc2	equ	0xFDE
  1170                           fsr2h	equ	0xFDA
  1171                           fsr2l	equ	0xFD9
  1172                           status	equ	0xFD8
  1173                           
  1174 ;; *************** function _low_isr *****************
  1175 ;; Defined at:
  1176 ;;		line 100 in file "main.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;		None               void
  1183 ;; Registers used:
  1184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1192 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1193 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;Total ram usage:       17 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		Interrupt level 1
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203 ;; *************** function _timer_isr *****************
  1204 ;; Defined at:
  1205 ;;		line 119 in file "main.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		None
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1223 ;;Total ram usage:       17 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		Interrupt level 1
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	intcodelo
  1233  000018                     __pintcodelo:
  1234                           	opt stack 0
  1235  000018                     _low_isr:
  1236                           	opt stack 29
  1237                           
  1238                           ;incstack = 0
  1239  000018  CFD8 F001          	movff	status,??_low_isr
  1240  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
  1241  000020  CFE0 F003          	movff	bsr,??_low_isr+2
  1242  000024  CFFA F004          	movff	pclath,??_low_isr+3
  1243  000028  CFFB F005          	movff	pclatu,??_low_isr+4
  1244  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
  1245  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
  1246  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
  1247  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
  1248  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
  1249  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
  1250  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
  1251  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
  1252  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
  1253  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
  1254  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
  1255  000058  CFF5 F011          	movff	tablat,??_low_isr+16
  1256                           
  1257                           ;main.c: 101: if (RC2IF ) {
  1258  00005C  AAA4               	btfss	4004,5,c	;volatile
  1259  00005E  D02A               	goto	i1l900
  1260                           
  1261                           ;main.c: 102: tampon = RCREG2;
  1262  000060  CF7A F028          	movff	3962,_tampon	;volatile
  1263                           
  1264                           ;main.c: 104: if (compteur == 128) {
  1265  000064  5025               	movf	_compteur,w,c
  1266  000066  0A80               	xorlw	128
  1267  000068  A4D8               	btfss	status,2,c
  1268  00006A  D017               	goto	i1l896
  1269                           
  1270                           ;main.c: 105: for (it = 0; it < 128; it++) {
  1271  00006C  0E00               	movlw	0
  1272  00006E  6E27               	movwf	_it,c
  1273  000070  D00D               	goto	L1
  1274  000072                     i1l888:
  1275                           
  1276                           ;main.c: 106: stock_led[it] = 0;
  1277  000072  5027               	movf	_it,w,c
  1278  000074  0D01               	mullw	1
  1279  000076  0102               	movlb	2	; () banked
  1280  000078  0E00               	movlw	low _stock_led
  1281  00007A  24F3               	addwf	prodl,w,c
  1282  00007C  6ED9               	movwf	fsr2l,c
  1283  00007E  0102               	movlb	2	; () banked
  1284  000080  0E02               	movlw	high _stock_led
  1285  000082  20F4               	addwfc	prodh,w,c
  1286  000084  6EDA               	movwf	fsr2h,c
  1287  000086  0E00               	movlw	0
  1288  000088  6EDF               	movwf	indf2,c
  1289                           
  1290                           ; BSR set to: 2
  1291  00008A  2A27               	incf	_it,f,c
  1292  00008C                     L1:
  1293                           
  1294                           ; BSR set to: 2
  1295  00008C  0E7F               	movlw	127
  1296  00008E  6427               	cpfsgt	_it,c
  1297  000090  D7F0               	goto	i1l888
  1298                           
  1299                           ;main.c: 108: }
  1300                           ;main.c: 109: compteur = 0;
  1301                           
  1302                           ; BSR set to: 2
  1303  000092  0E00               	movlw	0
  1304  000094  6E25               	movwf	_compteur,c
  1305                           
  1306                           ;main.c: 110: flag_reception = 1;
  1307  000096  0E01               	movlw	1
  1308  000098  6E26               	movwf	_flag_reception,c
  1309  00009A                     i1l896:
  1310                           
  1311                           ;main.c: 112: }
  1312                           ;main.c: 113: stock_led[compteur] = tampon;
  1313  00009A  5025               	movf	_compteur,w,c
  1314  00009C  0D01               	mullw	1
  1315  00009E  0102               	movlb	2	; () banked
  1316  0000A0  0E00               	movlw	low _stock_led
  1317  0000A2  24F3               	addwf	prodl,w,c
  1318  0000A4  6ED9               	movwf	fsr2l,c
  1319  0000A6  0102               	movlb	2	; () banked
  1320  0000A8  0E02               	movlw	high _stock_led
  1321  0000AA  20F4               	addwfc	prodh,w,c
  1322  0000AC  6EDA               	movwf	fsr2h,c
  1323  0000AE  C028  FFDF         	movff	_tampon,indf2
  1324                           
  1325                           ; BSR set to: 2
  1326                           ;main.c: 114: compteur++;
  1327  0000B2  2A25               	incf	_compteur,f,c
  1328  0000B4                     i1l900:
  1329                           
  1330                           ;main.c: 115: }
  1331                           ;main.c: 116: RC2IF = 0;
  1332  0000B4  9AA4               	bcf	4004,5,c	;volatile
  1333  0000B6  C011  FFF5         	movff	??_low_isr+16,tablat
  1334  0000BA  C010  FFF8         	movff	??_low_isr+15,tblptru
  1335  0000BE  C00F  FFF7         	movff	??_low_isr+14,tblptrh
  1336  0000C2  C00E  FFF6         	movff	??_low_isr+13,tblptrl
  1337  0000C6  C00D  FFF4         	movff	??_low_isr+12,prodh
  1338  0000CA  C00C  FFF3         	movff	??_low_isr+11,prodl
  1339  0000CE  C00B  FFDA         	movff	??_low_isr+10,fsr2h
  1340  0000D2  C00A  FFD9         	movff	??_low_isr+9,fsr2l
  1341  0000D6  C009  FFE2         	movff	??_low_isr+8,fsr1h
  1342  0000DA  C008  FFE1         	movff	??_low_isr+7,fsr1l
  1343  0000DE  C007  FFEA         	movff	??_low_isr+6,fsr0h
  1344  0000E2  C006  FFE9         	movff	??_low_isr+5,fsr0l
  1345  0000E6  C005  FFFB         	movff	??_low_isr+4,pclatu
  1346  0000EA  C004  FFFA         	movff	??_low_isr+3,pclath
  1347  0000EE  C003  FFE0         	movff	??_low_isr+2,bsr
  1348  0000F2  C002  FFE8         	movff	??_low_isr+1,wreg
  1349  0000F6  C001  FFD8         	movff	??_low_isr,status
  1350  0000FA  0010               	retfie	
  1351  0000FC                     __end_of_low_isr:
  1352                           	opt stack 0
  1353  0000FC                     _timer_isr:
  1354                           	opt stack 29
  1355                           
  1356                           ;incstack = 0
  1357  0000FC  CFD8 F012          	movff	status,??_timer_isr
  1358  000100  CFE8 F013          	movff	wreg,??_timer_isr+1
  1359  000104  CFE0 F014          	movff	bsr,??_timer_isr+2
  1360  000108  CFFA F015          	movff	pclath,??_timer_isr+3
  1361  00010C  CFFB F016          	movff	pclatu,??_timer_isr+4
  1362  000110  CFE9 F017          	movff	fsr0l,??_timer_isr+5
  1363  000114  CFEA F018          	movff	fsr0h,??_timer_isr+6
  1364  000118  CFE1 F019          	movff	fsr1l,??_timer_isr+7
  1365  00011C  CFE2 F01A          	movff	fsr1h,??_timer_isr+8
  1366  000120  CFD9 F01B          	movff	fsr2l,??_timer_isr+9
  1367  000124  CFDA F01C          	movff	fsr2h,??_timer_isr+10
  1368  000128  CFF3 F01D          	movff	prodl,??_timer_isr+11
  1369  00012C  CFF4 F01E          	movff	prodh,??_timer_isr+12
  1370  000130  CFF6 F01F          	movff	tblptrl,??_timer_isr+13
  1371  000134  CFF7 F020          	movff	tblptrh,??_timer_isr+14
  1372  000138  CFF8 F021          	movff	tblptru,??_timer_isr+15
  1373  00013C  CFF5 F022          	movff	tablat,??_timer_isr+16
  1374                           
  1375                           ;main.c: 121: if (TMR0IE && TMR0IF) {
  1376  000140  BAF2               	btfsc	intcon,5,c	;volatile
  1377  000142  D000               	goto	i1l58
  1378  000144                     i1l58:
  1379                           
  1380                           ;main.c: 123: }
  1381                           ;main.c: 124: TMR0IF = 0;
  1382  000144  94F2               	bcf	intcon,2,c	;volatile
  1383  000146  C022  FFF5         	movff	??_timer_isr+16,tablat
  1384  00014A  C021  FFF8         	movff	??_timer_isr+15,tblptru
  1385  00014E  C020  FFF7         	movff	??_timer_isr+14,tblptrh
  1386  000152  C01F  FFF6         	movff	??_timer_isr+13,tblptrl
  1387  000156  C01E  FFF4         	movff	??_timer_isr+12,prodh
  1388  00015A  C01D  FFF3         	movff	??_timer_isr+11,prodl
  1389  00015E  C01C  FFDA         	movff	??_timer_isr+10,fsr2h
  1390  000162  C01B  FFD9         	movff	??_timer_isr+9,fsr2l
  1391  000166  C01A  FFE2         	movff	??_timer_isr+8,fsr1h
  1392  00016A  C019  FFE1         	movff	??_timer_isr+7,fsr1l
  1393  00016E  C018  FFEA         	movff	??_timer_isr+6,fsr0h
  1394  000172  C017  FFE9         	movff	??_timer_isr+5,fsr0l
  1395  000176  C016  FFFB         	movff	??_timer_isr+4,pclatu
  1396  00017A  C015  FFFA         	movff	??_timer_isr+3,pclath
  1397  00017E  C014  FFE0         	movff	??_timer_isr+2,bsr
  1398  000182  C013  FFE8         	movff	??_timer_isr+1,wreg
  1399  000186  C012  FFD8         	movff	??_timer_isr,status
  1400  00018A  0010               	retfie	
  1401  00018C                     __end_of_timer_isr:
  1402                           	opt stack 0
  1403  0000                     pclatu	equ	0xFFB
  1404                           pclath	equ	0xFFA
  1405                           tblptru	equ	0xFF8
  1406                           tblptrh	equ	0xFF7
  1407                           tblptrl	equ	0xFF6
  1408                           tablat	equ	0xFF5
  1409                           prodh	equ	0xFF4
  1410                           prodl	equ	0xFF3
  1411                           intcon	equ	0xFF2
  1412                           postinc0	equ	0xFEE
  1413                           fsr0h	equ	0xFEA
  1414                           fsr0l	equ	0xFE9
  1415                           wreg	equ	0xFE8
  1416                           postinc1	equ	0xFE6
  1417                           postdec1	equ	0xFE5
  1418                           fsr1h	equ	0xFE2
  1419                           fsr1l	equ	0xFE1
  1420                           bsr	equ	0xFE0
  1421                           indf2	equ	0xFDF
  1422                           postinc2	equ	0xFDE
  1423                           fsr2h	equ	0xFDA
  1424                           fsr2l	equ	0xFD9
  1425                           status	equ	0xFD8
  1426                           pclatu	equ	0xFFB
  1427                           pclath	equ	0xFFA
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           intcon	equ	0xFF2
  1435                           postinc0	equ	0xFEE
  1436                           fsr0h	equ	0xFEA
  1437                           fsr0l	equ	0xFE9
  1438                           wreg	equ	0xFE8
  1439                           postinc1	equ	0xFE6
  1440                           postdec1	equ	0xFE5
  1441                           fsr1h	equ	0xFE2
  1442                           fsr1l	equ	0xFE1
  1443                           bsr	equ	0xFE0
  1444                           indf2	equ	0xFDF
  1445                           postinc2	equ	0xFDE
  1446                           fsr2h	equ	0xFDA
  1447                           fsr2l	equ	0xFD9
  1448                           status	equ	0xFD8
  1449                           
  1450                           	psect	rparam
  1451  0000                     pclatu	equ	0xFFB
  1452                           pclath	equ	0xFFA
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           prodh	equ	0xFF4
  1458                           prodl	equ	0xFF3
  1459                           intcon	equ	0xFF2
  1460                           postinc0	equ	0xFEE
  1461                           fsr0h	equ	0xFEA
  1462                           fsr0l	equ	0xFE9
  1463                           wreg	equ	0xFE8
  1464                           postinc1	equ	0xFE6
  1465                           postdec1	equ	0xFE5
  1466                           fsr1h	equ	0xFE2
  1467                           fsr1l	equ	0xFE1
  1468                           bsr	equ	0xFE0
  1469                           indf2	equ	0xFDF
  1470                           postinc2	equ	0xFDE
  1471                           fsr2h	equ	0xFDA
  1472                           fsr2l	equ	0xFD9
  1473                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        80
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      40
    BANK0           160     88      88
    BANK1           256      0     160
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    writeStringToUART@msg	PTR const unsigned char  size(2) Largest target is 128
		 -> stock_led(BANK2[128]), 


Critical Paths under _main in COMRAM

    _main->_writeStringToUART

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                88    88      0     283
                                              0 BANK0     88    88      0
                          _initComms
                          _initPorts
                       _multiplexeur
                  _writeStringToUART
 ---------------------------------------------------------------------------------
 (1) _writeStringToUART                                    2     0      2      98
                                             34 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _multiplexeur                                         1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             17 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initComms
   _initPorts
   _multiplexeur
   _writeStringToUART

 _low_isr (ROOT)

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      80      10       50.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      58       5       55.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      28       1       42.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A0       6        0.0%
DATA                 0      0     1A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Nov 13 13:22:33 2014

               __CFG_CP0$ON 000000                 __CFG_CP1$ON 000000                 __CFG_CP2$ON 000000  
               __CFG_CP3$ON 000000                          l80 0368                          l81 036C  
                        l82 0370                          l83 0374                          l84 0378  
                        l68 02A2                          l85 037C                          l77 0360  
                        l79 0364                 __CFG_CPB$ON 000000                 __CFG_CPD$ON 000000  
                        _it 0027                          bsr 000FE0                 __CFG_BORV$3 000000  
                       l119 04C0                         l912 01DA                         l940 0316  
                       l874 0380                         l868 04D4                         _GIE 007F97  
                       u221 019A                         u235 0222                         u245 0268  
                       u255 02A0                         u265 02DC                         u275 0314  
                       u285 034A                         _PSA 007EAB                         _msg 0100  
                       prod 000FF3                         wreg 000FE8                __CFG_IESO$ON 000000  
                _TXSTA2bits 000FBA                        _ADON 007E10                        _T0CS 007EAD  
                      _PEIE 007F96                        i1l58 0144                __CFG_WRT0$ON 000000  
              __CFG_WRT1$ON 000000                __CFG_WRT2$ON 000000                __CFG_WRT3$ON 000000  
             __CFG_EBTR0$ON 000000               __CFG_EBTR1$ON 000000               __CFG_EBTR2$ON 000000  
             __CFG_EBTR3$ON 000000                __CFG_WRTB$ON 000000                __CFG_WRTC$ON 000000  
              __CFG_WRTD$ON 000000               __CFG_EBTRB$ON 000000                        _main 0190  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr0l 000FE9  
                      fsr2h 000FDA                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9                        pclat 000FFA                        prodh 000FF4  
                      prodl 000FF3                        start 018C               __CFG_RETEN$ON 000000  
              _BAUDCON2bits 000FB9                       ?_main 0001                       _T0PS0 007EA8  
                     _T0PS1 007EA9                       _T0PS2 007EAA                       _RC2IF 007D25  
                     i1l900 00B4                       i1l888 0072                       i1l896 009A  
                     _SPBRG 000FAF                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94              __CFG_FCMEN$OFF 000000                       main@i 00B0  
                     main@j 00B4             __end_of_low_isr 00FC                       tablat 000FF5  
         _writeStringToUART 04BE                       status 000FD8               multiplexeur@n 0023  
        ?_writeStringToUART 0023              __CFG_MCLRE$OFF 000000             __initialization 0404  
              __end_of_main 034C         ??_writeStringToUART 0025                      ??_main 0025  
             __activetblptr 000002              __CFG_PLLCFG$ON 000000                      _ANCON0 000F5D  
                    _T08BIT 007EAE   __end_of_writeStringToUART 04E4             __CFG_BBSIZ$BB2K 000000  
            __CFG_WDTEN$OFF 000000                      _INTCON 000FF2                      _RCREG2 000F7A  
                    _OSCCON 000FD3                      _TMR0IE 007F95                      _TMR0IF 007F92  
                    _SPBRG2 000F7B                      _TXREG2 000F79              __CFG_PWRTEN$ON 000000  
            __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000                      clear_0 040A  
                    clear_1 0416                      _tampon 0028                   ??_low_isr 0001  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                __accesstop 0060     __end_of__initialization 0444              __pcstackCOMRAM 0001  
              __pidataBANK1 03B4  __size_of_writeStringToUART 0026                  __pbssBANK1 0100  
                __pbssBANK2 0200          __size_of_initComms 0040          __size_of_initPorts 0030  
          __CFG_CANMX$PORTB 000000          __size_of_timer_isr 0090                     _SPBRGH2 000F7C  
                   __Hparam 0000                     __Lparam 0000                     __pcinit 0404  
                   __ramtop 0F00                     __ptext0 0190                     __ptext1 04BE  
                   __ptext2 034C                     __ptext3 048E                     __ptext4 044E  
         __end_of_initComms 048E           __end_of_initPorts 04BE           __CFG_MSSPMSK$MSK7 000000  
                   _low_isr 0018        writeStringToUART@msg 0023        end_of_initialization 0444  
             __Lmediumconst 0000           __end_of_timer_isr 018C                     postdec1 000FE5  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                main@F19161 0150                   _PORTAbits 000F80                   _PORTCbits 000F82  
          __CFG_FOSC$INTIO1 000000               ?_multiplexeur 0001              ??_multiplexeur 0023  
       start_initialization 0404              _flag_reception 0026                 __pdataBANK1 0150  
               __pbssCOMRAM 0025               __pcstackBANK0 0060                 __pintcodelo 0018  
                  ?_low_isr 0001                   _initComms 044E                   _initPorts 048E  
                  _PIE3bits 000FA3        __end_of_multiplexeur 03B4                    _PIR3bits 000FA4  
                  _RCONbits 000FD0                   _timer_isr 00FC            __CFG_SOSCSEL$DIG 000000  
                 _stock_led 0200                  ?_initComms 0001                  ?_initPorts 0001  
                 copy_data0 0438                    __Hrparam 0000                    __Lrparam 0000  
        __CFG_BOREN$SBORDIS 000000                  ?_timer_isr 0001            __size_of_low_isr 00E4  
                  _compteur 0025               __size_of_main 01BC                    main@msg1 0060  
       __CFG_INTOSCSEL$HIGH 000000                 _OSCTUNEbits 000F9B                 ??_initComms 0023  
               ??_initPorts 0023                    intlevel1 0000       __size_of_multiplexeur 0068  
                _RCSTA2bits 000FA6          __CFG_WDTPS$1048576 000000                 ??_timer_isr 0012  
              _multiplexeur 034C         __CFG_BORPWR$ZPBORMV 000000  
