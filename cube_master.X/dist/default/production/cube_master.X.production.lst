

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Nov 15 17:16:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataBANK1
    22  000368                     __pidataBANK1:
    23                           	opt stack 0
    24                           
    25                           ;initializer for main@F19160
    26  000368  4D                 	db	77
    27  000369  41                 	db	65
    28  00036A  53                 	db	83
    29  00036B  54                 	db	84
    30  00036C  45                 	db	69
    31  00036D  52                 	db	82
    32  00036E  20                 	db	32
    33  00036F  49                 	db	73
    34  000370  53                 	db	83
    35  000371  20                 	db	32
    36  000372  52                 	db	82
    37  000373  45                 	db	69
    38  000374  41                 	db	65
    39  000375  44                 	db	68
    40  000376  59                 	db	89
    41  000377  20                 	db	32
    42  000378  0A                 	db	10
    43  000379  20                 	db	32
    44  00037A  0D                 	db	13
    45  00037B  00                 	db	0
    46  00037C  00                 	db	0
    47  00037D  00                 	db	0
    48  00037E  00                 	db	0
    49  00037F  00                 	db	0
    50  000380  00                 	db	0
    51  000381  00                 	db	0
    52  000382  00                 	db	0
    53  000383  00                 	db	0
    54  000384  00                 	db	0
    55  000385  00                 	db	0
    56  000386  00                 	db	0
    57  000387  00                 	db	0
    58  000388  00                 	db	0
    59  000389  00                 	db	0
    60  00038A  00                 	db	0
    61  00038B  00                 	db	0
    62  00038C  00                 	db	0
    63  00038D  00                 	db	0
    64  00038E  00                 	db	0
    65  00038F  00                 	db	0
    66  000390  00                 	db	0
    67  000391  00                 	db	0
    68  000392  00                 	db	0
    69  000393  00                 	db	0
    70  000394  00                 	db	0
    71  000395  00                 	db	0
    72  000396  00                 	db	0
    73  000397  00                 	db	0
    74  000398  00                 	db	0
    75  000399  00                 	db	0
    76  00039A  00                 	db	0
    77  00039B  00                 	db	0
    78  00039C  00                 	db	0
    79  00039D  00                 	db	0
    80  00039E  00                 	db	0
    81  00039F  00                 	db	0
    82  0003A0  00                 	db	0
    83  0003A1  00                 	db	0
    84  0003A2  00                 	db	0
    85  0003A3  00                 	db	0
    86  0003A4  00                 	db	0
    87  0003A5  00                 	db	0
    88  0003A6  00                 	db	0
    89  0003A7  00                 	db	0
    90  0003A8  00                 	db	0
    91  0003A9  00                 	db	0
    92  0003AA  00                 	db	0
    93  0003AB  00                 	db	0
    94  0003AC  00                 	db	0
    95  0003AD  00                 	db	0
    96  0003AE  00                 	db	0
    97  0003AF  00                 	db	0
    98  0003B0  00                 	db	0
    99  0003B1  00                 	db	0
   100  0003B2  00                 	db	0
   101  0003B3  00                 	db	0
   102  0003B4  00                 	db	0
   103  0003B5  00                 	db	0
   104  0003B6  00                 	db	0
   105  0003B7  00                 	db	0
   106  0000                     _ANCON0	set	3933
   107  0000                     _BAUDCON2bits	set	4025
   108  0000                     _INTCON	set	4082
   109  0000                     _OSCCON	set	4051
   110  0000                     _OSCTUNEbits	set	3995
   111  0000                     _PIE3bits	set	4003
   112  0000                     _PIR3bits	set	4004
   113  0000                     _PORTA	set	3968
   114  0000                     _PORTAbits	set	3968
   115  0000                     _PORTB	set	3969
   116  0000                     _PORTC	set	3970
   117  0000                     _PORTCbits	set	3970
   118  0000                     _RCONbits	set	4048
   119  0000                     _RCREG2	set	3962
   120  0000                     _RCSTA2bits	set	4006
   121  0000                     _SPBRG	set	4015
   122  0000                     _SPBRG2	set	3963
   123  0000                     _SPBRGH2	set	3964
   124  0000                     _TRISA	set	3986
   125  0000                     _TRISB	set	3987
   126  0000                     _TRISC	set	3988
   127  0000                     _TXREG2	set	3961
   128  0000                     _TXSTA2bits	set	4026
   129  0000                     _ADON	set	32272
   130  0000                     _GIE	set	32663
   131  0000                     _PEIE	set	32662
   132  0000                     _PSA	set	32427
   133  0000                     _RC2IF	set	32037
   134  0000                     _T08BIT	set	32430
   135  0000                     _T0CS	set	32429
   136  0000                     _T0PS0	set	32424
   137  0000                     _T0PS1	set	32425
   138  0000                     _T0PS2	set	32426
   139  0000                     _TMR0IE	set	32661
   140  0000                     _TMR0IF	set	32658
   141                           
   142                           ; #config settings
   143  0000                     
   144                           	psect	cinit
   145  0003F8                     __pcinit:
   146                           	opt stack 0
   147  0003F8                     start_initialization:
   148                           	opt stack 0
   149  0003F8                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Clear objects allocated to BANK1 (80 bytes)
   153  0003F8  EE01  F000         	lfsr	0,__pbssBANK1
   154  0003FC  0E50               	movlw	80
   155  0003FE                     clear_0:
   156  0003FE  6AEE               	clrf	postinc0,c
   157  000400  06E8               	decf	wreg,f,c
   158  000402  E1FD               	bnz	clear_0
   159                           
   160                           ; Clear objects allocated to COMRAM (4 bytes)
   161  000404  6A28               	clrf	(__pbssCOMRAM+3)& (0+255),c
   162  000406  6A27               	clrf	(__pbssCOMRAM+2)& (0+255),c
   163  000408  6A26               	clrf	(__pbssCOMRAM+1)& (0+255),c
   164  00040A  6A25               	clrf	__pbssCOMRAM& (0+255),c
   165                           
   166                           ; Initialize objects allocated to BANK1 (80 bytes)
   167                           ; load TBLPTR registers with __pidataBANK1
   168  00040C  0E68               	movlw	low __pidataBANK1
   169  00040E  6EF6               	movwf	tblptrl,c
   170  000410  0E03               	movlw	high __pidataBANK1
   171  000412  6EF7               	movwf	tblptrh,c
   172  000414  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   173  000416  6EF8               	movwf	tblptru,c
   174  000418  EE01  F050         	lfsr	0,__pdataBANK1
   175  00041C  EE10 F050          	lfsr	1,80
   176  000420                     copy_data0:
   177  000420  0009               	tblrd		*+
   178  000422  CFF5 FFEE          	movff	tablat,postinc0
   179  000426  50E5               	movf	postdec1,w,c
   180  000428  50E1               	movf	fsr1l,w,c
   181  00042A  E1FA               	bnz	copy_data0
   182  00042C                     end_of_initialization:
   183                           	opt stack 0
   184  00042C                     __end_of__initialization:
   185                           	opt stack 0
   186  00042C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  00042E  6EF8               	movwf	tblptru,c
   188  000430  0100               	movlb	0
   189  000432  EFAA  F000         	goto	_main	;jump to C main() function
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	bssCOMRAM
   200  000025                     __pbssCOMRAM:
   201                           	opt stack 0
   202  000025                     _compteur:
   203                           	opt stack 0
   204  000025                     	ds	1
   205  000026                     _flag_reception:
   206                           	opt stack 0
   207  000026                     	ds	1
   208  000027                     _it:
   209                           	opt stack 0
   210  000027                     	ds	1
   211  000028                     _tampon:
   212                           	opt stack 0
   213  000028                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           postdec1	equ	0xFE5
   221                           fsr1l	equ	0xFE1
   222                           
   223                           	psect	bssBANK1
   224  000100                     __pbssBANK1:
   225                           	opt stack 0
   226  000100                     _msg:
   227                           	opt stack 0
   228  000100                     	ds	80
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           postdec1	equ	0xFE5
   236                           fsr1l	equ	0xFE1
   237                           
   238                           	psect	dataBANK1
   239  000150                     __pdataBANK1:
   240                           	opt stack 0
   241  000150                     main@F19160:
   242                           	opt stack 0
   243  000150                     	ds	80
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           postdec1	equ	0xFE5
   251                           fsr1l	equ	0xFE1
   252                           
   253                           	psect	cstackBANK0
   254  000060                     __pcstackBANK0:
   255                           	opt stack 0
   256  000060                     main@msg1:
   257                           	opt stack 0
   258                           
   259                           ; 80 bytes @ 0x0
   260  000060                     	ds	80
   261  0000B0                     main@i:
   262                           	opt stack 0
   263                           
   264                           ; 4 bytes @ 0x50
   265  0000B0                     	ds	4
   266  0000B4                     main@j:
   267                           	opt stack 0
   268                           
   269                           ; 4 bytes @ 0x54
   270  0000B4                     	ds	4
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           postinc0	equ	0xFEE
   276                           wreg	equ	0xFE8
   277                           postdec1	equ	0xFE5
   278                           fsr1l	equ	0xFE1
   279                           
   280                           	psect	cstackCOMRAM
   281  000001                     __pcstackCOMRAM:
   282                           	opt stack 0
   283  000001                     writeDataToUART@data:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x0
   287  000001                     	ds	1
   288  000002                     ??_low_isr:
   289                           
   290                           ; 0 bytes @ 0x1
   291  000002                     	ds	17
   292  000013                     ??_timer_isr:
   293                           
   294                           ; 0 bytes @ 0x12
   295  000013                     	ds	17
   296  000024                     multiplexeur@n:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x23
   300  000024                     	ds	1
   301  000025                     tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           ; 0 bytes @ 0x24
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 125 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  msg1           80    0[BANK0 ] unsigned char [80]
   321 ;;  j               4   84[BANK0 ] long 
   322 ;;  i               4   80[BANK0 ] long 
   323 ;; Return value:  Size  Location     Type
   324 ;;		None               void
   325 ;; Registers used:
   326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   333 ;;      Locals:         0      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   335 ;;      Totals:         0      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   336 ;;Total ram usage:       88 bytes
   337 ;; Hardware stack levels required when called:    3
   338 ;; This function calls:
   339 ;;		_initComms
   340 ;;		_initPorts
   341 ;;		_multiplexeur
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348  000154                     __ptext0:
   349                           	opt stack 0
   350  000154                     _main:
   351                           	opt stack 28
   352                           
   353                           ;main.c: 126: char msg1[80] = "MASTER IS READY \n \r";
   354                           
   355                           ;incstack = 0
   356  000154  EE21  F050         	lfsr	2,main@F19160
   357  000158  EE10  F060         	lfsr	1,main@msg1
   358  00015C  0E50               	movlw	80
   359  00015E                     u141:
   360  00015E  CFDE FFE6          	movff	postinc2,postinc1
   361  000162  2EE8               	decfsz	wreg,f,c
   362  000164  D7FC               	goto	u141
   363                           
   364                           ;main.c: 127: long i = 0;
   365  000166  0E00               	movlw	0
   366  000168  0100               	movlb	0	; () banked
   367  00016A  6FB0               	movwf	main@i& (0+255),b
   368  00016C  0E00               	movlw	0
   369  00016E  0100               	movlb	0	; () banked
   370  000170  6FB1               	movwf	(main@i+1)& (0+255),b
   371  000172  0E00               	movlw	0
   372  000174  0100               	movlb	0	; () banked
   373  000176  6FB2               	movwf	(main@i+2)& (0+255),b
   374  000178  0E00               	movlw	0
   375  00017A  0100               	movlb	0	; () banked
   376  00017C  6FB3               	movwf	(main@i+3)& (0+255),b
   377                           
   378                           ; BSR set to: 0
   379                           ;main.c: 128: long j = 0;
   380  00017E  0E00               	movlw	0
   381  000180  0100               	movlb	0	; () banked
   382  000182  6FB4               	movwf	main@j& (0+255),b
   383  000184  0E00               	movlw	0
   384  000186  0100               	movlb	0	; () banked
   385  000188  6FB5               	movwf	(main@j+1)& (0+255),b
   386  00018A  0E00               	movlw	0
   387  00018C  0100               	movlb	0	; () banked
   388  00018E  6FB6               	movwf	(main@j+2)& (0+255),b
   389  000190  0E00               	movlw	0
   390  000192  0100               	movlb	0	; () banked
   391  000194  6FB7               	movwf	(main@j+3)& (0+255),b
   392                           
   393                           ; BSR set to: 0
   394                           ;main.c: 130: initPorts();
   395  000196  EC1B  F002         	call	_initPorts	;wreg free
   396                           
   397                           ;main.c: 131: initComms();
   398  00019A  ECDC  F001         	call	_initComms	;wreg free
   399  00019E                     l852:
   400                           
   401                           ;main.c: 134: for (i = 0; i < 8; i++) {
   402  00019E  0E00               	movlw	0
   403  0001A0  0100               	movlb	0	; () banked
   404  0001A2  6FB0               	movwf	main@i& (0+255),b
   405  0001A4  0E00               	movlw	0
   406  0001A6  0100               	movlb	0	; () banked
   407  0001A8  6FB1               	movwf	(main@i+1)& (0+255),b
   408  0001AA  0E00               	movlw	0
   409  0001AC  0100               	movlb	0	; () banked
   410  0001AE  6FB2               	movwf	(main@i+2)& (0+255),b
   411  0001B0  0E00               	movlw	0
   412  0001B2  0100               	movlb	0	; () banked
   413  0001B4  6FB3               	movwf	(main@i+3)& (0+255),b
   414                           
   415                           ; BSR set to: 0
   416  0001B6  0100               	movlb	0	; () banked
   417  0001B8  51B3               	movf	(main@i+3)& (0+255),w,b
   418  0001BA  0A80               	xorlw	128
   419  0001BC  0F80               	addlw	128
   420  0001BE  E10B               	bnz	u155
   421  0001C0  0E00               	movlw	0
   422  0001C2  0100               	movlb	0	; () banked
   423  0001C4  5DB2               	subwf	(main@i+2)& (0+255),w,b
   424  0001C6  E107               	bnz	u155
   425  0001C8  0E00               	movlw	0
   426  0001CA  0100               	movlb	0	; () banked
   427  0001CC  5DB1               	subwf	(main@i+1)& (0+255),w,b
   428  0001CE  E103               	bnz	u155
   429  0001D0  0E08               	movlw	8
   430  0001D2  0100               	movlb	0	; () banked
   431  0001D4  5DB0               	subwf	main@i& (0+255),w,b
   432  0001D6                     u155:
   433  0001D6  B0D8               	btfsc	status,0,c
   434  0001D8  D7E2               	goto	l852
   435                           
   436                           ; BSR set to: 0
   437                           ;main.c: 135: multiplexeur(i);
   438                           
   439                           ; BSR set to: 0
   440                           
   441                           ; BSR set to: 0
   442  0001DA  0100               	movlb	0	; () banked
   443  0001DC  51B0               	movf	main@i& (0+255),w,b
   444  0001DE  EC80  F001         	call	_multiplexeur
   445                           
   446                           ;main.c: 136: PORTAbits.RA0 = 1;
   447  0001E2  8080               	bsf	3968,0,c	;volatile
   448                           
   449                           ;main.c: 137: for (j = 0; j < 100; j++) {
   450  0001E4  0E00               	movlw	0
   451  0001E6  0100               	movlb	0	; () banked
   452  0001E8  6FB4               	movwf	main@j& (0+255),b
   453  0001EA  0E00               	movlw	0
   454  0001EC  0100               	movlb	0	; () banked
   455  0001EE  6FB5               	movwf	(main@j+1)& (0+255),b
   456  0001F0  0E00               	movlw	0
   457  0001F2  0100               	movlb	0	; () banked
   458  0001F4  6FB6               	movwf	(main@j+2)& (0+255),b
   459  0001F6  0E00               	movlw	0
   460  0001F8  0100               	movlb	0	; () banked
   461  0001FA  6FB7               	movwf	(main@j+3)& (0+255),b
   462                           
   463                           ; BSR set to: 0
   464  0001FC  0100               	movlb	0	; () banked
   465  0001FE  51B7               	movf	(main@j+3)& (0+255),w,b
   466  000200  0A80               	xorlw	128
   467  000202  0F80               	addlw	128
   468  000204  E10B               	bnz	u165
   469  000206  0E00               	movlw	0
   470  000208  0100               	movlb	0	; () banked
   471  00020A  5DB6               	subwf	(main@j+2)& (0+255),w,b
   472  00020C  E107               	bnz	u165
   473  00020E  0E00               	movlw	0
   474  000210  0100               	movlb	0	; () banked
   475  000212  5DB5               	subwf	(main@j+1)& (0+255),w,b
   476  000214  E103               	bnz	u165
   477  000216  0E64               	movlw	100
   478  000218  0100               	movlb	0	; () banked
   479  00021A  5DB4               	subwf	main@j& (0+255),w,b
   480  00021C                     u165:
   481  00021C  B0D8               	btfsc	status,0,c
   482  00021E  D01B               	goto	l64
   483                           
   484                           ; BSR set to: 0
   485                           
   486                           ; BSR set to: 0
   487                           
   488                           ; BSR set to: 0
   489  000220  0E01               	movlw	1
   490  000222  0100               	movlb	0	; () banked
   491  000224  27B4               	addwf	main@j& (0+255),f,b
   492  000226  0E00               	movlw	0
   493  000228  0100               	movlb	0	; () banked
   494  00022A  23B5               	addwfc	(main@j+1)& (0+255),f,b
   495  00022C  0100               	movlb	0	; () banked
   496  00022E  23B6               	addwfc	(main@j+2)& (0+255),f,b
   497  000230  0100               	movlb	0	; () banked
   498  000232  23B7               	addwfc	(main@j+3)& (0+255),f,b
   499  000234  0100               	movlb	0	; () banked
   500  000236  51B7               	movf	(main@j+3)& (0+255),w,b
   501  000238  0A80               	xorlw	128
   502  00023A  0F80               	addlw	128
   503  00023C  E10B               	bnz	u175
   504  00023E  0E00               	movlw	0
   505  000240  0100               	movlb	0	; () banked
   506  000242  5DB6               	subwf	(main@j+2)& (0+255),w,b
   507  000244  E107               	bnz	u175
   508  000246  0E00               	movlw	0
   509  000248  0100               	movlb	0	; () banked
   510  00024A  5DB5               	subwf	(main@j+1)& (0+255),w,b
   511  00024C  E103               	bnz	u175
   512  00024E  0E64               	movlw	100
   513  000250  0100               	movlb	0	; () banked
   514  000252  5DB4               	subwf	main@j& (0+255),w,b
   515  000254                     u175:
   516  000254  D7E3               	goto	u165
   517  000256                     l64:
   518                           
   519                           ; BSR set to: 0
   520                           ;main.c: 138: }
   521                           ;main.c: 139: PORTAbits.RA0 = 0;
   522  000256  9080               	bcf	3968,0,c	;volatile
   523                           
   524                           ; BSR set to: 0
   525                           ;main.c: 140: for (j = 0; j < 10000; j++) {
   526  000258  0E00               	movlw	0
   527  00025A  0100               	movlb	0	; () banked
   528  00025C  6FB4               	movwf	main@j& (0+255),b
   529  00025E  0E00               	movlw	0
   530  000260  0100               	movlb	0	; () banked
   531  000262  6FB5               	movwf	(main@j+1)& (0+255),b
   532  000264  0E00               	movlw	0
   533  000266  0100               	movlb	0	; () banked
   534  000268  6FB6               	movwf	(main@j+2)& (0+255),b
   535  00026A  0E00               	movlw	0
   536  00026C  0100               	movlb	0	; () banked
   537  00026E  6FB7               	movwf	(main@j+3)& (0+255),b
   538                           
   539                           ; BSR set to: 0
   540  000270  0100               	movlb	0	; () banked
   541  000272  51B7               	movf	(main@j+3)& (0+255),w,b
   542  000274  0A80               	xorlw	128
   543  000276  0F80               	addlw	128
   544  000278  E10B               	bnz	u185
   545  00027A  0E00               	movlw	0
   546  00027C  0100               	movlb	0	; () banked
   547  00027E  5DB6               	subwf	(main@j+2)& (0+255),w,b
   548  000280  E107               	bnz	u185
   549  000282  0E27               	movlw	39
   550  000284  0100               	movlb	0	; () banked
   551  000286  5DB5               	subwf	(main@j+1)& (0+255),w,b
   552  000288  E103               	bnz	u185
   553  00028A  0E10               	movlw	16
   554  00028C  0100               	movlb	0	; () banked
   555  00028E  5DB4               	subwf	main@j& (0+255),w,b
   556  000290                     u185:
   557  000290  B0D8               	btfsc	status,0,c
   558  000292  D01B               	goto	l878
   559                           
   560                           ; BSR set to: 0
   561                           
   562                           ; BSR set to: 0
   563                           
   564                           ; BSR set to: 0
   565  000294  0E01               	movlw	1
   566  000296  0100               	movlb	0	; () banked
   567  000298  27B4               	addwf	main@j& (0+255),f,b
   568  00029A  0E00               	movlw	0
   569  00029C  0100               	movlb	0	; () banked
   570  00029E  23B5               	addwfc	(main@j+1)& (0+255),f,b
   571  0002A0  0100               	movlb	0	; () banked
   572  0002A2  23B6               	addwfc	(main@j+2)& (0+255),f,b
   573  0002A4  0100               	movlb	0	; () banked
   574  0002A6  23B7               	addwfc	(main@j+3)& (0+255),f,b
   575  0002A8  0100               	movlb	0	; () banked
   576  0002AA  51B7               	movf	(main@j+3)& (0+255),w,b
   577  0002AC  0A80               	xorlw	128
   578  0002AE  0F80               	addlw	128
   579  0002B0  E10B               	bnz	u195
   580  0002B2  0E00               	movlw	0
   581  0002B4  0100               	movlb	0	; () banked
   582  0002B6  5DB6               	subwf	(main@j+2)& (0+255),w,b
   583  0002B8  E107               	bnz	u195
   584  0002BA  0E27               	movlw	39
   585  0002BC  0100               	movlb	0	; () banked
   586  0002BE  5DB5               	subwf	(main@j+1)& (0+255),w,b
   587  0002C0  E103               	bnz	u195
   588  0002C2  0E10               	movlw	16
   589  0002C4  0100               	movlb	0	; () banked
   590  0002C6  5DB4               	subwf	main@j& (0+255),w,b
   591  0002C8                     u195:
   592  0002C8  D7E3               	goto	u185
   593  0002CA                     l878:
   594                           
   595                           ; BSR set to: 0
   596  0002CA  0E01               	movlw	1
   597  0002CC  0100               	movlb	0	; () banked
   598  0002CE  27B0               	addwf	main@i& (0+255),f,b
   599  0002D0  0E00               	movlw	0
   600  0002D2  0100               	movlb	0	; () banked
   601  0002D4  23B1               	addwfc	(main@i+1)& (0+255),f,b
   602  0002D6  0100               	movlb	0	; () banked
   603  0002D8  23B2               	addwfc	(main@i+2)& (0+255),f,b
   604  0002DA  0100               	movlb	0	; () banked
   605  0002DC  23B3               	addwfc	(main@i+3)& (0+255),f,b
   606  0002DE  0100               	movlb	0	; () banked
   607  0002E0  51B3               	movf	(main@i+3)& (0+255),w,b
   608  0002E2  0A80               	xorlw	128
   609  0002E4  0F80               	addlw	128
   610  0002E6  E10B               	bnz	u205
   611  0002E8  0E00               	movlw	0
   612  0002EA  0100               	movlb	0	; () banked
   613  0002EC  5DB2               	subwf	(main@i+2)& (0+255),w,b
   614  0002EE  E107               	bnz	u205
   615  0002F0  0E00               	movlw	0
   616  0002F2  0100               	movlb	0	; () banked
   617  0002F4  5DB1               	subwf	(main@i+1)& (0+255),w,b
   618  0002F6  E103               	bnz	u205
   619  0002F8  0E08               	movlw	8
   620  0002FA  0100               	movlb	0	; () banked
   621  0002FC  5DB0               	subwf	main@i& (0+255),w,b
   622  0002FE                     u205:
   623  0002FE  D76B               	goto	u155
   624  000300                     __end_of_main:
   625                           	opt stack 0
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postinc1	equ	0xFE6
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           postinc2	equ	0xFDE
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _multiplexeur *****************
   639 ;; Defined at:
   640 ;;		line 149 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  n               1    wreg     unsigned char 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  n               1   35[COMRAM] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;		None               void
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   658 ;;Total ram usage:        1 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    2
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text1
   669  000300                     __ptext1:
   670                           	opt stack 0
   671  000300                     _multiplexeur:
   672                           	opt stack 28
   673                           
   674                           ; BSR set to: 0
   675                           ;incstack = 0
   676                           ;multiplexeur@n stored from wreg
   677  000300  6E24               	movwf	multiplexeur@n,c
   678                           
   679                           ;main.c: 150: PORTCbits.RC7 = 0;
   680  000302  9E82               	bcf	3970,7,c	;volatile
   681                           
   682                           ;main.c: 151: PORTCbits.RC6 = 0;
   683  000304  9C82               	bcf	3970,6,c	;volatile
   684                           
   685                           ;main.c: 152: PORTCbits.RC5 = 0;
   686  000306  9A82               	bcf	3970,5,c	;volatile
   687                           
   688                           ;main.c: 153: PORTCbits.RC4 = 0;
   689  000308  9882               	bcf	3970,4,c	;volatile
   690                           
   691                           ;main.c: 154: PORTCbits.RC0 = 0;
   692  00030A  9082               	bcf	3970,0,c	;volatile
   693                           
   694                           ;main.c: 155: PORTCbits.RC1 = 0;
   695  00030C  9282               	bcf	3970,1,c	;volatile
   696                           
   697                           ;main.c: 156: PORTCbits.RC2 = 0;
   698  00030E  9482               	bcf	3970,2,c	;volatile
   699                           
   700                           ;main.c: 157: PORTCbits.RC3 = 0;
   701  000310  9682               	bcf	3970,3,c	;volatile
   702                           
   703                           ;main.c: 159: switch (n) {
   704  000312  D010               	goto	l840
   705  000314                     l73:
   706                           
   707                           ;main.c: 161: PORTCbits.RC7 = 1;
   708  000314  8E82               	bsf	3970,7,c	;volatile
   709                           
   710                           ;main.c: 162: break;
   711  000316  0012               	return	
   712  000318                     l75:
   713                           
   714                           ;main.c: 165: PORTCbits.RC6 = 1;
   715  000318  8C82               	bsf	3970,6,c	;volatile
   716                           
   717                           ;main.c: 166: break;
   718  00031A  0012               	return	
   719  00031C                     l76:
   720                           
   721                           ;main.c: 169: PORTCbits.RC5 = 1;
   722  00031C  8A82               	bsf	3970,5,c	;volatile
   723                           
   724                           ;main.c: 170: break;
   725  00031E  0012               	return	
   726  000320                     l77:
   727                           
   728                           ;main.c: 173: PORTCbits.RC4 = 1;
   729  000320  8882               	bsf	3970,4,c	;volatile
   730                           
   731                           ;main.c: 174: break;
   732  000322  0012               	return	
   733  000324                     l78:
   734                           
   735                           ;main.c: 177: PORTCbits.RC0 = 1;
   736  000324  8082               	bsf	3970,0,c	;volatile
   737                           
   738                           ;main.c: 178: break;
   739  000326  0012               	return	
   740  000328                     l79:
   741                           
   742                           ;main.c: 181: PORTCbits.RC1 = 1;
   743  000328  8282               	bsf	3970,1,c	;volatile
   744                           
   745                           ;main.c: 182: break;
   746  00032A  0012               	return	
   747  00032C                     l80:
   748                           
   749                           ;main.c: 185: PORTCbits.RC2 = 1;
   750  00032C  8482               	bsf	3970,2,c	;volatile
   751                           
   752                           ;main.c: 186: break;
   753  00032E  0012               	return	
   754  000330                     l81:
   755                           
   756                           ;main.c: 189: PORTCbits.RC3 = 1;
   757  000330  8682               	bsf	3970,3,c	;volatile
   758                           
   759                           ;main.c: 190: break;
   760  000332  0012               	return	
   761  000334                     l840:
   762  000334  5024               	movf	multiplexeur@n,w,c
   763                           
   764                           ; Switch size 1, requested type "space"
   765                           ; Number of cases is 8, Range of values is 0 to 7
   766                           ; switch strategies available:
   767                           ; Name         Instructions Cycles
   768                           ; simple_byte           25    13 (average)
   769                           ;	Chosen strategy is simple_byte
   770  000336  0A00               	xorlw	0	; case 0
   771  000338  B4D8               	btfsc	status,2,c
   772  00033A  D7EC               	goto	l73
   773  00033C  0A01               	xorlw	1	; case 1
   774  00033E  B4D8               	btfsc	status,2,c
   775  000340  D7EB               	goto	l75
   776  000342  0A03               	xorlw	3	; case 2
   777  000344  B4D8               	btfsc	status,2,c
   778  000346  D7EA               	goto	l76
   779  000348  0A01               	xorlw	1	; case 3
   780  00034A  B4D8               	btfsc	status,2,c
   781  00034C  D7E9               	goto	l77
   782  00034E  0A07               	xorlw	7	; case 4
   783  000350  B4D8               	btfsc	status,2,c
   784  000352  D7E8               	goto	l78
   785  000354  0A01               	xorlw	1	; case 5
   786  000356  B4D8               	btfsc	status,2,c
   787  000358  D7E7               	goto	l79
   788  00035A  0A03               	xorlw	3	; case 6
   789  00035C  B4D8               	btfsc	status,2,c
   790  00035E  D7E6               	goto	l80
   791  000360  0A01               	xorlw	1	; case 7
   792  000362  A4D8               	btfss	status,2,c
   793  000364  0012               	return	
   794  000366  D7E4               	goto	l81
   795  000368                     __end_of_multiplexeur:
   796                           	opt stack 0
   797                           tblptru	equ	0xFF8
   798                           tblptrh	equ	0xFF7
   799                           tblptrl	equ	0xFF6
   800                           tablat	equ	0xFF5
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           postinc1	equ	0xFE6
   804                           postdec1	equ	0xFE5
   805                           fsr1l	equ	0xFE1
   806                           postinc2	equ	0xFDE
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function _initPorts *****************
   810 ;; Defined at:
   811 ;;		line 7 in file "port.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;		None               void
   818 ;; Registers used:
   819 ;;		wreg, status,2
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    2
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text2
   840  000436                     __ptext2:
   841                           	opt stack 0
   842  000436                     _initPorts:
   843                           	opt stack 28
   844                           
   845                           ;port.c: 12: OSCCON = 0x70;
   846                           
   847                           ;incstack = 0
   848  000436  0E70               	movlw	112
   849  000438  6ED3               	movwf	4051,c	;volatile
   850                           
   851                           ;port.c: 14: ANCON0 = 0b00000000;
   852  00043A  0E00               	movlw	0
   853  00043C  010F               	movlb	15	; () banked
   854  00043E  6F5D               	movwf	93,b	;volatile
   855                           
   856                           ; BSR set to: 15
   857                           ;port.c: 17: ADON = 0;
   858  000440  90C2               	bcf	4034,0,c	;volatile
   859                           
   860                           ;port.c: 20: PORTA = 0b00000000;
   861  000442  0E00               	movlw	0
   862  000444  6E80               	movwf	3968,c	;volatile
   863                           
   864                           ;port.c: 21: TRISA = 0b00000000;
   865  000446  0E00               	movlw	0
   866  000448  6E92               	movwf	3986,c	;volatile
   867                           
   868                           ;port.c: 23: PORTB = 0b01000000;
   869  00044A  0E40               	movlw	64
   870  00044C  6E81               	movwf	3969,c	;volatile
   871                           
   872                           ;port.c: 24: TRISB = 0b10000000;
   873  00044E  0E80               	movlw	128
   874  000450  6E93               	movwf	3987,c	;volatile
   875                           
   876                           ;port.c: 26: PORTC = 0b00000000;
   877  000452  0E00               	movlw	0
   878  000454  6E82               	movwf	3970,c	;volatile
   879                           
   880                           ;port.c: 27: TRISC = 0b00000000;
   881  000456  0E00               	movlw	0
   882  000458  6E94               	movwf	3988,c	;volatile
   883                           
   884                           ; BSR set to: 15
   885                           ;port.c: 30: GIE = 1;
   886  00045A  8EF2               	bsf	intcon,7,c	;volatile
   887                           
   888                           ; BSR set to: 15
   889                           ;port.c: 31: PEIE = 1;
   890  00045C  8CF2               	bsf	intcon,6,c	;volatile
   891                           
   892                           ;port.c: 32: INTCON =0b11000000;
   893  00045E  0EC0               	movlw	192
   894  000460  6EF2               	movwf	intcon,c	;volatile
   895                           
   896                           ; BSR set to: 15
   897                           ;port.c: 34: OSCTUNEbits.PLLEN = 1;
   898  000462  8C9B               	bsf	3995,6,c	;volatile
   899                           
   900                           ; BSR set to: 15
   901  000464  0012               	return	
   902  000466                     __end_of_initPorts:
   903                           	opt stack 0
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           intcon	equ	0xFF2
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           postinc1	equ	0xFE6
   912                           postdec1	equ	0xFE5
   913                           fsr1l	equ	0xFE1
   914                           postinc2	equ	0xFDE
   915                           status	equ	0xFD8
   916                           
   917 ;; *************** function _initComms *****************
   918 ;; Defined at:
   919 ;;		line 6 in file "usart.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, status,2
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    2
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text3
   948  0003B8                     __ptext3:
   949                           	opt stack 0
   950  0003B8                     _initComms:
   951                           	opt stack 28
   952                           
   953                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
   954                           
   955                           ; BSR set to: 15
   956                           ;incstack = 0
   957  0003B8  9EBA               	bcf	4026,7,c	;volatile
   958                           
   959                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
   960  0003BA  9CBA               	bcf	4026,6,c	;volatile
   961                           
   962                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
   963  0003BC  8ABA               	bsf	4026,5,c	;volatile
   964                           
   965                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
   966  0003BE  98BA               	bcf	4026,4,c	;volatile
   967                           
   968                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
   969  0003C0  96BA               	bcf	4026,3,c	;volatile
   970                           
   971                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
   972  0003C2  84BA               	bsf	4026,2,c	;volatile
   973                           
   974                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
   975  0003C4  82BA               	bsf	4026,1,c	;volatile
   976                           
   977                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
   978  0003C6  90BA               	bcf	4026,0,c	;volatile
   979                           
   980                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
   981  0003C8  8EA6               	bsf	4006,7,c	;volatile
   982                           
   983                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
   984  0003CA  9CA6               	bcf	4006,6,c	;volatile
   985                           
   986                           ;usart.c: 19: RCSTA2bits.SREN = 0;
   987  0003CC  9AA6               	bcf	4006,5,c	;volatile
   988                           
   989                           ;usart.c: 20: RCSTA2bits.CREN = 1;
   990  0003CE  88A6               	bsf	4006,4,c	;volatile
   991                           
   992                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
   993  0003D0  96A6               	bcf	4006,3,c	;volatile
   994                           
   995                           ;usart.c: 22: RCSTA2bits.FERR = 0;
   996  0003D2  94A6               	bcf	4006,2,c	;volatile
   997                           
   998                           ;usart.c: 23: RCSTA2bits.OERR = 0;
   999  0003D4  92A6               	bcf	4006,1,c	;volatile
  1000                           
  1001                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
  1002  0003D6  90A6               	bcf	4006,0,c	;volatile
  1003                           
  1004                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
  1005  0003D8  9EB9               	bcf	4025,7,c	;volatile
  1006                           
  1007                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
  1008  0003DA  8CB9               	bsf	4025,6,c	;volatile
  1009                           
  1010                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
  1011  0003DC  9AB9               	bcf	4025,5,c	;volatile
  1012                           
  1013                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
  1014  0003DE  98B9               	bcf	4025,4,c	;volatile
  1015                           
  1016                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
  1017  0003E0  86B9               	bsf	4025,3,c	;volatile
  1018                           
  1019                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
  1020  0003E2  92B9               	bcf	4025,1,c	;volatile
  1021                           
  1022                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
  1023  0003E4  90B9               	bcf	4025,0,c	;volatile
  1024                           
  1025                           ;usart.c: 36: PIE3bits.RC2IE = 1;
  1026  0003E6  8AA3               	bsf	4003,5,c	;volatile
  1027                           
  1028                           ;usart.c: 37: RCONbits.IPEN = 1;
  1029  0003E8  8ED0               	bsf	4048,7,c	;volatile
  1030                           
  1031                           ;usart.c: 48: SPBRG = 115;
  1032  0003EA  0E73               	movlw	115
  1033  0003EC  6EAF               	movwf	4015,c	;volatile
  1034                           
  1035                           ;usart.c: 49: SPBRGH2 = 0;
  1036  0003EE  0E00               	movlw	0
  1037  0003F0  6E7C               	movwf	3964,c	;volatile
  1038                           
  1039                           ;usart.c: 50: SPBRG2 = 137;
  1040  0003F2  0E89               	movlw	137
  1041  0003F4  6E7B               	movwf	3963,c	;volatile
  1042  0003F6  0012               	return	
  1043  0003F8                     __end_of_initComms:
  1044                           	opt stack 0
  1045                           tblptru	equ	0xFF8
  1046                           tblptrh	equ	0xFF7
  1047                           tblptrl	equ	0xFF6
  1048                           tablat	equ	0xFF5
  1049                           intcon	equ	0xFF2
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postinc1	equ	0xFE6
  1053                           postdec1	equ	0xFE5
  1054                           fsr1l	equ	0xFE1
  1055                           postinc2	equ	0xFDE
  1056                           status	equ	0xFD8
  1057                           
  1058 ;; *************** function _low_isr *****************
  1059 ;; Defined at:
  1060 ;;		line 99 in file "main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;		None               void
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1076 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1077 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1078 ;;Total ram usage:       17 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    1
  1081 ;; This function calls:
  1082 ;;		_writeDataToUART
  1083 ;; This function is called by:
  1084 ;;		Interrupt level 1
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088 ;; *************** function _timer_isr *****************
  1089 ;; Defined at:
  1090 ;;		line 113 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;		None               void
  1097 ;; Registers used:
  1098 ;;		None
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1108 ;;Total ram usage:       17 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		Interrupt level 1
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	intcodelo
  1118  000018                     __pintcodelo:
  1119                           	opt stack 0
  1120  000018                     _low_isr:
  1121                           	opt stack 28
  1122                           
  1123                           ;incstack = 0
  1124  000018  CFD8 F002          	movff	status,??_low_isr
  1125  00001C  CFE8 F003          	movff	wreg,??_low_isr+1
  1126  000020  CFE0 F004          	movff	bsr,??_low_isr+2
  1127  000024  CFFA F005          	movff	pclath,??_low_isr+3
  1128  000028  CFFB F006          	movff	pclatu,??_low_isr+4
  1129  00002C  CFE9 F007          	movff	fsr0l,??_low_isr+5
  1130  000030  CFEA F008          	movff	fsr0h,??_low_isr+6
  1131  000034  CFE1 F009          	movff	fsr1l,??_low_isr+7
  1132  000038  CFE2 F00A          	movff	fsr1h,??_low_isr+8
  1133  00003C  CFD9 F00B          	movff	fsr2l,??_low_isr+9
  1134  000040  CFDA F00C          	movff	fsr2h,??_low_isr+10
  1135  000044  CFF3 F00D          	movff	prodl,??_low_isr+11
  1136  000048  CFF4 F00E          	movff	prodh,??_low_isr+12
  1137  00004C  CFF6 F00F          	movff	tblptrl,??_low_isr+13
  1138  000050  CFF7 F010          	movff	tblptrh,??_low_isr+14
  1139  000054  CFF8 F011          	movff	tblptru,??_low_isr+15
  1140  000058  CFF5 F012          	movff	tablat,??_low_isr+16
  1141                           
  1142                           ;main.c: 101: if (RC2IF ) {
  1143  00005C  AAA4               	btfss	4004,5,c	;volatile
  1144  00005E  D00C               	goto	i1l768
  1145                           
  1146                           ;main.c: 102: tampon = RCREG2;
  1147  000060  CF7A F028          	movff	3962,_tampon	;volatile
  1148                           
  1149                           ;main.c: 103: if (compteur == 128) {
  1150  000064  5025               	movf	_compteur,w,c
  1151  000066  0A80               	xorlw	128
  1152  000068  A4D8               	btfss	status,2,c
  1153  00006A  D002               	goto	i1l764
  1154                           
  1155                           ;main.c: 104: compteur = 0;
  1156  00006C  0E00               	movlw	0
  1157  00006E  6E25               	movwf	_compteur,c
  1158  000070                     i1l764:
  1159                           
  1160                           ;main.c: 105: }
  1161                           ;main.c: 106: writeDataToUART(tampon);
  1162  000070  5028               	movf	_tampon,w,c
  1163  000072  EC33  F002         	call	_writeDataToUART
  1164                           
  1165                           ;main.c: 107: compteur++;
  1166  000076  2A25               	incf	_compteur,f,c
  1167  000078                     i1l768:
  1168                           
  1169                           ;main.c: 108: }
  1170                           ;main.c: 109: RC2IF = 0;
  1171  000078  9AA4               	bcf	4004,5,c	;volatile
  1172  00007A  C012  FFF5         	movff	??_low_isr+16,tablat
  1173  00007E  C011  FFF8         	movff	??_low_isr+15,tblptru
  1174  000082  C010  FFF7         	movff	??_low_isr+14,tblptrh
  1175  000086  C00F  FFF6         	movff	??_low_isr+13,tblptrl
  1176  00008A  C00E  FFF4         	movff	??_low_isr+12,prodh
  1177  00008E  C00D  FFF3         	movff	??_low_isr+11,prodl
  1178  000092  C00C  FFDA         	movff	??_low_isr+10,fsr2h
  1179  000096  C00B  FFD9         	movff	??_low_isr+9,fsr2l
  1180  00009A  C00A  FFE2         	movff	??_low_isr+8,fsr1h
  1181  00009E  C009  FFE1         	movff	??_low_isr+7,fsr1l
  1182  0000A2  C008  FFEA         	movff	??_low_isr+6,fsr0h
  1183  0000A6  C007  FFE9         	movff	??_low_isr+5,fsr0l
  1184  0000AA  C006  FFFB         	movff	??_low_isr+4,pclatu
  1185  0000AE  C005  FFFA         	movff	??_low_isr+3,pclath
  1186  0000B2  C004  FFE0         	movff	??_low_isr+2,bsr
  1187  0000B6  C003  FFE8         	movff	??_low_isr+1,wreg
  1188  0000BA  C002  FFD8         	movff	??_low_isr,status
  1189  0000BE  0010               	retfie	
  1190  0000C0                     __end_of_low_isr:
  1191                           	opt stack 0
  1192  0000C0                     _timer_isr:
  1193                           	opt stack 29
  1194                           
  1195                           ;incstack = 0
  1196  0000C0  CFD8 F013          	movff	status,??_timer_isr
  1197  0000C4  CFE8 F014          	movff	wreg,??_timer_isr+1
  1198  0000C8  CFE0 F015          	movff	bsr,??_timer_isr+2
  1199  0000CC  CFFA F016          	movff	pclath,??_timer_isr+3
  1200  0000D0  CFFB F017          	movff	pclatu,??_timer_isr+4
  1201  0000D4  CFE9 F018          	movff	fsr0l,??_timer_isr+5
  1202  0000D8  CFEA F019          	movff	fsr0h,??_timer_isr+6
  1203  0000DC  CFE1 F01A          	movff	fsr1l,??_timer_isr+7
  1204  0000E0  CFE2 F01B          	movff	fsr1h,??_timer_isr+8
  1205  0000E4  CFD9 F01C          	movff	fsr2l,??_timer_isr+9
  1206  0000E8  CFDA F01D          	movff	fsr2h,??_timer_isr+10
  1207  0000EC  CFF3 F01E          	movff	prodl,??_timer_isr+11
  1208  0000F0  CFF4 F01F          	movff	prodh,??_timer_isr+12
  1209  0000F4  CFF6 F020          	movff	tblptrl,??_timer_isr+13
  1210  0000F8  CFF7 F021          	movff	tblptrh,??_timer_isr+14
  1211  0000FC  CFF8 F022          	movff	tblptru,??_timer_isr+15
  1212  000100  CFF5 F023          	movff	tablat,??_timer_isr+16
  1213                           
  1214                           ;main.c: 115: if (TMR0IE && TMR0IF) {
  1215  000104  BAF2               	btfsc	intcon,5,c	;volatile
  1216  000106  D000               	goto	i1l54
  1217  000108                     i1l54:
  1218                           
  1219                           ;main.c: 117: }
  1220                           ;main.c: 118: TMR0IF = 0;
  1221  000108  94F2               	bcf	intcon,2,c	;volatile
  1222  00010A  C023  FFF5         	movff	??_timer_isr+16,tablat
  1223  00010E  C022  FFF8         	movff	??_timer_isr+15,tblptru
  1224  000112  C021  FFF7         	movff	??_timer_isr+14,tblptrh
  1225  000116  C020  FFF6         	movff	??_timer_isr+13,tblptrl
  1226  00011A  C01F  FFF4         	movff	??_timer_isr+12,prodh
  1227  00011E  C01E  FFF3         	movff	??_timer_isr+11,prodl
  1228  000122  C01D  FFDA         	movff	??_timer_isr+10,fsr2h
  1229  000126  C01C  FFD9         	movff	??_timer_isr+9,fsr2l
  1230  00012A  C01B  FFE2         	movff	??_timer_isr+8,fsr1h
  1231  00012E  C01A  FFE1         	movff	??_timer_isr+7,fsr1l
  1232  000132  C019  FFEA         	movff	??_timer_isr+6,fsr0h
  1233  000136  C018  FFE9         	movff	??_timer_isr+5,fsr0l
  1234  00013A  C017  FFFB         	movff	??_timer_isr+4,pclatu
  1235  00013E  C016  FFFA         	movff	??_timer_isr+3,pclath
  1236  000142  C015  FFE0         	movff	??_timer_isr+2,bsr
  1237  000146  C014  FFE8         	movff	??_timer_isr+1,wreg
  1238  00014A  C013  FFD8         	movff	??_timer_isr,status
  1239  00014E  0010               	retfie	
  1240  000150                     __end_of_timer_isr:
  1241                           	opt stack 0
  1242  0000                     pclatu	equ	0xFFB
  1243                           pclath	equ	0xFFA
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           prodh	equ	0xFF4
  1249                           prodl	equ	0xFF3
  1250                           intcon	equ	0xFF2
  1251                           postinc0	equ	0xFEE
  1252                           fsr0h	equ	0xFEA
  1253                           fsr0l	equ	0xFE9
  1254                           wreg	equ	0xFE8
  1255                           postinc1	equ	0xFE6
  1256                           postdec1	equ	0xFE5
  1257                           fsr1h	equ	0xFE2
  1258                           fsr1l	equ	0xFE1
  1259                           bsr	equ	0xFE0
  1260                           postinc2	equ	0xFDE
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _writeDataToUART *****************
  1266 ;; Defined at:
  1267 ;;		line 62 in file "usart.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  data            1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  data            1    0[COMRAM] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		wreg
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_low_isr
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text5
  1295  000466                     __ptext5:
  1296                           	opt stack 0
  1297  000466                     _writeDataToUART:
  1298                           	opt stack 28
  1299                           
  1300                           ;incstack = 0
  1301                           ;writeDataToUART@data stored from wreg
  1302  000466  6E01               	movwf	writeDataToUART@data,c
  1303  000468                     i1l122:
  1304  000468  A8A4               	btfss	4004,4,c	;volatile
  1305  00046A  D7FE               	goto	i1l122
  1306                           
  1307                           ;usart.c: 65: TXREG2 = data;
  1308  00046C  C001  FF79         	movff	writeDataToUART@data,3961	;volatile
  1309  000470  0012               	return	
  1310  000472                     __end_of_writeDataToUART:
  1311                           	opt stack 0
  1312                           pclatu	equ	0xFFB
  1313                           pclath	equ	0xFFA
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           prodh	equ	0xFF4
  1319                           prodl	equ	0xFF3
  1320                           intcon	equ	0xFF2
  1321                           postinc0	equ	0xFEE
  1322                           fsr0h	equ	0xFEA
  1323                           fsr0l	equ	0xFE9
  1324                           wreg	equ	0xFE8
  1325                           postinc1	equ	0xFE6
  1326                           postdec1	equ	0xFE5
  1327                           fsr1h	equ	0xFE2
  1328                           fsr1l	equ	0xFE1
  1329                           bsr	equ	0xFE0
  1330                           postinc2	equ	0xFDE
  1331                           fsr2h	equ	0xFDA
  1332                           fsr2l	equ	0xFD9
  1333                           status	equ	0xFD8
  1334                           pclatu	equ	0xFFB
  1335                           pclath	equ	0xFFA
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           prodh	equ	0xFF4
  1341                           prodl	equ	0xFF3
  1342                           intcon	equ	0xFF2
  1343                           postinc0	equ	0xFEE
  1344                           fsr0h	equ	0xFEA
  1345                           fsr0l	equ	0xFE9
  1346                           wreg	equ	0xFE8
  1347                           postinc1	equ	0xFE6
  1348                           postdec1	equ	0xFE5
  1349                           fsr1h	equ	0xFE2
  1350                           fsr1l	equ	0xFE1
  1351                           bsr	equ	0xFE0
  1352                           postinc2	equ	0xFDE
  1353                           fsr2h	equ	0xFDA
  1354                           fsr2l	equ	0xFD9
  1355                           status	equ	0xFD8
  1356                           
  1357                           	psect	rparam
  1358  0000                     pclatu	equ	0xFFB
  1359                           pclath	equ	0xFFA
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           prodh	equ	0xFF4
  1365                           prodl	equ	0xFF3
  1366                           intcon	equ	0xFF2
  1367                           postinc0	equ	0xFEE
  1368                           fsr0h	equ	0xFEA
  1369                           fsr0l	equ	0xFE9
  1370                           wreg	equ	0xFE8
  1371                           postinc1	equ	0xFE6
  1372                           postdec1	equ	0xFE5
  1373                           fsr1h	equ	0xFE2
  1374                           fsr1l	equ	0xFE1
  1375                           bsr	equ	0xFE0
  1376                           postinc2	equ	0xFDE
  1377                           fsr2h	equ	0xFDA
  1378                           fsr2l	equ	0xFD9
  1379                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        80
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      40
    BANK0           160     88      88
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_multiplexeur

Critical Paths under _low_isr in COMRAM

    _low_isr->_writeDataToUART

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                88    88      0     185
                                              0 BANK0     88    88      0
                          _initComms
                          _initPorts
                       _multiplexeur
 ---------------------------------------------------------------------------------
 (1) _multiplexeur                                         1     1      0      22
                                             35 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0      15
                                              1 COMRAM    17    17      0
                    _writeDataToUART
 ---------------------------------------------------------------------------------
 (3) _writeDataToUART                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             18 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initComms
   _initPorts
   _multiplexeur

 _low_isr (ROOT)
   _writeDataToUART

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      58       5       55.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      28       1       42.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120       6        0.0%
DATA                 0      0     120       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Nov 15 17:16:46 2014

             __CFG_CP0$ON 000000               __CFG_CP1$ON 000000               __CFG_CP2$ON 000000  
             __CFG_CP3$ON 000000                        l80 032C                        l64 0256  
                      l81 0330                        l73 0314                        l75 0318  
                      l76 031C                        l77 0320                        l78 0324  
                      l79 0328               __CFG_CPB$ON 000000               __CFG_CPD$ON 000000  
                      _it 0027                        bsr 000FE0               __CFG_BORV$3 000000  
                     l840 0334                       l852 019E                       l878 02CA  
                     _GIE 007F97                       u205 02FE                       u141 015E  
                     u155 01D6                       u165 021C                       u175 0254  
                     u185 0290                       u195 02C8                       _PSA 007EAB  
                     _msg 0100                       wreg 000FE8              __CFG_IESO$ON 000000  
              _TXSTA2bits 000FBA                      _ADON 007E10                      _T0CS 007EAD  
                    _PEIE 007F96                      i1l54 0108              __CFG_WRT0$ON 000000  
            __CFG_WRT1$ON 000000              __CFG_WRT2$ON 000000              __CFG_WRT3$ON 000000  
           __CFG_EBTR0$ON 000000             __CFG_EBTR1$ON 000000             __CFG_EBTR2$ON 000000  
           __CFG_EBTR3$ON 000000              __CFG_WRTB$ON 000000              __CFG_WRTC$ON 000000  
            __CFG_WRTD$ON 000000             __CFG_EBTRB$ON 000000                      _main 0154  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr0l 000FE9  
                    fsr2h 000FDA                      fsr1l 000FE1                      fsr2l 000FD9  
                    pclat 000FFA                      prodh 000FF4                      prodl 000FF3  
                    start 0150         ??_writeDataToUART 0001             __CFG_RETEN$ON 000000  
            _BAUDCON2bits 000FB9                     ?_main 0001                     _T0PS0 007EA8  
                   _T0PS1 007EA9                     _T0PS2 007EAA                     _RC2IF 007D25  
                   i1l122 0468                     i1l764 0070                     i1l768 0078  
                   _SPBRG 000FAF                     _PORTA 000F80                     _PORTB 000F81  
                   _PORTC 000F82                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISC 000F94            __CFG_FCMEN$OFF 000000                     main@i 00B0  
                   main@j 00B4           __end_of_low_isr 00C0                     tablat 000FF5  
                   status 000FD8             multiplexeur@n 0024            __CFG_MCLRE$OFF 000000  
         __initialization 03F8              __end_of_main 0300                    ??_main 0025  
           __activetblptr 000002            __CFG_PLLCFG$ON 000000                    _ANCON0 000F5D  
                  _T08BIT 007EAE           __CFG_BBSIZ$BB2K 000000            __CFG_WDTEN$OFF 000000  
                  _INTCON 000FF2                    _RCREG2 000F7A                    _OSCCON 000FD3  
                  _TMR0IE 007F95                    _TMR0IF 007F92                    _SPBRG2 000F7B  
                  _TXREG2 000F79            __CFG_PWRTEN$ON 000000            __CFG_XINST$OFF 000000  
          __CFG_STVREN$ON 000000                    clear_0 03FE                    _tampon 0028  
               ??_low_isr 0002                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 042C  
          __pcstackCOMRAM 0001              __pidataBANK1 0368           _writeDataToUART 0466  
              __pbssBANK1 0100        __size_of_initComms 0040        __size_of_initPorts 0030  
        __CFG_CANMX$PORTB 000000        __size_of_timer_isr 0090                   _SPBRGH2 000F7C  
                 __Hparam 0000                   __Lparam 0000                   __pcinit 03F8  
                 __ramtop 0F00                   __ptext0 0154                   __ptext1 0300  
                 __ptext2 0436                   __ptext3 03B8                   __ptext5 0466  
 __end_of_writeDataToUART 0472         __end_of_initComms 03F8         __end_of_initPorts 0466  
       __CFG_MSSPMSK$MSK7 000000                   _low_isr 0018      end_of_initialization 042C  
           __Lmediumconst 0000         __end_of_timer_isr 0150                   postdec1 000FE5  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
              main@F19160 0150                 _PORTAbits 000F80                 _PORTCbits 000F82  
        __CFG_FOSC$INTIO1 000000             ?_multiplexeur 0001          ?_writeDataToUART 0001  
          ??_multiplexeur 0024       start_initialization 03F8            _flag_reception 0026  
             __pdataBANK1 0150               __pbssCOMRAM 0025             __pcstackBANK0 0060  
             __pintcodelo 0018                  ?_low_isr 0001                 _initComms 03B8  
               _initPorts 0436                  _PIE3bits 000FA3      __end_of_multiplexeur 0368  
                _PIR3bits 000FA4                  _RCONbits 000FD0                 _timer_isr 00C0  
        __CFG_SOSCSEL$DIG 000000                ?_initComms 0001                ?_initPorts 0001  
               copy_data0 0420                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000                ?_timer_isr 0001          __size_of_low_isr 00A8  
                _compteur 0025             __size_of_main 01AC                  main@msg1 0060  
     __CFG_INTOSCSEL$HIGH 000000               _OSCTUNEbits 000F9B               ??_initComms 0024  
             ??_initPorts 0024  __size_of_writeDataToUART 000C                  intlevel1 0000  
   __size_of_multiplexeur 0068                _RCSTA2bits 000FA6        __CFG_WDTPS$1048576 000000  
             ??_timer_isr 0013              _multiplexeur 0300       __CFG_BORPWR$ZPBORMV 000000  
     writeDataToUART@data 0001  
