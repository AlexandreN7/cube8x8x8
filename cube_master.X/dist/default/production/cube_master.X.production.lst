

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Nov  8 14:51:20 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _ANCON0	set	3933
    19  0000                     _BAUDCON2bits	set	4025
    20  0000                     _INTCON	set	4082
    21  0000                     _OSCCON	set	4051
    22  0000                     _OSCTUNEbits	set	3995
    23  0000                     _PIE3bits	set	4003
    24  0000                     _PIR3bits	set	4004
    25  0000                     _PORTA	set	3968
    26  0000                     _PORTAbits	set	3968
    27  0000                     _PORTB	set	3969
    28  0000                     _PORTC	set	3970
    29  0000                     _PORTCbits	set	3970
    30  0000                     _RCONbits	set	4048
    31  0000                     _RCREG2	set	3962
    32  0000                     _RCSTA2bits	set	4006
    33  0000                     _SPBRG	set	4015
    34  0000                     _SPBRG2	set	3963
    35  0000                     _SPBRGH2	set	3964
    36  0000                     _TRISA	set	3986
    37  0000                     _TRISB	set	3987
    38  0000                     _TRISC	set	3988
    39  0000                     _TXREG2	set	3961
    40  0000                     _TXSTA2bits	set	4026
    41  0000                     _ADON	set	32272
    42  0000                     _GIE	set	32663
    43  0000                     _PEIE	set	32662
    44  0000                     _PSA	set	32427
    45  0000                     _RC2IF	set	32037
    46  0000                     _T08BIT	set	32430
    47  0000                     _T0CS	set	32429
    48  0000                     _T0PS0	set	32424
    49  0000                     _T0PS1	set	32425
    50  0000                     _T0PS2	set	32426
    51  0000                     _TMR0IE	set	32661
    52  0000                     _TMR0IF	set	32658
    53                           
    54 ;; *************** function _low_isr *****************
    55 ;; Defined at:
    56 ;;		line 102 in file "main.c"
    57 ;; Parameters:    Size  Location     Type
    58 ;;		None
    59 ;; Auto vars:     Size  Location     Type
    60 ;;		None
    61 ;; Return value:  Size  Location     Type
    62 ;;		None               void
    63 ;; Registers used:
    64 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
    65 ;; Tracked objects:
    66 ;;		On entry : 0/0
    67 ;;		On exit  : 0/0
    68 ;;		Unchanged: 0/0
    69 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    70 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    71 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    72 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    73 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    74 ;;Total ram usage:       17 bytes
    75 ;; Hardware stack levels used:    1
    76 ;; This function calls:
    77 ;;		Nothing
    78 ;; This function is called by:
    79 ;;		Interrupt level 1
    80 ;; This function uses a non-reentrant model
    81 ;;
    82                           
    83 ;; *************** function _timer_isr *****************
    84 ;; Defined at:
    85 ;;		line 118 in file "main.c"
    86 ;; Parameters:    Size  Location     Type
    87 ;;		None
    88 ;; Auto vars:     Size  Location     Type
    89 ;;		None
    90 ;; Return value:  Size  Location     Type
    91 ;;		None               void
    92 ;; Registers used:
    93 ;;		None
    94 ;; Tracked objects:
    95 ;;		On entry : 0/0
    96 ;;		On exit  : 0/0
    97 ;;		Unchanged: 0/0
    98 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    99 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   101 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   102 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   103 ;;Total ram usage:       17 bytes
   104 ;; Hardware stack levels used:    1
   105 ;; This function calls:
   106 ;;		Nothing
   107 ;; This function is called by:
   108 ;;		Interrupt level 1
   109 ;; This function uses a non-reentrant model
   110 ;;
   111                           
   112                           	psect	intcodelo
   113  000018                     __pintcodelo:
   114                           	opt stack 0
   115                           
   116                           ; #config settings
   117  000018                     _low_isr:
   118                           	opt stack 29
   119                           
   120                           ;incstack = 0
   121  000018  CFD8 F001          	movff	status,??_low_isr
   122  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
   123  000020  CFE0 F003          	movff	bsr,??_low_isr+2
   124  000024  CFFA F004          	movff	pclath,??_low_isr+3
   125  000028  CFFB F005          	movff	pclatu,??_low_isr+4
   126  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
   127  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
   128  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
   129  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
   130  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
   131  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
   132  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
   133  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
   134  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
   135  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
   136  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
   137  000058  CFF5 F011          	movff	tablat,??_low_isr+16
   138                           
   139                           ;main.c: 103: if (RC2IF ) {
   140  00005C  AAA4               	btfss	4004,5,c	;volatile
   141  00005E  D017               	goto	i1l873
   142                           
   143                           ;main.c: 104: tampon = RCREG2;
   144  000060  CF7A F02F          	movff	3962,_tampon	;volatile
   145                           
   146                           ;main.c: 105: PORTA =tampon;
   147  000064  C02F  FF80         	movff	_tampon,3968	;volatile
   148                           
   149                           ;main.c: 106: if (compteur == 128)
   150  000068  502D               	movf	_compteur,w,c
   151  00006A  0A80               	xorlw	128
   152  00006C  A4D8               	btfss	status,2,c
   153  00006E  D002               	goto	i1l869
   154                           
   155                           ;main.c: 107: {
   156                           ;main.c: 108: compteur =0;
   157  000070  0E00               	movlw	0
   158  000072  6E2D               	movwf	_compteur,c
   159  000074                     i1l869:
   160                           
   161                           ;main.c: 109: }
   162                           ;main.c: 110: stock_led[compteur] = tampon;
   163  000074  502D               	movf	_compteur,w,c
   164  000076  0D01               	mullw	1
   165  000078  0101               	movlb	1	; () banked
   166  00007A  0E00               	movlw	low _stock_led
   167  00007C  24F3               	addwf	prodl,w,c
   168  00007E  6ED9               	movwf	fsr2l,c
   169  000080  0101               	movlb	1	; () banked
   170  000082  0E01               	movlw	high _stock_led
   171  000084  20F4               	addwfc	prodh,w,c
   172  000086  6EDA               	movwf	fsr2h,c
   173  000088  C02F  FFDF         	movff	_tampon,indf2
   174                           
   175                           ; BSR set to: 1
   176                           ;main.c: 111: compteur ++;
   177  00008C  2A2D               	incf	_compteur,f,c
   178  00008E                     i1l873:
   179                           
   180                           ;main.c: 112: }
   181                           ;main.c: 113: flag_reception=1;
   182  00008E  0E01               	movlw	1
   183  000090  6E2E               	movwf	_flag_reception,c
   184                           
   185                           ;main.c: 114: RC2IF = 0;
   186  000092  9AA4               	bcf	4004,5,c	;volatile
   187  000094  C011  FFF5         	movff	??_low_isr+16,tablat
   188  000098  C010  FFF8         	movff	??_low_isr+15,tblptru
   189  00009C  C00F  FFF7         	movff	??_low_isr+14,tblptrh
   190  0000A0  C00E  FFF6         	movff	??_low_isr+13,tblptrl
   191  0000A4  C00D  FFF4         	movff	??_low_isr+12,prodh
   192  0000A8  C00C  FFF3         	movff	??_low_isr+11,prodl
   193  0000AC  C00B  FFDA         	movff	??_low_isr+10,fsr2h
   194  0000B0  C00A  FFD9         	movff	??_low_isr+9,fsr2l
   195  0000B4  C009  FFE2         	movff	??_low_isr+8,fsr1h
   196  0000B8  C008  FFE1         	movff	??_low_isr+7,fsr1l
   197  0000BC  C007  FFEA         	movff	??_low_isr+6,fsr0h
   198  0000C0  C006  FFE9         	movff	??_low_isr+5,fsr0l
   199  0000C4  C005  FFFB         	movff	??_low_isr+4,pclatu
   200  0000C8  C004  FFFA         	movff	??_low_isr+3,pclath
   201  0000CC  C003  FFE0         	movff	??_low_isr+2,bsr
   202  0000D0  C002  FFE8         	movff	??_low_isr+1,wreg
   203  0000D4  C001  FFD8         	movff	??_low_isr,status
   204  0000D8  0010               	retfie	
   205  0000DA                     __end_of_low_isr:
   206                           	opt stack 0
   207  0000DA                     _timer_isr:
   208                           	opt stack 29
   209                           
   210                           ;incstack = 0
   211  0000DA  CFD8 F012          	movff	status,??_timer_isr
   212  0000DE  CFE8 F013          	movff	wreg,??_timer_isr+1
   213  0000E2  CFE0 F014          	movff	bsr,??_timer_isr+2
   214  0000E6  CFFA F015          	movff	pclath,??_timer_isr+3
   215  0000EA  CFFB F016          	movff	pclatu,??_timer_isr+4
   216  0000EE  CFE9 F017          	movff	fsr0l,??_timer_isr+5
   217  0000F2  CFEA F018          	movff	fsr0h,??_timer_isr+6
   218  0000F6  CFE1 F019          	movff	fsr1l,??_timer_isr+7
   219  0000FA  CFE2 F01A          	movff	fsr1h,??_timer_isr+8
   220  0000FE  CFD9 F01B          	movff	fsr2l,??_timer_isr+9
   221  000102  CFDA F01C          	movff	fsr2h,??_timer_isr+10
   222  000106  CFF3 F01D          	movff	prodl,??_timer_isr+11
   223  00010A  CFF4 F01E          	movff	prodh,??_timer_isr+12
   224  00010E  CFF6 F01F          	movff	tblptrl,??_timer_isr+13
   225  000112  CFF7 F020          	movff	tblptrh,??_timer_isr+14
   226  000116  CFF8 F021          	movff	tblptru,??_timer_isr+15
   227  00011A  CFF5 F022          	movff	tablat,??_timer_isr+16
   228                           
   229                           ;main.c: 120: if ( TMR0IE && TMR0IF ) {
   230  00011E  BAF2               	btfsc	intcon,5,c	;volatile
   231  000120  D000               	goto	i1l56
   232  000122                     i1l56:
   233                           
   234                           ;main.c: 122: }
   235                           ;main.c: 123: TMR0IF = 0;
   236  000122  94F2               	bcf	intcon,2,c	;volatile
   237  000124  C022  FFF5         	movff	??_timer_isr+16,tablat
   238  000128  C021  FFF8         	movff	??_timer_isr+15,tblptru
   239  00012C  C020  FFF7         	movff	??_timer_isr+14,tblptrh
   240  000130  C01F  FFF6         	movff	??_timer_isr+13,tblptrl
   241  000134  C01E  FFF4         	movff	??_timer_isr+12,prodh
   242  000138  C01D  FFF3         	movff	??_timer_isr+11,prodl
   243  00013C  C01C  FFDA         	movff	??_timer_isr+10,fsr2h
   244  000140  C01B  FFD9         	movff	??_timer_isr+9,fsr2l
   245  000144  C01A  FFE2         	movff	??_timer_isr+8,fsr1h
   246  000148  C019  FFE1         	movff	??_timer_isr+7,fsr1l
   247  00014C  C018  FFEA         	movff	??_timer_isr+6,fsr0h
   248  000150  C017  FFE9         	movff	??_timer_isr+5,fsr0l
   249  000154  C016  FFFB         	movff	??_timer_isr+4,pclatu
   250  000158  C015  FFFA         	movff	??_timer_isr+3,pclath
   251  00015C  C014  FFE0         	movff	??_timer_isr+2,bsr
   252  000160  C013  FFE8         	movff	??_timer_isr+1,wreg
   253  000164  C012  FFD8         	movff	??_timer_isr,status
   254  000168  0010               	retfie	
   255  00016A                     __end_of_timer_isr:
   256                           	opt stack 0
   257  0000                     pclatu	equ	0xFFB
   258                           pclath	equ	0xFFA
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           prodh	equ	0xFF4
   264                           prodl	equ	0xFF3
   265                           intcon	equ	0xFF2
   266                           fsr0h	equ	0xFEA
   267                           fsr0l	equ	0xFE9
   268                           wreg	equ	0xFE8
   269                           fsr1h	equ	0xFE2
   270                           fsr1l	equ	0xFE1
   271                           bsr	equ	0xFE0
   272                           indf2	equ	0xFDF
   273                           fsr2h	equ	0xFDA
   274                           fsr2l	equ	0xFD9
   275                           status	equ	0xFD8
   276                           
   277                           	psect	cinit
   278  000384                     __pcinit:
   279                           	opt stack 0
   280  000384                     start_initialization:
   281                           	opt stack 0
   282  000384                     __initialization:
   283                           	opt stack 0
   284                           
   285                           ; Clear objects allocated to BANK1 (128 bytes)
   286  000384  EE01  F000         	lfsr	0,__pbssBANK1
   287  000388  0E80               	movlw	128
   288  00038A                     clear_0:
   289  00038A  6AEE               	clrf	postinc0,c
   290  00038C  06E8               	decf	wreg,f,c
   291  00038E  E1FD               	bnz	clear_0
   292                           
   293                           ; Clear objects allocated to BANK0 (80 bytes)
   294  000390  EE00  F060         	lfsr	0,__pbssBANK0
   295  000394  0E50               	movlw	80
   296  000396                     clear_1:
   297  000396  6AEE               	clrf	postinc0,c
   298  000398  06E8               	decf	wreg,f,c
   299  00039A  E1FD               	bnz	clear_1
   300                           
   301                           ; Clear objects allocated to COMRAM (3 bytes)
   302  00039C  6A2F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   303  00039E  6A2E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   304  0003A0  6A2D               	clrf	__pbssCOMRAM& (0+255),c
   305  0003A2                     end_of_initialization:
   306                           	opt stack 0
   307  0003A2                     __end_of__initialization:
   308                           	opt stack 0
   309  0003A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   310  0003A4  6EF8               	movwf	tblptru,c
   311  0003A6  0100               	movlb	0
   312  0003A8  EFB7  F000         	goto	_main	;jump to C main() function
   313                           pclatu	equ	0xFFB
   314                           pclath	equ	0xFFA
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           prodh	equ	0xFF4
   320                           prodl	equ	0xFF3
   321                           intcon	equ	0xFF2
   322                           postinc0	equ	0xFEE
   323                           fsr0h	equ	0xFEA
   324                           fsr0l	equ	0xFE9
   325                           wreg	equ	0xFE8
   326                           fsr1h	equ	0xFE2
   327                           fsr1l	equ	0xFE1
   328                           bsr	equ	0xFE0
   329                           indf2	equ	0xFDF
   330                           fsr2h	equ	0xFDA
   331                           fsr2l	equ	0xFD9
   332                           status	equ	0xFD8
   333                           
   334                           	psect	bssCOMRAM
   335  00002D                     __pbssCOMRAM:
   336                           	opt stack 0
   337  00002D                     _compteur:
   338                           	opt stack 0
   339  00002D                     	ds	1
   340  00002E                     _flag_reception:
   341                           	opt stack 0
   342  00002E                     	ds	1
   343  00002F                     _tampon:
   344                           	opt stack 0
   345  00002F                     	ds	1
   346                           pclatu	equ	0xFFB
   347                           pclath	equ	0xFFA
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           prodh	equ	0xFF4
   353                           prodl	equ	0xFF3
   354                           intcon	equ	0xFF2
   355                           postinc0	equ	0xFEE
   356                           fsr0h	equ	0xFEA
   357                           fsr0l	equ	0xFE9
   358                           wreg	equ	0xFE8
   359                           fsr1h	equ	0xFE2
   360                           fsr1l	equ	0xFE1
   361                           bsr	equ	0xFE0
   362                           indf2	equ	0xFDF
   363                           fsr2h	equ	0xFDA
   364                           fsr2l	equ	0xFD9
   365                           status	equ	0xFD8
   366                           
   367                           	psect	bssBANK0
   368  000060                     __pbssBANK0:
   369                           	opt stack 0
   370  000060                     _msg:
   371                           	opt stack 0
   372  000060                     	ds	80
   373                           pclatu	equ	0xFFB
   374                           pclath	equ	0xFFA
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           prodh	equ	0xFF4
   380                           prodl	equ	0xFF3
   381                           intcon	equ	0xFF2
   382                           postinc0	equ	0xFEE
   383                           fsr0h	equ	0xFEA
   384                           fsr0l	equ	0xFE9
   385                           wreg	equ	0xFE8
   386                           fsr1h	equ	0xFE2
   387                           fsr1l	equ	0xFE1
   388                           bsr	equ	0xFE0
   389                           indf2	equ	0xFDF
   390                           fsr2h	equ	0xFDA
   391                           fsr2l	equ	0xFD9
   392                           status	equ	0xFD8
   393                           
   394                           	psect	bssBANK1
   395  000100                     __pbssBANK1:
   396                           	opt stack 0
   397  000100                     _stock_led:
   398                           	opt stack 0
   399  000100                     	ds	128
   400                           pclatu	equ	0xFFB
   401                           pclath	equ	0xFFA
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           prodh	equ	0xFF4
   407                           prodl	equ	0xFF3
   408                           intcon	equ	0xFF2
   409                           postinc0	equ	0xFEE
   410                           fsr0h	equ	0xFEA
   411                           fsr0l	equ	0xFE9
   412                           wreg	equ	0xFE8
   413                           fsr1h	equ	0xFE2
   414                           fsr1l	equ	0xFE1
   415                           bsr	equ	0xFE0
   416                           indf2	equ	0xFDF
   417                           fsr2h	equ	0xFDA
   418                           fsr2l	equ	0xFD9
   419                           status	equ	0xFD8
   420                           
   421                           	psect	cstackCOMRAM
   422  000001                     __pcstackCOMRAM:
   423                           	opt stack 0
   424  000001                     ??_low_isr:
   425  000001                     
   426                           ; 0 bytes @ 0x0
   427  000001                     	ds	17
   428  000012                     ??_timer_isr:
   429                           
   430                           ; 0 bytes @ 0x11
   431  000012                     	ds	17
   432  000023                     multiplexeur@n:
   433                           	opt stack 0
   434  000023                     writeStringToUART@msg:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x22
   438  000023                     	ds	2
   439  000025                     main@i:
   440                           	opt stack 0
   441                           
   442                           ; 4 bytes @ 0x24
   443  000025                     	ds	4
   444  000029                     main@j:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0x28
   448  000029                     	ds	4
   449                           pclatu	equ	0xFFB
   450                           pclath	equ	0xFFA
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           prodh	equ	0xFF4
   456                           prodl	equ	0xFF3
   457                           intcon	equ	0xFF2
   458                           postinc0	equ	0xFEE
   459                           fsr0h	equ	0xFEA
   460                           fsr0l	equ	0xFE9
   461                           wreg	equ	0xFE8
   462                           fsr1h	equ	0xFE2
   463                           fsr1l	equ	0xFE1
   464                           bsr	equ	0xFE0
   465                           indf2	equ	0xFDF
   466                           fsr2h	equ	0xFDA
   467                           fsr2l	equ	0xFD9
   468                           status	equ	0xFD8
   469                           
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 137 in file "main.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  j               4   40[COMRAM] long 
   480 ;;  i               4   36[COMRAM] long 
   481 ;; Return value:  Size  Location     Type
   482 ;;		None               void
   483 ;; Registers used:
   484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   491 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   493 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   494 ;;Total ram usage:        8 bytes
   495 ;; Hardware stack levels required when called:    2
   496 ;; This function calls:
   497 ;;		_initComms
   498 ;;		_initPorts
   499 ;;		_multiplexeur
   500 ;;		_writeStringToUART
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text0
   507  00016E                     __ptext0:
   508                           	opt stack 0
   509  00016E                     _main:
   510                           	opt stack 29
   511                           
   512                           ;main.c: 139: long i= 0;
   513                           
   514                           ;incstack = 0
   515  00016E  0E00               	movlw	0
   516  000170  6E25               	movwf	main@i,c
   517  000172  0E00               	movlw	0
   518  000174  6E26               	movwf	main@i+1,c
   519  000176  0E00               	movlw	0
   520  000178  6E27               	movwf	main@i+2,c
   521  00017A  0E00               	movlw	0
   522  00017C  6E28               	movwf	main@i+3,c
   523                           
   524                           ;main.c: 140: long j = 0;
   525  00017E  0E00               	movlw	0
   526  000180  6E29               	movwf	main@j,c
   527  000182  0E00               	movlw	0
   528  000184  6E2A               	movwf	main@j+1,c
   529  000186  0E00               	movlw	0
   530  000188  6E2B               	movwf	main@j+2,c
   531  00018A  0E00               	movlw	0
   532  00018C  6E2C               	movwf	main@j+3,c
   533                           
   534                           ;main.c: 143: initPorts();
   535  00018E  ECAA  F001         	call	_initPorts	;wreg free
   536                           
   537                           ;main.c: 144: initComms();
   538  000192  EC8A  F001         	call	_initComms	;wreg free
   539  000196                     l883:
   540                           
   541                           ;main.c: 148: if (flag_reception==1 )
   542  000196  042E               	decf	_flag_reception,w,c
   543  000198  A4D8               	btfss	status,2,c
   544  00019A  D7FD               	goto	l883
   545                           
   546                           ;main.c: 149: {
   547                           ;main.c: 150: for(i=0 ; i<=8 ; i++)
   548  00019C  0E00               	movlw	0
   549  00019E  6E25               	movwf	main@i,c
   550  0001A0  0E00               	movlw	0
   551  0001A2  6E26               	movwf	main@i+1,c
   552  0001A4  0E00               	movlw	0
   553  0001A6  6E27               	movwf	main@i+2,c
   554  0001A8  0E00               	movlw	0
   555  0001AA  6E28               	movwf	main@i+3,c
   556  0001AC  5028               	movf	main@i+3,w,c
   557  0001AE  0A80               	xorlw	128
   558  0001B0  0F80               	addlw	128
   559  0001B2  E108               	bnz	u195
   560  0001B4  0E00               	movlw	0
   561  0001B6  5C27               	subwf	main@i+2,w,c
   562  0001B8  E105               	bnz	u195
   563  0001BA  0E00               	movlw	0
   564  0001BC  5C26               	subwf	main@i+1,w,c
   565  0001BE  E102               	bnz	u195
   566  0001C0  0E09               	movlw	9
   567  0001C2  5C25               	subwf	main@i,w,c
   568  0001C4                     u195:
   569  0001C4  B0D8               	btfsc	status,0,c
   570  0001C6  D7E7               	goto	l883
   571                           
   572                           ;main.c: 151: {
   573                           ;main.c: 152: multiplexeur(i);
   574  0001C8  5025               	movf	main@i,w,c
   575  0001CA  EC56  F001         	call	_multiplexeur
   576                           
   577                           ;main.c: 153: writeStringToUART(stock_led);
   578  0001CE  0101               	movlb	1	; () banked
   579  0001D0  0E01               	movlw	high _stock_led
   580  0001D2  6E24               	movwf	writeStringToUART@msg+1,c
   581  0001D4  0101               	movlb	1	; () banked
   582  0001D6  0E00               	movlw	low _stock_led
   583  0001D8  6E23               	movwf	writeStringToUART@msg,c
   584  0001DA  ECD6  F001         	call	_writeStringToUART	;wreg free
   585                           
   586                           ;main.c: 154: PORTAbits.RA0 = 1;
   587  0001DE  8080               	bsf	3968,0,c	;volatile
   588                           
   589                           ;main.c: 155: for (j=0 ; j< 100 ; j++) {}
   590  0001E0  0E00               	movlw	0
   591  0001E2  6E29               	movwf	main@j,c
   592  0001E4  0E00               	movlw	0
   593  0001E6  6E2A               	movwf	main@j+1,c
   594  0001E8  0E00               	movlw	0
   595  0001EA  6E2B               	movwf	main@j+2,c
   596  0001EC  0E00               	movlw	0
   597  0001EE  6E2C               	movwf	main@j+3,c
   598  0001F0  502C               	movf	main@j+3,w,c
   599  0001F2  0A80               	xorlw	128
   600  0001F4  0F80               	addlw	128
   601  0001F6  E108               	bnz	u205
   602  0001F8  0E00               	movlw	0
   603  0001FA  5C2B               	subwf	main@j+2,w,c
   604  0001FC  E105               	bnz	u205
   605  0001FE  0E00               	movlw	0
   606  000200  5C2A               	subwf	main@j+1,w,c
   607  000202  E102               	bnz	u205
   608  000204  0E64               	movlw	100
   609  000206  5C29               	subwf	main@j,w,c
   610  000208                     u205:
   611  000208  B0D8               	btfsc	status,0,c
   612  00020A  D013               	goto	l65
   613  00020C  0E01               	movlw	1
   614  00020E  2629               	addwf	main@j,f,c
   615  000210  0E00               	movlw	0
   616  000212  222A               	addwfc	main@j+1,f,c
   617  000214  222B               	addwfc	main@j+2,f,c
   618  000216  222C               	addwfc	main@j+3,f,c
   619  000218  502C               	movf	main@j+3,w,c
   620  00021A  0A80               	xorlw	128
   621  00021C  0F80               	addlw	128
   622  00021E  E108               	bnz	u215
   623  000220  0E00               	movlw	0
   624  000222  5C2B               	subwf	main@j+2,w,c
   625  000224  E105               	bnz	u215
   626  000226  0E00               	movlw	0
   627  000228  5C2A               	subwf	main@j+1,w,c
   628  00022A  E102               	bnz	u215
   629  00022C  0E64               	movlw	100
   630  00022E  5C29               	subwf	main@j,w,c
   631  000230                     u215:
   632  000230  D7EB               	goto	u205
   633  000232                     l65:
   634                           
   635                           ;main.c: 156: PORTAbits.RA0 = 0;
   636  000232  9080               	bcf	3968,0,c	;volatile
   637                           
   638                           ;main.c: 157: for (j=0; j< 100000 ;j++) {}
   639  000234  0E00               	movlw	0
   640  000236  6E29               	movwf	main@j,c
   641  000238  0E00               	movlw	0
   642  00023A  6E2A               	movwf	main@j+1,c
   643  00023C  0E00               	movlw	0
   644  00023E  6E2B               	movwf	main@j+2,c
   645  000240  0E00               	movlw	0
   646  000242  6E2C               	movwf	main@j+3,c
   647  000244  502C               	movf	main@j+3,w,c
   648  000246  0A80               	xorlw	128
   649  000248  0F80               	addlw	128
   650  00024A  E108               	bnz	u225
   651  00024C  0E01               	movlw	1
   652  00024E  5C2B               	subwf	main@j+2,w,c
   653  000250  E105               	bnz	u225
   654  000252  0E86               	movlw	134
   655  000254  5C2A               	subwf	main@j+1,w,c
   656  000256  E102               	bnz	u225
   657  000258  0EA0               	movlw	160
   658  00025A  5C29               	subwf	main@j,w,c
   659  00025C                     u225:
   660  00025C  B0D8               	btfsc	status,0,c
   661  00025E  D013               	goto	l913
   662  000260  0E01               	movlw	1
   663  000262  2629               	addwf	main@j,f,c
   664  000264  0E00               	movlw	0
   665  000266  222A               	addwfc	main@j+1,f,c
   666  000268  222B               	addwfc	main@j+2,f,c
   667  00026A  222C               	addwfc	main@j+3,f,c
   668  00026C  502C               	movf	main@j+3,w,c
   669  00026E  0A80               	xorlw	128
   670  000270  0F80               	addlw	128
   671  000272  E108               	bnz	u235
   672  000274  0E01               	movlw	1
   673  000276  5C2B               	subwf	main@j+2,w,c
   674  000278  E105               	bnz	u235
   675  00027A  0E86               	movlw	134
   676  00027C  5C2A               	subwf	main@j+1,w,c
   677  00027E  E102               	bnz	u235
   678  000280  0EA0               	movlw	160
   679  000282  5C29               	subwf	main@j,w,c
   680  000284                     u235:
   681  000284  D7EB               	goto	u225
   682  000286                     l913:
   683  000286  0E01               	movlw	1
   684  000288  2625               	addwf	main@i,f,c
   685  00028A  0E00               	movlw	0
   686  00028C  2226               	addwfc	main@i+1,f,c
   687  00028E  2227               	addwfc	main@i+2,f,c
   688  000290  2228               	addwfc	main@i+3,f,c
   689  000292  5028               	movf	main@i+3,w,c
   690  000294  0A80               	xorlw	128
   691  000296  0F80               	addlw	128
   692  000298  E108               	bnz	u245
   693  00029A  0E00               	movlw	0
   694  00029C  5C27               	subwf	main@i+2,w,c
   695  00029E  E105               	bnz	u245
   696  0002A0  0E00               	movlw	0
   697  0002A2  5C26               	subwf	main@i+1,w,c
   698  0002A4  E102               	bnz	u245
   699  0002A6  0E09               	movlw	9
   700  0002A8  5C25               	subwf	main@i,w,c
   701  0002AA                     u245:
   702  0002AA  D78C               	goto	u195
   703  0002AC                     __end_of_main:
   704                           	opt stack 0
   705                           pclatu	equ	0xFFB
   706                           pclath	equ	0xFFA
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           intcon	equ	0xFF2
   714                           postinc0	equ	0xFEE
   715                           fsr0h	equ	0xFEA
   716                           fsr0l	equ	0xFE9
   717                           wreg	equ	0xFE8
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           bsr	equ	0xFE0
   721                           indf2	equ	0xFDF
   722                           fsr2h	equ	0xFDA
   723                           fsr2l	equ	0xFD9
   724                           status	equ	0xFD8
   725                           
   726 ;; *************** function _writeStringToUART *****************
   727 ;; Defined at:
   728 ;;		line 54 in file "usart.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  msg             2   34[COMRAM] PTR const unsigned char 
   731 ;;		 -> stock_led(128), 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;		None               void
   736 ;; Registers used:
   737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   747 ;;Total ram usage:        2 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text1
   758  0003AC                     __ptext1:
   759                           	opt stack 0
   760  0003AC                     _writeStringToUART:
   761                           	opt stack 29
   762                           
   763                           ;usart.c: 56: while(*msg) {
   764                           
   765                           ;incstack = 0
   766  0003AC  D00A               	goto	l859
   767  0003AE                     l116:
   768  0003AE  A8A4               	btfss	4004,4,c	;volatile
   769  0003B0  D7FE               	goto	l116
   770                           
   771                           ;usart.c: 58: TXREG2 = *msg++;
   772  0003B2  C023  FFD9         	movff	writeStringToUART@msg,fsr2l
   773  0003B6  C024  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   774  0003BA  50DF               	movf	indf2,w,c
   775  0003BC  6E79               	movwf	3961,c	;volatile
   776  0003BE  4A23               	infsnz	writeStringToUART@msg,f,c
   777  0003C0  2A24               	incf	writeStringToUART@msg+1,f,c
   778  0003C2                     l859:
   779  0003C2  C023  FFD9         	movff	writeStringToUART@msg,fsr2l
   780  0003C6  C024  FFDA         	movff	writeStringToUART@msg+1,fsr2h
   781  0003CA  50DF               	movf	indf2,w,c
   782  0003CC  B4D8               	btfsc	status,2,c
   783  0003CE  0012               	return	
   784  0003D0  D7EE               	goto	l116
   785  0003D2                     __end_of_writeStringToUART:
   786                           	opt stack 0
   787                           pclatu	equ	0xFFB
   788                           pclath	equ	0xFFA
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           prodh	equ	0xFF4
   794                           prodl	equ	0xFF3
   795                           intcon	equ	0xFF2
   796                           postinc0	equ	0xFEE
   797                           fsr0h	equ	0xFEA
   798                           fsr0l	equ	0xFE9
   799                           wreg	equ	0xFE8
   800                           fsr1h	equ	0xFE2
   801                           fsr1l	equ	0xFE1
   802                           bsr	equ	0xFE0
   803                           indf2	equ	0xFDF
   804                           fsr2h	equ	0xFDA
   805                           fsr2l	equ	0xFD9
   806                           status	equ	0xFD8
   807                           
   808 ;; *************** function _multiplexeur *****************
   809 ;; Defined at:
   810 ;;		line 166 in file "main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  n               1    wreg     unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  n               1   34[COMRAM] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;		None               void
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;Total ram usage:        1 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text2
   839  0002AC                     __ptext2:
   840                           	opt stack 0
   841  0002AC                     _multiplexeur:
   842                           	opt stack 29
   843                           
   844                           ;incstack = 0
   845                           ;multiplexeur@n stored from wreg
   846  0002AC  6E23               	movwf	multiplexeur@n,c
   847                           
   848                           ;main.c: 168: PORTCbits.RC7 = 0;
   849  0002AE  9E82               	bcf	3970,7,c	;volatile
   850                           
   851                           ;main.c: 169: PORTCbits.RC6 = 0;
   852  0002B0  9C82               	bcf	3970,6,c	;volatile
   853                           
   854                           ;main.c: 170: PORTCbits.RC5 = 0;
   855  0002B2  9A82               	bcf	3970,5,c	;volatile
   856                           
   857                           ;main.c: 171: PORTCbits.RC4 = 0;
   858  0002B4  9882               	bcf	3970,4,c	;volatile
   859                           
   860                           ;main.c: 172: PORTCbits.RC0 = 0;
   861  0002B6  9082               	bcf	3970,0,c	;volatile
   862                           
   863                           ;main.c: 173: PORTCbits.RC1 = 0;
   864  0002B8  9282               	bcf	3970,1,c	;volatile
   865                           
   866                           ;main.c: 174: PORTCbits.RC2 = 0;
   867  0002BA  9482               	bcf	3970,2,c	;volatile
   868                           
   869                           ;main.c: 175: PORTCbits.RC3 = 0;
   870  0002BC  9682               	bcf	3970,3,c	;volatile
   871                           
   872                           ;main.c: 176: switch (n)
   873  0002BE  D010               	goto	l851
   874  0002C0                     l74:
   875                           
   876                           ;main.c: 179: PORTCbits.RC7 = 1;
   877  0002C0  8E82               	bsf	3970,7,c	;volatile
   878                           
   879                           ;main.c: 180: break;
   880  0002C2  0012               	return	
   881  0002C4                     l76:
   882                           
   883                           ;main.c: 183: PORTCbits.RC6 = 1;
   884  0002C4  8C82               	bsf	3970,6,c	;volatile
   885                           
   886                           ;main.c: 184: break;
   887  0002C6  0012               	return	
   888  0002C8                     l77:
   889                           
   890                           ;main.c: 187: PORTCbits.RC5 = 1;
   891  0002C8  8A82               	bsf	3970,5,c	;volatile
   892                           
   893                           ;main.c: 188: break;
   894  0002CA  0012               	return	
   895  0002CC                     l78:
   896                           
   897                           ;main.c: 191: PORTCbits.RC4 = 1;
   898  0002CC  8882               	bsf	3970,4,c	;volatile
   899                           
   900                           ;main.c: 192: break;
   901  0002CE  0012               	return	
   902  0002D0                     l79:
   903                           
   904                           ;main.c: 195: PORTCbits.RC0 = 1;
   905  0002D0  8082               	bsf	3970,0,c	;volatile
   906                           
   907                           ;main.c: 196: break;
   908  0002D2  0012               	return	
   909  0002D4                     l80:
   910                           
   911                           ;main.c: 199: PORTCbits.RC1 = 1;
   912  0002D4  8282               	bsf	3970,1,c	;volatile
   913                           
   914                           ;main.c: 200: break;
   915  0002D6  0012               	return	
   916  0002D8                     l81:
   917                           
   918                           ;main.c: 203: PORTCbits.RC2 = 1;
   919  0002D8  8482               	bsf	3970,2,c	;volatile
   920                           
   921                           ;main.c: 204: break;
   922  0002DA  0012               	return	
   923  0002DC                     l82:
   924                           
   925                           ;main.c: 207: PORTCbits.RC3 = 1;
   926  0002DC  8682               	bsf	3970,3,c	;volatile
   927                           
   928                           ;main.c: 208: break;
   929  0002DE  0012               	return	
   930  0002E0                     l851:
   931  0002E0  5023               	movf	multiplexeur@n,w,c
   932                           
   933                           ; Switch size 1, requested type "space"
   934                           ; Number of cases is 8, Range of values is 0 to 7
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte           25    13 (average)
   938                           ;	Chosen strategy is simple_byte
   939  0002E2  0A00               	xorlw	0	; case 0
   940  0002E4  B4D8               	btfsc	status,2,c
   941  0002E6  D7EC               	goto	l74
   942  0002E8  0A01               	xorlw	1	; case 1
   943  0002EA  B4D8               	btfsc	status,2,c
   944  0002EC  D7EB               	goto	l76
   945  0002EE  0A03               	xorlw	3	; case 2
   946  0002F0  B4D8               	btfsc	status,2,c
   947  0002F2  D7EA               	goto	l77
   948  0002F4  0A01               	xorlw	1	; case 3
   949  0002F6  B4D8               	btfsc	status,2,c
   950  0002F8  D7E9               	goto	l78
   951  0002FA  0A07               	xorlw	7	; case 4
   952  0002FC  B4D8               	btfsc	status,2,c
   953  0002FE  D7E8               	goto	l79
   954  000300  0A01               	xorlw	1	; case 5
   955  000302  B4D8               	btfsc	status,2,c
   956  000304  D7E7               	goto	l80
   957  000306  0A03               	xorlw	3	; case 6
   958  000308  B4D8               	btfsc	status,2,c
   959  00030A  D7E6               	goto	l81
   960  00030C  0A01               	xorlw	1	; case 7
   961  00030E  A4D8               	btfss	status,2,c
   962  000310  0012               	return	
   963  000312  D7E4               	goto	l82
   964  000314                     __end_of_multiplexeur:
   965                           	opt stack 0
   966                           pclatu	equ	0xFFB
   967                           pclath	equ	0xFFA
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           prodh	equ	0xFF4
   973                           prodl	equ	0xFF3
   974                           intcon	equ	0xFF2
   975                           postinc0	equ	0xFEE
   976                           fsr0h	equ	0xFEA
   977                           fsr0l	equ	0xFE9
   978                           wreg	equ	0xFE8
   979                           fsr1h	equ	0xFE2
   980                           fsr1l	equ	0xFE1
   981                           bsr	equ	0xFE0
   982                           indf2	equ	0xFDF
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _initPorts *****************
   988 ;; Defined at:
   989 ;;		line 7 in file "port.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;		None               void
   996 ;; Registers used:
   997 ;;		wreg, status,2
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text3
  1018  000354                     __ptext3:
  1019                           	opt stack 0
  1020  000354                     _initPorts:
  1021                           	opt stack 29
  1022                           
  1023                           ;port.c: 12: OSCCON = 0x70;
  1024                           
  1025                           ;incstack = 0
  1026  000354  0E70               	movlw	112
  1027  000356  6ED3               	movwf	4051,c	;volatile
  1028                           
  1029                           ;port.c: 14: ANCON0 = 0b00000000;
  1030  000358  0E00               	movlw	0
  1031  00035A  010F               	movlb	15	; () banked
  1032  00035C  6F5D               	movwf	93,b	;volatile
  1033                           
  1034                           ; BSR set to: 15
  1035                           ;port.c: 17: ADON = 0;
  1036  00035E  90C2               	bcf	4034,0,c	;volatile
  1037                           
  1038                           ;port.c: 20: PORTA = 0b00000000;
  1039  000360  0E00               	movlw	0
  1040  000362  6E80               	movwf	3968,c	;volatile
  1041                           
  1042                           ;port.c: 21: TRISA = 0b00000000;
  1043  000364  0E00               	movlw	0
  1044  000366  6E92               	movwf	3986,c	;volatile
  1045                           
  1046                           ;port.c: 23: PORTB = 0b01000000;
  1047  000368  0E40               	movlw	64
  1048  00036A  6E81               	movwf	3969,c	;volatile
  1049                           
  1050                           ;port.c: 24: TRISB = 0b10000000;
  1051  00036C  0E80               	movlw	128
  1052  00036E  6E93               	movwf	3987,c	;volatile
  1053                           
  1054                           ;port.c: 26: PORTC = 0b00000000;
  1055  000370  0E00               	movlw	0
  1056  000372  6E82               	movwf	3970,c	;volatile
  1057                           
  1058                           ;port.c: 27: TRISC = 0b00000000;
  1059  000374  0E00               	movlw	0
  1060  000376  6E94               	movwf	3988,c	;volatile
  1061                           
  1062                           ; BSR set to: 15
  1063                           ;port.c: 30: GIE = 1;
  1064  000378  8EF2               	bsf	intcon,7,c	;volatile
  1065                           
  1066                           ; BSR set to: 15
  1067                           ;port.c: 31: PEIE = 1;
  1068  00037A  8CF2               	bsf	intcon,6,c	;volatile
  1069                           
  1070                           ;port.c: 32: INTCON =0b11000000;
  1071  00037C  0EC0               	movlw	192
  1072  00037E  6EF2               	movwf	intcon,c	;volatile
  1073                           
  1074                           ; BSR set to: 15
  1075                           ;port.c: 34: OSCTUNEbits.PLLEN = 1;
  1076  000380  8C9B               	bsf	3995,6,c	;volatile
  1077                           
  1078                           ; BSR set to: 15
  1079  000382  0012               	return	
  1080  000384                     __end_of_initPorts:
  1081                           	opt stack 0
  1082                           pclatu	equ	0xFFB
  1083                           pclath	equ	0xFFA
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           prodh	equ	0xFF4
  1089                           prodl	equ	0xFF3
  1090                           intcon	equ	0xFF2
  1091                           postinc0	equ	0xFEE
  1092                           fsr0h	equ	0xFEA
  1093                           fsr0l	equ	0xFE9
  1094                           wreg	equ	0xFE8
  1095                           fsr1h	equ	0xFE2
  1096                           fsr1l	equ	0xFE1
  1097                           bsr	equ	0xFE0
  1098                           indf2	equ	0xFDF
  1099                           fsr2h	equ	0xFDA
  1100                           fsr2l	equ	0xFD9
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _initComms *****************
  1104 ;; Defined at:
  1105 ;;		line 6 in file "usart.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;		None               void
  1112 ;; Registers used:
  1113 ;;		wreg, status,2
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text4
  1134  000314                     __ptext4:
  1135                           	opt stack 0
  1136  000314                     _initComms:
  1137                           	opt stack 29
  1138                           
  1139                           ;usart.c: 8: TXSTA2bits.CSRC = 0;
  1140                           
  1141                           ; BSR set to: 15
  1142                           ;incstack = 0
  1143  000314  9EBA               	bcf	4026,7,c	;volatile
  1144                           
  1145                           ;usart.c: 9: TXSTA2bits.TX9 = 0;
  1146  000316  9CBA               	bcf	4026,6,c	;volatile
  1147                           
  1148                           ;usart.c: 10: TXSTA2bits.TXEN = 1;
  1149  000318  8ABA               	bsf	4026,5,c	;volatile
  1150                           
  1151                           ;usart.c: 11: TXSTA2bits.SYNC = 0;
  1152  00031A  98BA               	bcf	4026,4,c	;volatile
  1153                           
  1154                           ;usart.c: 12: TXSTA2bits.SENDB = 0;
  1155  00031C  96BA               	bcf	4026,3,c	;volatile
  1156                           
  1157                           ;usart.c: 13: TXSTA2bits.BRGH = 1;
  1158  00031E  84BA               	bsf	4026,2,c	;volatile
  1159                           
  1160                           ;usart.c: 14: TXSTA2bits.TRMT = 1;
  1161  000320  82BA               	bsf	4026,1,c	;volatile
  1162                           
  1163                           ;usart.c: 15: TXSTA2bits.TX9D = 0;
  1164  000322  90BA               	bcf	4026,0,c	;volatile
  1165                           
  1166                           ;usart.c: 17: RCSTA2bits.SPEN = 1;
  1167  000324  8EA6               	bsf	4006,7,c	;volatile
  1168                           
  1169                           ;usart.c: 18: RCSTA2bits.RX9 = 0;
  1170  000326  9CA6               	bcf	4006,6,c	;volatile
  1171                           
  1172                           ;usart.c: 19: RCSTA2bits.SREN = 0;
  1173  000328  9AA6               	bcf	4006,5,c	;volatile
  1174                           
  1175                           ;usart.c: 20: RCSTA2bits.CREN = 1;
  1176  00032A  88A6               	bsf	4006,4,c	;volatile
  1177                           
  1178                           ;usart.c: 21: RCSTA2bits.ADDEN = 0;
  1179  00032C  96A6               	bcf	4006,3,c	;volatile
  1180                           
  1181                           ;usart.c: 22: RCSTA2bits.FERR = 0;
  1182  00032E  94A6               	bcf	4006,2,c	;volatile
  1183                           
  1184                           ;usart.c: 23: RCSTA2bits.OERR = 0;
  1185  000330  92A6               	bcf	4006,1,c	;volatile
  1186                           
  1187                           ;usart.c: 24: RCSTA2bits.RX9D = 0;
  1188  000332  90A6               	bcf	4006,0,c	;volatile
  1189                           
  1190                           ;usart.c: 26: BAUDCON2bits.ABDOVF = 0;
  1191  000334  9EB9               	bcf	4025,7,c	;volatile
  1192                           
  1193                           ;usart.c: 27: BAUDCON2bits.RCIDL = 1;
  1194  000336  8CB9               	bsf	4025,6,c	;volatile
  1195                           
  1196                           ;usart.c: 28: BAUDCON2bits.RXDTP = 0;
  1197  000338  9AB9               	bcf	4025,5,c	;volatile
  1198                           
  1199                           ;usart.c: 29: BAUDCON2bits.TXCKP = 0;
  1200  00033A  98B9               	bcf	4025,4,c	;volatile
  1201                           
  1202                           ;usart.c: 30: BAUDCON2bits.BRG16 = 1;
  1203  00033C  86B9               	bsf	4025,3,c	;volatile
  1204                           
  1205                           ;usart.c: 31: BAUDCON2bits.WUE = 0;
  1206  00033E  92B9               	bcf	4025,1,c	;volatile
  1207                           
  1208                           ;usart.c: 32: BAUDCON2bits.ABDEN = 0;
  1209  000340  90B9               	bcf	4025,0,c	;volatile
  1210                           
  1211                           ;usart.c: 36: PIE3bits.RC2IE = 1;
  1212  000342  8AA3               	bsf	4003,5,c	;volatile
  1213                           
  1214                           ;usart.c: 37: RCONbits.IPEN = 1;
  1215  000344  8ED0               	bsf	4048,7,c	;volatile
  1216                           
  1217                           ;usart.c: 48: SPBRG = 115;
  1218  000346  0E73               	movlw	115
  1219  000348  6EAF               	movwf	4015,c	;volatile
  1220                           
  1221                           ;usart.c: 49: SPBRGH2 = 0;
  1222  00034A  0E00               	movlw	0
  1223  00034C  6E7C               	movwf	3964,c	;volatile
  1224                           
  1225                           ;usart.c: 50: SPBRG2 = 137;
  1226  00034E  0E89               	movlw	137
  1227  000350  6E7B               	movwf	3963,c	;volatile
  1228  000352  0012               	return	
  1229  000354                     __end_of_initComms:
  1230                           	opt stack 0
  1231                           pclatu	equ	0xFFB
  1232                           pclath	equ	0xFFA
  1233                           tblptru	equ	0xFF8
  1234                           tblptrh	equ	0xFF7
  1235                           tblptrl	equ	0xFF6
  1236                           tablat	equ	0xFF5
  1237                           prodh	equ	0xFF4
  1238                           prodl	equ	0xFF3
  1239                           intcon	equ	0xFF2
  1240                           postinc0	equ	0xFEE
  1241                           fsr0h	equ	0xFEA
  1242                           fsr0l	equ	0xFE9
  1243                           wreg	equ	0xFE8
  1244                           fsr1h	equ	0xFE2
  1245                           fsr1l	equ	0xFE1
  1246                           bsr	equ	0xFE0
  1247                           indf2	equ	0xFDF
  1248                           fsr2h	equ	0xFDA
  1249                           fsr2l	equ	0xFD9
  1250                           status	equ	0xFD8
  1251                           pclatu	equ	0xFFB
  1252                           pclath	equ	0xFFA
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           prodh	equ	0xFF4
  1258                           prodl	equ	0xFF3
  1259                           intcon	equ	0xFF2
  1260                           postinc0	equ	0xFEE
  1261                           fsr0h	equ	0xFEA
  1262                           fsr0l	equ	0xFE9
  1263                           wreg	equ	0xFE8
  1264                           fsr1h	equ	0xFE2
  1265                           fsr1l	equ	0xFE1
  1266                           bsr	equ	0xFE0
  1267                           indf2	equ	0xFDF
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272                           	psect	rparam
  1273  0000                     pclatu	equ	0xFFB
  1274                           pclath	equ	0xFFA
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           prodh	equ	0xFF4
  1280                           prodl	equ	0xFF3
  1281                           intcon	equ	0xFF2
  1282                           postinc0	equ	0xFEE
  1283                           fsr0h	equ	0xFEA
  1284                           fsr0l	equ	0xFE9
  1285                           wreg	equ	0xFE8
  1286                           fsr1h	equ	0xFE2
  1287                           fsr1l	equ	0xFE1
  1288                           bsr	equ	0xFE0
  1289                           indf2	equ	0xFDF
  1290                           fsr2h	equ	0xFDA
  1291                           fsr2l	equ	0xFD9
  1292                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      47
    BANK0           160      0      80
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    writeStringToUART@msg	PTR const unsigned char  size(2) Largest target is 128
		 -> stock_led(BANK1[128]), 


Critical Paths under _main in COMRAM

    _main->_writeStringToUART

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _timer_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _timer_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _timer_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _timer_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _timer_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _timer_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _timer_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _timer_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _timer_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _timer_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _timer_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _timer_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     282
                                             36 COMRAM     8     8      0
                          _initComms
                          _initPorts
                       _multiplexeur
                  _writeStringToUART
 ---------------------------------------------------------------------------------
 (1) _writeStringToUART                                    2     0      2      98
                                             34 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _multiplexeur                                         1     1      0      22
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initComms                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_isr                                           17    17      0       0
                                             17 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initComms
   _initPorts
   _multiplexeur
   _writeStringToUART

 _low_isr (ROOT)

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      80       8       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      2F       1       49.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF       6        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Nov  8 14:51:20 2014

               __CFG_CP0$ON 000000                 __CFG_CP1$ON 000000                 __CFG_CP2$ON 000000  
               __CFG_CP3$ON 000000                          l80 02D4                          l81 02D8  
                        l65 0232                          l82 02DC                          l74 02C0  
                        l76 02C4                          l77 02C8                          l78 02CC  
                        l79 02D0                 __CFG_CPB$ON 000000                 __CFG_CPD$ON 000000  
                        bsr 000FE0                 __CFG_BORV$3 000000                         l116 03AE  
                       l913 0286                         l851 02E0                         l859 03C2  
                       l883 0196                         _GIE 007F97                         u205 0208  
                       u215 0230                         u225 025C                         u235 0284  
                       u245 02AA                         u195 01C4                         _PSA 007EAB  
                       _msg 0060                         prod 000FF3                         wreg 000FE8  
              __CFG_IESO$ON 000000                  _TXSTA2bits 000FBA                        _ADON 007E10  
                      _T0CS 007EAD                        _PEIE 007F96                        i1l56 0122  
              __CFG_WRT0$ON 000000                __CFG_WRT1$ON 000000                __CFG_WRT2$ON 000000  
              __CFG_WRT3$ON 000000               __CFG_EBTR0$ON 000000               __CFG_EBTR1$ON 000000  
             __CFG_EBTR2$ON 000000               __CFG_EBTR3$ON 000000                __CFG_WRTB$ON 000000  
              __CFG_WRTC$ON 000000                __CFG_WRTD$ON 000000               __CFG_EBTRB$ON 000000  
                      _main 016E                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 016A  
             __CFG_RETEN$ON 000000                _BAUDCON2bits 000FB9                       ?_main 0001  
                     _T0PS0 007EA8                       _T0PS1 007EA9                       _T0PS2 007EAA  
                     _RC2IF 007D25                       i1l873 008E                       i1l869 0074  
                     _SPBRG 000FAF                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94              __CFG_FCMEN$OFF 000000                       main@i 0025  
                     main@j 0029             __end_of_low_isr 00DA                       tablat 000FF5  
         _writeStringToUART 03AC                       status 000FD8               multiplexeur@n 0023  
        ?_writeStringToUART 0023              __CFG_MCLRE$OFF 000000             __initialization 0384  
              __end_of_main 02AC         ??_writeStringToUART 0025                      ??_main 0025  
             __activetblptr 000002              __CFG_PLLCFG$ON 000000                      _ANCON0 000F5D  
                    _T08BIT 007EAE   __end_of_writeStringToUART 03D2             __CFG_BBSIZ$BB2K 000000  
            __CFG_WDTEN$OFF 000000                      _INTCON 000FF2                      _RCREG2 000F7A  
                    _OSCCON 000FD3                      _TMR0IE 007F95                      _TMR0IF 007F92  
                    _SPBRG2 000F7B                      _TXREG2 000F79              __CFG_PWRTEN$ON 000000  
            __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000                      clear_0 038A  
                    clear_1 0396                      _tampon 002F                   ??_low_isr 0001  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                __accesstop 0060     __end_of__initialization 03A2              __pcstackCOMRAM 0001  
__size_of_writeStringToUART 0026                  __pbssBANK0 0060                  __pbssBANK1 0100  
        __size_of_initComms 0040          __size_of_initPorts 0030            __CFG_CANMX$PORTB 000000  
        __size_of_timer_isr 0090                     _SPBRGH2 000F7C                     __Hparam 0000  
                   __Lparam 0000                     __pcinit 0384                     __ramtop 0F00  
                   __ptext0 016E                     __ptext1 03AC                     __ptext2 02AC  
                   __ptext3 0354                     __ptext4 0314           __end_of_initComms 0354  
         __end_of_initPorts 0384           __CFG_MSSPMSK$MSK7 000000                     _low_isr 0018  
      writeStringToUART@msg 0023        end_of_initialization 03A2               __Lmediumconst 0000  
         __end_of_timer_isr 016A                     postinc0 000FEE                   _PORTAbits 000F80  
                 _PORTCbits 000F82            __CFG_FOSC$INTIO1 000000               ?_multiplexeur 0001  
            ??_multiplexeur 0023         start_initialization 0384              _flag_reception 002E  
               __pbssCOMRAM 002D                 __pintcodelo 0018                    ?_low_isr 0001  
                 _initComms 0314                   _initPorts 0354                    _PIE3bits 000FA3  
      __end_of_multiplexeur 0314                    _PIR3bits 000FA4                    _RCONbits 000FD0  
                 _timer_isr 00DA            __CFG_SOSCSEL$DIG 000000                   _stock_led 0100  
                ?_initComms 0001                  ?_initPorts 0001                    __Hrparam 0000  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000                  ?_timer_isr 0001  
          __size_of_low_isr 00C2                    _compteur 002D               __size_of_main 013E  
       __CFG_INTOSCSEL$HIGH 000000                 _OSCTUNEbits 000F9B                 ??_initComms 0023  
               ??_initPorts 0023                    intlevel1 0000       __size_of_multiplexeur 0068  
                _RCSTA2bits 000FA6          __CFG_WDTPS$1048576 000000                 ??_timer_isr 0012  
              _multiplexeur 02AC         __CFG_BORPWR$ZPBORMV 000000  
